{
  "compatibilityLevel": 1567,
  "model": {
    "annotations": [
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "0"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.128.1380.0 (24.04)"
      },
      {
        "name": "PBI_QueryOrder",
        "value": "[\"Api Key\",\"Email Address\",\"StartDate\",\"FirmID\",\"fxGetBigTimeData\",\"ConverUnixTime\",\"Expenses\",\"Staffers\",\"Projects\",\"CostCenter1\",\"CostCenter2\",\"CostCenter3\",\"StaffOrganization\",\"StaffStatus\",\"StaffType\",\"Time Entries\",\"Tasks\",\"Capacity\",\"Invoices\",\"fxGetBigTimeDataWithAPIKey\",\"Rates\",\"RateType\",\"Allocations\",\"fxGetExpenses\",\"fxDetectColumnTypeAll\",\"fxDetectColumnTypeUDF\",\"fxSHA256\",\"fxHashColumns\",\"fxSampleData\",\"Report Level Measures\",\"License Root URL\",\"Keys\",\"HasValidLicense\",\"Post History\"]"
      },
      {
        "name": "__TEdtr",
        "value": "1"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"CalcGroup\",\"DevMode\"]"
      }
    ],
    "culture": "en-US",
    "cultures": [
      {
        "name": "en-US",
        "linguisticMetadata": {
          "content": {
            "Language": "en-US",
            "Version": "1.0.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "discourageImplicitMeasures": true,
    "expressions": [
      {
        "name": "Email Address",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Text"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "description": "Your email address",
        "expression": "\"sampledata\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "33534d11-7687-43e0-a742-2e420f913390",
        "queryGroup": "Params"
      },
      {
        "name": "fxGetBigTimeData",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "(Endpoint as text, optional Postdata) =>",
          "//Postdata is for calling the Expense endpoint",
          "  let",
          "    url = \"https://iq.bigtime.net\",",
          "",
          "    Get = Json.Document(",
          "      Web.Contents(",
          "        url,",
          "        [Headers = [#\"X-auth-APItoken\" = #\"Api Key\", #\"Content-Type\" = \"application/json\", Connection=\"keep-alive\", #\"X-auth-realm\"=FirmID], RelativePath = \"/BigtimeData/api/v2/\" & Endpoint]",
          "      )",
          "    ),",
          "    // Post2 is only used in the case of expenses which require an additional post request",
          "    Post2 = Json.Document(",
          "      Web.Contents(",
          "        url,",
          "        [Headers = [#\"X-auth-APItoken\" = #\"Api Key\", #\"Content-Type\" = \"multipart/form-data\"], RelativePath = \"/BigtimeData/api/v2/\" & Endpoint, Content = Postdata]",
          "      )",
          "    ),",
          "    FinalCall = if Postdata <> null then Post2 else Get //Use Post2 if the optional postdata has been included",
          "  in",
          "    FinalCall"
        ],
        "kind": "m",
        "lineageTag": "5d207f99-e978-4e0d-b016-224c68954974",
        "queryGroup": "Params"
      },
      {
        "name": "CostCenter1",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = fxGetBigTimeData(\"picklist/fieldValues/CCenter1\"),",
          "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"Id\", \"Name\", \"IsInactive\"}, {\"Id\", \"Name\", \"IsInactive\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\",{{\"Id\", Int64.Type}, {\"Name\", type text}, {\"IsInactive\", type logical}}),",
          "    Buffer = Table.Buffer(#\"Changed Type\")",
          "in",
          "    Buffer"
        ],
        "kind": "m",
        "lineageTag": "3d93fad2-92e7-4706-8895-3f3aa2ccb71d",
        "queryGroup": "Intermediate"
      },
      {
        "name": "CostCenter2",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = fxGetBigTimeData(\"picklist/fieldValues/CCenter2\"),",
          "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"Id\", \"Name\", \"IsInactive\"}, {\"Id\", \"Name\", \"IsInactive\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\",{{\"Id\", Int64.Type}, {\"Name\", type text}, {\"IsInactive\", type logical}}),",
          "    Buffer = Table.Buffer(#\"Changed Type\")",
          "in",
          "    Buffer"
        ],
        "kind": "m",
        "lineageTag": "dc09abd1-9422-4826-b1c6-5581c37e6548",
        "queryGroup": "Intermediate"
      },
      {
        "name": "CostCenter3",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = fxGetBigTimeData(\"picklist/fieldValues/CCenter3\"),",
          "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"Id\", \"Name\", \"IsInactive\"}, {\"Id\", \"Name\", \"IsInactive\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\",{{\"Id\", Int64.Type}, {\"Name\", type text}, {\"IsInactive\", type logical}}),",
          "    Buffer = Table.Buffer(#\"Changed Type\")",
          "in",
          "    Buffer"
        ],
        "kind": "m",
        "lineageTag": "6302b282-5b26-48a1-8da7-07930c8342b5",
        "queryGroup": "Intermediate"
      },
      {
        "name": "StaffOrganization",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = fxGetBigTimeData(\"picklist/FieldValues/StaffOrgList\"),",
          "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"Id\", \"Name\", \"IsInactive\"}, {\"Id\", \"Name\", \"IsInactive\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\",{{\"Id\", Int64.Type}, {\"Name\", type text}, {\"IsInactive\", type logical}}),",
          "    Buffer = Table.Buffer(#\"Changed Type\")",
          "in",
          "    Buffer"
        ],
        "kind": "m",
        "lineageTag": "d2770a39-5fbd-457a-aa9d-d5d02dccf93f",
        "queryGroup": "Intermediate"
      },
      {
        "name": "StaffStatus",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = fxGetBigTimeData(\"picklist/FieldValues/StatusStaff\"),",
          "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"Id\", \"Name\", \"IsInactive\"}, {\"Id\", \"Name\", \"IsInactive\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\",{{\"Id\", Int64.Type}, {\"Name\", type text}, {\"IsInactive\", type logical}}),",
          "    Buffer = Table.Buffer(#\"Changed Type\")",
          "in",
          "    Buffer"
        ],
        "kind": "m",
        "lineageTag": "7013f294-b098-40e8-b4a1-8e99cd6886cf",
        "queryGroup": "Intermediate"
      },
      {
        "name": "StaffType",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = fxGetBigTimeData(\"picklist/FieldValues/LookupStaffType\"),",
          "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"Id\", \"Name\", \"IsInactive\"}, {\"Id\", \"Name\", \"IsInactive\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\",{{\"Id\", Int64.Type}, {\"Name\", type text}, {\"IsInactive\", type logical}}),",
          "    Buffer = Table.Buffer(#\"Changed Type\")",
          "in",
          "    Buffer"
        ],
        "kind": "m",
        "lineageTag": "65d8b964-21ff-412e-bb17-544bcb5a5aae",
        "queryGroup": "Intermediate"
      },
      {
        "name": "StartDate",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Text"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "description": "The earliest date for which you want to import Big Time data. If refreshes are slow or time out, set this to a more recent date. To import all history, set this to a date prior to the inception of your Big Time environment. Use the format YYYY-MM-DD",
        "expression": "\"2015-01-01\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "129d63be-9979-4bbb-8655-b3cbd409e769",
        "queryGroup": "Params"
      },
      {
        "name": "ConverUnixTime",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "(timestamp as any) =>",
          "let",
          "    Source = #datetime(1970, 1, 1, 0, 0, 0) + #duration(0, 0, 0, timestamp)",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "897501e1-528f-46d2-9713-6f67cfafc2a4",
        "queryGroup": "Params"
      },
      {
        "name": "fxGetBigTimeDataWithAPIKey",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "(Endpoint as text, optional Postdata as text) =>",
          "//Postdata is for calling the Expense endpoint",
          "  let",
          "//    username = Username,",
          "//    password = Password,",
          "    url = \"https://iq.bigtime.net\",",
          "//    FormData = \"{UserId: '\" & username & \"', Pwd: '\" & password & \"'}\",",
          "/*    Post = Json.Document(",
          "      Web.Contents(",
          "        url,",
          "        [",
          "          Headers      = [#\"Content-Type\" = \"application/json\"],",
          "          RelativePath = \"/session\",",
          "          Content      = Text.ToBinary(FormData)",
          "        ]",
          "      )",
          "    ),",
          "    Token = Post[token],",
          "    FirmId = Post[firm],",
          "*/",
          "    Get = Json.Document(",
          "      Web.Contents(",
          "        url,",
          "        [Headers = [#\"X-auth-APItoken\" = #\"Api Key\", Connection=\"keep-alive\"], RelativePath = \"/BigtimeData/api/v2/\" & Endpoint, Timeout=#duration(0, 5, 0, 0)]",
          "      )",
          "    ),",
          "    // Post2 is only used in the case of expenses which require an additional post request",
          "    Post2 = Json.Document(",
          "      Web.Contents(",
          "        url//,",
          "//        [Headers = [#\"X-auth-token\" = Token, #\"X-auth-realm\" = FirmId], RelativePath = Endpoint, Content = Text.ToBinary(Postdata)]",
          "      )",
          "    ),",
          "    FinalCall = if Postdata <> null then Post2 else Get //Use Post2 if the optional postdata has been included",
          "  in",
          "    FinalCall"
        ],
        "kind": "m",
        "lineageTag": "670864d8-108b-410b-9429-16d4e011b048",
        "queryGroup": "Params"
      },
      {
        "name": "RateType",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = fxGetBigTimeData(\"picklist/FieldValues/ratetypesimple\"),",
          "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"Id\", \"Name\", \"IsInactive\"}, {\"Id\", \"Name\", \"IsInactive\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\",{{\"Id\", type text}, {\"Name\", type text}, {\"IsInactive\", type logical}}),",
          "    Buffer = Table.Buffer(#\"Changed Type\")",
          "in",
          "    Buffer"
        ],
        "kind": "m",
        "lineageTag": "12618ebe-9057-4044-95d2-3207c27e8f6f",
        "queryGroup": "Intermediate"
      },
      {
        "name": "fxGetExpenses",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "(Postdata ) =>",
          "let",
          "  url = \"https://iq.bigtime.net\",",
          "  Endpoint = \"/expense/reportbyfilter/\",",
          "  Custom = Text.ToBinary(Uri.BuildQueryString(Postdata)),",
          "  Post= Json.Document(",
          "      Web.Contents(",
          "        url,",
          "        [Headers = [#\"X-auth-APItoken\" = #\"Api Key\", ",
          "                    #\"Cache-Control\"=\"no-cache\", ",
          "                    #\"Content-Type\" = \"application/x-www-form-urlencoded\",",
          "                    #\"X-auth-realm\"=FirmID],",
          "        RelativePath = \"/BigtimeData/api/v2/\" & Endpoint, ",
          "        Content = Custom",
          "      ]",
          "      )",
          "    )",
          "in",
          "Post"
        ],
        "kind": "m",
        "lineageTag": "72560e82-feed-43c4-92c7-22fbbe50710e",
        "queryGroup": "Params"
      },
      {
        "name": "fxDetectColumnTypeUDF",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "// Adapted from https://datachant.com/2018/05/14/automatic-detection-of-column-types-in-powerquery/",
          "",
          "(SourceTable, UDFColumns)=>",
          "let",
          "    ",
          "FnDetectType =",
          "    (SourceTable, ColumnName)=>",
          "    let",
          "        ListColumn = List.Select(Table.Column(SourceTable,ColumnName), each _ <> null and _ <> \"\"),",
          "        NumberPercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each _ is number)",
          "            ) / List.Count(ListColumn),",
          "        IntPercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each _ is number and _ = Number.Round(_, 0))",
          "            ) / List.Count(ListColumn),",
          "        DatePercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each (try Date.From(_) otherwise _) is date)",
          "            ) / List.Count(ListColumn),",
          "/*        DateTimePercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each _ is datetime)",
          "            ) / List.Count(ListColumn),",
          "*/",
          "        Max = List.Max(",
          "            {NumberPercentage, DatePercentage, IntPercentage}",
          "        ),",
          "        Result =",
          "            if Max < .95 then",
          "                {ColumnName, type text}",
          "            else if DatePercentage = Max then",
          "                {ColumnName, type date}",
          "            else if IntPercentage = Max then",
          "                {ColumnName, Int64.Type}",
          "            else",
          "                {ColumnName, type number}",
          "    in",
          "        Result,",
          "",
          "    ConvertTypesList =",
          "        List.Transform(",
          "            UDFColumns,",
          "            each FnDetectType(SourceTable, _)",
          "        ),",
          "    ConvertedTable = Table.TransformColumnTypes(SourceTable, ConvertTypesList)",
          "in",
          "    ConvertedTable"
        ],
        "kind": "m",
        "lineageTag": "51d232e4-a58a-4df5-b5ad-1156aebce14c",
        "queryGroup": "Params"
      },
      {
        "name": "Api Key",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "description": "Enter your Big Time API Key. Visit https://standupanalytics.com/docs/getting-started for info on how to find this key in Big Time",
        "expression": "\"abcdef\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "38d40c22-ea73-4b36-a476-9ac273986c0b",
        "queryGroup": "Params"
      },
      {
        "name": "fxSHA256",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "/*",
          "",
          "let",
          "    BKDRHashFunction = (input, seed) => ",
          "    let",
          "        ListChars = Text.ToList(input),",
          "        ListNumbers = List.Transform(ListChars, each Character.ToNumber(_)),",
          "        HashNumber = List.Accumulate(ListNumbers, 0, (state, current) => Number.Mod((state * seed + current),2147483647))",
          "    in",
          "        HashNumber",
          "in",
          "    BKDRHashFunction",
          "",
          "    */",
          "",
          "(text as text) as text => ",
          "let",
          "    input = text,",
          "    len = Text.Length(input),",
          "    nChunks = Number.RoundUp( ( len * 8 + 65 ) / 512 ),",
          "    bytes = nChunks * 64,",
          "    output = Text.ToBinary(input, TextEncoding.Ascii),",
          "",
          "    /*Define Constants*/",
          "    t = List.Transform({0..32}, each Number.Power(2, _)),",
          "    h0 = { 1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225 },",
          "    k = {",
          "        1116352408, 1899447441, 3049323471, 3921009573,  961987163, 1508970993, 2453635748, 2870763221,",
          "        3624381080,  310598401,  607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580,",
          "        3835390401, 4022224774,  264347078,  604807628,  770255983, 1249150122, 1555081692, 1996064986,",
          "        2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711,  113926993,  338241895,",
          "         666307205,  773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037,",
          "        2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909,  275423344,",
          "         430227734,  506948616,  659060556,  883997877,  958139571, 1322822218, 1537002063, 1747873779,",
          "        1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298 },",
          "    ",
          "    /*Define Functions*/",
          "    XOR = Number.BitwiseXor,",
          "    AND = Number.BitwiseAnd,",
          "\tMOD32 = (n) => Number.Mod(n, t{32}),",
          "    RROT32 = (n, r) => Number.BitwiseShiftRight(n, r) + t{32-r} * Number.Mod(n, t{r}),",
          "    s0 = (w) => XOR(XOR(RROT32(w,  7), RROT32(w, 18)), Number.BitwiseShiftRight(w,  3)),",
          "    s1 = (w) => XOR(XOR(RROT32(w, 17), RROT32(w, 19)), Number.BitwiseShiftRight(w, 10)),",
          "\tS1 = (w) => XOR(XOR(RROT32(w,  6), RROT32(w, 11)), RROT32(w, 25)),",
          "\tS0 = (w) => XOR(XOR(RROT32(w,  2), RROT32(w, 13)), RROT32(w, 22)),",
          "",
          "    /*Main compression function*/",
          "    CHUNK = (hash, w) =>",
          "        let",
          "            G = List.Generate(",
          "                () => [",
          "                        i = -1,",
          "                        a = hash{0}, b = hash{1}, c = hash{2}, d = hash{3},",
          "                        e = hash{4}, f = hash{5}, g = hash{6}, h = hash{7},",
          "                        temp1 = 0, temp2 = 0, ch = 0, maj = 0",
          "                    ],",
          "                each [i] < 64,",
          "                each [",
          "                        ch    = XOR(AND([e], [f]), AND(XOR([e], t{32} - 1), [g])),",
          "                        temp1 = MOD32([h] + S1([e]) + ch + k{i} + w{i}),",
          "                        maj   = XOR(XOR(AND([a], [b]), AND([a], [c])), AND([b], [c])),",
          "                        temp2 = MOD32(S0([a]) + maj),",
          "                        h = [g],",
          "                        g = [f],",
          "                        f = [e],",
          "                        e = MOD32([d] + temp1),",
          "                        d = [c],",
          "                        c = [b],",
          "                        b = [a],",
          "                        a = MOD32(temp1 + temp2),",
          "                        i = [i] + 1",
          "                    ]//,",
          "                //each [s]",
          "            ),",
          "            list_abc = Record.ToList(Record.SelectFields(List.Last(G), {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"}))",
          "        in",
          "            list_abc,",
          "",
          "    /*Create Message Schedule (w)*/",
          "    list_bytes  = {1..bytes},",
          "    list_chunks = List.Transform(list_bytes, each Number.IntegerDivide((_ - 1), 64)),",
          "    list_words  = List.Transform(list_bytes, each Number.Mod(Number.IntegerDivide((_ - 1), 4), 16)),",
          "    list_chars  = List.Transform(list_bytes, each",
          "        if _ < len + 1 then Character.ToNumber(Text.At(input, _ - 1))",
          "        else if _ = len + 1 then 128",
          "        else if _ > bytes - 8 then Number.Mod(Number.BitwiseShiftRight(len * 8, (bytes - _) * 8), 256)",
          "        else 0",
          "        ),",
          "    lists_table = Table.FromColumns( {list_bytes, list_chunks, list_words, list_chars }, {\"index\", \"chunk\", \"word\", \"u\"}),",
          "    group_words = Table.Buffer( Table.Group(lists_table, {\"chunk\", \"word\"}, {{\"w\", ",
          "        each List.Accumulate([u], 0, (state, current) => 256 * state + current), Int32.Type}}) ),",
          "",
          "    /*Loop through chunks*/",
          "    update_hash = List.Accumulate(",
          "            {0..nChunks - 1},",
          "            h0, /*Initial hash*/",
          "            (state, current) =>",
          "                let",
          "                    w16 = List.Range(group_words[w], 16 * current, 16),",
          "                    w48 = List.Generate(",
          "                        () => [i = 15, w = w16, s = 0],",
          "                        each [i] < 64,",
          "                        each [",
          "                                s = MOD32([w]{i - 16} + s0([w]{i - 15}) + [w]{i - 7} + s1([w]{i - 2})),",
          "                                w = [w] & { s },",
          "                                i = [i] + 1",
          "                            ],",
          "                        each [s]",
          "                    ),",
          "                    w64 = w16 & List.Skip(w48),",
          "                    hash = CHUNK(state, w64),",
          "                    endstate = List.Transform({0..7}, each MOD32(state{_} + hash{_}))",
          "                in",
          "                    endstate",
          "        ),",
          "",
          "    /*Convert hash to hex code*/",
          "    hash_bytes  = List.Transform(update_hash,",
          "        (hash) => List.Transform({0..3},",
          "            (byte) => Number.BitwiseShiftRight(Number.Mod(hash, t{32 - 8 * byte}), 24 - 8 * byte))),",
          "    hash_hex    = List.Transform(hash_bytes, each Binary.ToText(Binary.FromList(_), BinaryEncoding.Hex)),",
          "    concatenate = Text.Combine(hash_hex)",
          "in",
          "    concatenate"
        ],
        "kind": "m",
        "lineageTag": "d71b9dfe-4b96-4b2b-928b-a05c92b48696",
        "queryGroup": "Params"
      },
      {
        "name": "fxHashColumns",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "(list as list) as list =>",
          "",
          "let",
          "    Source = List.Buffer(list),",
          "    Custom1 = List.Transform(Source, each {_} & {fxSHA256} & {type text})",
          "in",
          "    Custom1"
        ],
        "kind": "m",
        "lineageTag": "bfa23468-e3bb-4c06-9f01-1c6e5828391f",
        "queryGroup": "Params"
      },
      {
        "name": "fxSampleData",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "(tblName as text) =>",
          "",
          "let",
          "",
          "",
          "",
          "/*",
          "    Source = PowerPlatform.Dataflows(null),",
          "    Workspaces = Source{[Id=\"Workspaces\"]}[Data],",
          "    #\"4cf54757-4af4-4396-aecc-c3ddff3530d7\" = Workspaces{[workspaceId=\"4cf54757-4af4-4396-aecc-c3ddff3530d7\"]}[Data],",
          "    #\"7f799a7c-0111-4abd-a319-dd623857c4fb\" = #\"4cf54757-4af4-4396-aecc-c3ddff3530d7\"{[dataflowId=\"7f799a7c-0111-4abd-a319-dd623857c4fb\"]}[Data],",
          "    Result = #\"7f799a7c-0111-4abd-a319-dd623857c4fb\"{[entity=tblName,version=\"\"]}[Data],",
          "*/",
          "Allocations = \"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\",",
          "Rates = \"H4sIAAAAAAAEAM2YTW/bMAyG/4vPOYgSSZG97QMYehvWYpdhh2Bri2xFMrTZadh/H+2iiCVnW8xaQHzyhwg8eEW+FP3pV/f+Yfft5sv+6vJtd0EYIqWw6j6s9zdXm6/dBdozqqy66/Xj9+GNfX2z3j/f9gsv7bbb7rY33dPzx/X98O1qv769HRYm0ES86t497H7+eA59vbm/32zv+ohD/KvHx83d9no3Cvu9qiADGSVWkERxPiSEAjMqqobZmE9hE0zTEnOtJSk5MJmaYXKQwEFHmBREQNWBmdphEkellCvMGByZ2RQzoGaGctOR0KNmbIjZ56bGMaZoRs4OTGpXQhxNvChjTGVb51GzISapKqMWaiYMgCNMc7IUJPGpKRrbiYoJsUhRAhAgx973+TIy+Rih35q5Jj+ETTU10yszlHNkhULTABARDrBCkZH5dGRzP5ov7FPY/5F7i8qalkVeUmWmvuzHrZStJTI7WqmWDT+nADKfcgg71vBD1spUc2ZPw6d2KfsXTE+LOoLpUHMIOxGz37+5mFJ5KoWEDpfqw06gZBYET4eqxFy05qeYoij8YjFbF9BA6SjzipKBs+NcP4RNG1M2L+KiMWXAwvLP4OzEQCR9So3FpJA9mYntCmiKad2IFR2ZOcFc+CRKQSo3kuQa5qhWE6NLTYynYqYFxo8lN51scINiSgKKkjwH5oabfgTTJs4UHJtOtZjQD4nzxbSwqR9JxlD6UZJMngG+5fRh5g46LvRk44gUnRJsjGJbdaBlimDXPz20YQKY1RNU0qKmc/s3QvaeynLikJOnI7XERCRAKTBjQtcPsYaYg4fGWHtoxvOqJ87C1gLGaibQLB6rLz30ZdPG5z+rPJfMrBUAAA==\",",
          "Invoices = \"\",",
          "Capacity = \"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\",",
          "Expenses = \"\",",
          "#\"Time Entries\" = \"\",",
          "Tasks = \"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\",",
          "Staffers = \"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\",",
          "Projects = \"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\",",
          "",
          "    Result = if tblName = \"Allocations\" then Allocations else if tblName = \"Rates\" then Rates else if tblName = \"Invoices\" then Invoices else if tblName = \"Capacity\" then Capacity else if ",
          "        tblName = \"Expenses\" then Expenses else if tblName = \"Time Entries\" then #\"Time Entries\" else if tblName = \"Tasks\" then Tasks else if tblName = \"Staffers\" then Staffers else if ",
          "        tblName = \"Projects\" then Projects else null,",
          "    ConvertToList =  Json.Document( Text.FromBinary( Binary.Decompress( Binary.FromText( Result ), Compression.GZip ) ) ),",
          "    ConvertToTable =  Table.FromList( ConvertToList , Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
          "    RecordNames = Record.FieldNames(ConvertToList{0}),",
          "    Expand = Table.ExpandRecordColumn(ConvertToTable, \"Column1\", RecordNames),",
          "    #\"Change Type\" = fxDetectColumnTypeAll(Expand)",
          "in",
          "    #\"Change Type\""
        ],
        "kind": "m",
        "lineageTag": "af961874-f8fd-4278-82cf-e74d7d013134",
        "queryGroup": "Params"
      },
      {
        "name": "fxDetectColumnTypeAll",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "// https://datachant.com/2018/05/14/automatic-detection-of-column-types-in-powerquery/",
          "",
          "(SourceTable)=>",
          "let",
          "    ",
          "FnDetectType =",
          "    (SourceTable, ColumnName)=>",
          "    let",
          "        ListColumn = Table.Column(SourceTable,ColumnName),",
          "        NumberPercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each _ is number)",
          "            ) / List.Count(ListColumn),",
          "        IntPercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each _ is number and _ = Number.Round(_, 0))",
          "            ) / List.Count(ListColumn),",
          "        BooleanPercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each _ is logical)",
          "            ) / List.Count(ListColumn),",
          "        DatePercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each try Date.From(_) >= #date(2022,1,1) or Date.From(_) <= #date(2023,12,31) otherwise false)",
          "            ) / List.Count(ListColumn),",
          "        DateTimePercentage =",
          "            List.Count(",
          "                List.Select(ListColumn , each _ is datetime)",
          "            ) / List.Count(ListColumn),",
          "        Max = List.Max(",
          "            {NumberPercentage, DatePercentage, DateTimePercentage, IntPercentage, BooleanPercentage}",
          "        ),",
          "        Result =",
          "            if Max < .95 then",
          "                {ColumnName, type text}",
          "            else if IntPercentage = Max then",
          "                {ColumnName, Int64.Type}",
          "            else if BooleanPercentage = Max then",
          "                {ColumnName, type logical}",
          "            else if NumberPercentage = Max then",
          "                {ColumnName, type number}",
          "            else if DateTimePercentage = Max then",
          "                {ColumnName, type datetime}",
          "            else if DatePercentage = Max then",
          "                {ColumnName, type date}",
          "            else",
          "                {ColumnName, type number}",
          "    in",
          "        Result,",
          "",
          "    ConvertTypesList =",
          "        List.Transform(",
          "            Table.ColumnNames(SourceTable),",
          "            each FnDetectType(SourceTable, _)",
          "        ),",
          "    ConvertedTable = Table.TransformColumnTypes(SourceTable, ConvertTypesList)",
          "in",
          "    ConvertedTable"
        ],
        "kind": "m",
        "lineageTag": "d95c6371-4861-473c-869b-53f5211b63c1",
        "queryGroup": "Params"
      },
      {
        "name": "FirmID",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "expression": [
          "let",
          "    Source = Web.Contents(\"https://iq.bigtime.net\", [RelativePath=\"/BigtimeData/api/v2/session/firm\", Headers=[#\"Content-Type\"=\"application/json\",#\"X-auth-APItoken\" = #\"Api Key\"], Content=Text.ToBinary(\"\")]),",
          "    #\"Firm ID\" = Json.Document(Source)[firm]",
          "in",
          "    #\"Firm ID\""
        ],
        "kind": "m",
        "lineageTag": "01d1eeb4-9e98-43b7-96ce-581c1e0c0504",
        "queryGroup": "Params"
      },
      {
        "name": "Keys",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Record"
          }
        ],
        "expression": [
          "let",
          "    Source = [TrialsPath = \"/Trials\", RefreshHistoryPath = \"/RefreshHistory\", AzureAuth = \"9OVZcflnlaSEO6tWlt5TTDxduyp1xOTUgsaOVB40iMIlzi057v5fWV7zEapgGzqA\"]",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "fa0795fb-fa69-4224-a6e7-eeee963c24e3",
        "queryGroup": "Licensing"
      },
      {
        "name": "License Root URL",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "expression": [
          "let",
          "    Source = \"https://sua-license.azure-api.net/\"//\"https://xkpzjpdunokfggrdktyb.supabase.co\"",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "f68d71c7-005e-4563-a43e-d2b4b2e5eaaa",
        "queryGroup": "Licensing"
      }
    ],
    "queryGroups": [
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "1"
          }
        ],
        "folder": "Params"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "2"
          }
        ],
        "folder": "Intermediate"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "3"
          }
        ],
        "folder": "Sample Data"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "3"
          }
        ],
        "folder": "Licensing"
      }
    ],
    "relationships": [
      {
        "name": "b3ff5910-97c5-40d0-a3f7-b9baf91f140e",
        "fromColumn": "StaffSID",
        "fromTable": "Expenses",
        "toColumn": "StaffSID",
        "toTable": "Staffers"
      },
      {
        "name": "570a2ce0-f75b-491d-9bd1-2622ca15a871",
        "fromColumn": "StaffSid",
        "fromTable": "Capacity",
        "toColumn": "StaffSID",
        "toTable": "Staffers"
      },
      {
        "name": "49042d7a-4c10-4832-8f27-bc42de2800e5",
        "fromColumn": "TaskSID",
        "fromTable": "Time Entries",
        "toColumn": "TaskSID",
        "toTable": "Tasks"
      },
      {
        "name": "cd2cdd72-6a52-4693-815e-3e6ffd0ea0aa",
        "fromColumn": "TaskSID",
        "fromTable": "Expenses",
        "toColumn": "TaskSID",
        "toTable": "Tasks"
      },
      {
        "name": "ea3e8108-3005-4a29-9656-2c4f968b66b0",
        "fromColumn": "StaffSID",
        "fromTable": "Time Entries",
        "toColumn": "StaffSID",
        "toTable": "Staffers"
      },
      {
        "name": "8f8a7a84-3321-4493-a7b1-1a4cc0baacc2",
        "fromColumn": "ProjectSID",
        "fromTable": "Time Entries",
        "toColumn": "ProjectSID",
        "toTable": "Projects"
      },
      {
        "name": "4287448d-5a03-4125-a36e-7d0a40324545",
        "fromColumn": "ProjectSid",
        "fromTable": "Invoices",
        "toColumn": "ProjectSID",
        "toTable": "Projects"
      },
      {
        "name": "5af87be7-be00-439a-a968-7586c370cf8e",
        "fromColumn": "ProjectSID",
        "fromTable": "Expenses",
        "toColumn": "ProjectSID",
        "toTable": "Projects"
      },
      {
        "name": "7a06e061-fa22-486e-a6b3-0ef9c0cc830c",
        "fromColumn": "ProjectSid",
        "fromTable": "Capacity",
        "toColumn": "ProjectSID",
        "toTable": "Projects"
      },
      {
        "name": "70e2e691-e17f-40f2-b559-09023c23f623",
        "fromColumn": "Date",
        "fromTable": "Time Entries",
        "toColumn": "Date",
        "toTable": "Dates"
      },
      {
        "name": "2ea01373-d559-4188-9599-94162660377a",
        "fromColumn": "Invoice Date",
        "fromTable": "Invoices",
        "toColumn": "Date",
        "toTable": "Dates"
      },
      {
        "name": "68e88b47-93f6-46cb-ad03-0d4f8fc40f6a",
        "fromColumn": "Invoice Date Sent",
        "fromTable": "Invoices",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "Dates"
      },
      {
        "name": "b46bf90e-0d6f-4605-ad1a-34dde6b611ed",
        "fromColumn": "Invoice Due Date",
        "fromTable": "Invoices",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "Dates"
      },
      {
        "name": "4e9fa768-3f4d-4ffa-8541-eef57607f8e2",
        "fromColumn": "Invoice End Date",
        "fromTable": "Invoices",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "Dates"
      },
      {
        "name": "d17c27b7-41ae-4a48-9da9-47eba350acf4",
        "fromColumn": "Invoice Start Date",
        "fromTable": "Invoices",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "Dates"
      },
      {
        "name": "ec3e03d0-5a9c-48e7-ba22-e36ffa1e1403",
        "fromColumn": "Date",
        "fromTable": "Expenses",
        "toColumn": "Date",
        "toTable": "Dates"
      },
      {
        "name": "0f2cfee3-0eb7-434b-b224-2e3bf61e23d1",
        "fromColumn": "Period",
        "fromTable": "Capacity",
        "toColumn": "Date",
        "toTable": "Dates"
      },
      {
        "name": "7053adf9-a7d1-4356-b57f-4940533487af",
        "fromColumn": "ProjectSID",
        "fromTable": "Rates",
        "toColumn": "ProjectSID",
        "toTable": "Projects"
      },
      {
        "name": "182d1079-0640-4778-889d-fe78efbe8ccb",
        "fromColumn": "TaskSid",
        "fromTable": "Rates",
        "toColumn": "TaskSID",
        "toTable": "Tasks"
      },
      {
        "name": "30579b04-b7fc-49d2-b072-43576a71a832",
        "fromColumn": "StaffSid",
        "fromTable": "Rates",
        "toColumn": "StaffSID",
        "toTable": "Staffers"
      },
      {
        "name": "cd7c413c-248e-43ee-9e6a-c37415765563",
        "fromColumn": "StaffSID",
        "fromTable": "Allocations",
        "toColumn": "StaffSID",
        "toTable": "Staffers"
      },
      {
        "name": "77f2cdce-650d-4aa5-8d37-ce098b137890",
        "fromColumn": "ProjectSID",
        "fromTable": "Allocations",
        "toColumn": "ProjectSID",
        "toTable": "Projects"
      },
      {
        "name": "16591f6d-4e2c-4eeb-be01-2701f2b7ec99",
        "fromColumn": "TaskSID",
        "fromTable": "Allocations",
        "toColumn": "TaskSID",
        "toTable": "Tasks"
      },
      {
        "name": "82c1b99b-3532-4c77-a664-687a19f7565d",
        "fromColumn": "Period",
        "fromTable": "Allocations",
        "toColumn": "Date",
        "toTable": "Dates"
      }
    ],
    "sourceQueryCulture": "en-US",
    "tables": [
      {
        "name": "Staffers",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "StaffSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "isKey": true,
            "lineageTag": "1c236279-d37f-4c5c-8bb9-3ca27e67e5de",
            "sourceColumn": "StaffSID",
            "summarizeBy": "none"
          },
          {
            "name": "First Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "First (given) name",
            "lineageTag": "0996c0b4-2047-4d11-83e7-0737f3fc156b",
            "sourceColumn": "First Name",
            "summarizeBy": "none"
          },
          {
            "name": "Last Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Last (family) name.",
            "lineageTag": "dfb0eb5c-1f57-4f79-be54-a476fbeea106",
            "sourceColumn": "Last Name",
            "summarizeBy": "none"
          },
          {
            "name": "Full Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "cd12301c-0558-437f-ac59-e828bd19888e",
            "sourceColumn": "Full Name",
            "summarizeBy": "none"
          },
          {
            "name": "ManagerID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "99979a38-0f26-4412-b493-adf65f4282dd",
            "sourceColumn": "ManagerID",
            "summarizeBy": "count"
          },
          {
            "name": "Title",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Business title/position",
            "lineageTag": "1cdc994e-2ce4-463e-a866-0b5bdcfcfb2b",
            "sourceColumn": "Title",
            "summarizeBy": "none"
          },
          {
            "name": "Id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "5a68334d-5f06-4fa3-a60d-bdf248130af0",
            "sourceColumn": "Id",
            "summarizeBy": "count"
          },
          {
            "name": "Address",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d67d4d82-9c1f-416b-85c2-2076e3d4856f",
            "sourceColumn": "Address",
            "summarizeBy": "none"
          },
          {
            "name": "City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6233cc15-616f-4936-90d3-b9328dec3e1e",
            "sourceColumn": "City",
            "summarizeBy": "none"
          },
          {
            "name": "State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "450d857e-c997-4c05-b9b0-cc2afbb54b9d",
            "sourceColumn": "State",
            "summarizeBy": "none"
          },
          {
            "name": "Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "82500058-5fbe-4568-9b67-45ff5314acbe",
            "sourceColumn": "Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Country",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bed0c232-6892-4cfb-bfde-1c411b115fd5",
            "sourceColumn": "Country",
            "summarizeBy": "none"
          },
          {
            "name": "Tag",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "74590e4f-0f3a-4989-8545-cc1a43db6778",
            "sourceColumn": "Tag",
            "summarizeBy": "none"
          },
          {
            "name": "Full Address",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "cf18dda7-7598-441d-9384-6b69983277eb",
            "sourceColumn": "Full Address",
            "summarizeBy": "none"
          },
          {
            "name": "EMail",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Primary email address",
            "lineageTag": "73a86682-89e8-4451-a088-f47a1e2fc9e4",
            "sourceColumn": "EMail",
            "summarizeBy": "none"
          },
          {
            "name": "Cell Phone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "75edcd38-4c80-4acf-8318-6ccf121f5c84",
            "sourceColumn": "Cell Phone",
            "summarizeBy": "none"
          },
          {
            "name": "Work Phone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "eda0d520-8edf-4260-b6d0-779b652a5602",
            "sourceColumn": "Work Phone",
            "summarizeBy": "none"
          },
          {
            "name": "Home Phone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "36f8d822-290b-4139-a977-49d8b3528fab",
            "sourceColumn": "Home Phone",
            "summarizeBy": "none"
          },
          {
            "name": "Notes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "008af51b-aa1a-41c2-a9be-988af9b16732",
            "sourceColumn": "Notes",
            "summarizeBy": "none"
          },
          {
            "name": "Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "Inactive staffers have this value set to TRUE.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "fc0790fc-f3a3-4f4e-b30a-b932a6077803",
            "sourceColumn": "Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b31d068c-4099-49b6-8da0-77b20218318e",
            "sourceColumn": "Status",
            "summarizeBy": "sum"
          },
          {
            "name": "Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Start date for the staff member.",
            "lineageTag": "68130405-78fc-43b3-b723-e35b4da157ac",
            "sourceColumn": "Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "Term Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "When a staffer is terminated, this date contains the date it is closed \"as of.\"",
            "lineageTag": "2516c7e5-76e8-4ea4-aea3-8fe6204cb2e8",
            "sourceColumn": "Term Date",
            "summarizeBy": "none"
          },
          {
            "name": "Use Payroll Item",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if payroll item data should be posted to the accouting system (QuickBooks or Xero specifically) when BigTime posts timesheet data.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "5268191f-3666-4b1e-b5c1-08312f66d8e3",
            "sourceColumn": "Use Payroll Item",
            "summarizeBy": "none"
          },
          {
            "name": "Payroll Default",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ea12cd14-73d3-4a5c-91a4-ba4b6c058678",
            "sourceColumn": "Payroll Default",
            "summarizeBy": "sum"
          },
          {
            "name": "Created Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "UTC Date that the staffer was created in the system.",
            "formatString": "Long Date",
            "lineageTag": "f5af3ea5-864d-4b38-820e-0ee06bffa9f2",
            "sourceColumn": "Created Date",
            "summarizeBy": "none"
          },
          {
            "name": "Modified Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "UTC Date that the staffer was last modified by anyone (including external systems like QuickBooks or Xero).",
            "formatString": "Long Date",
            "lineageTag": "6821472d-48d1-4d01-99e7-41c5a09492a3",
            "sourceColumn": "Modified Date",
            "summarizeBy": "none"
          },
          {
            "name": "Default Labor Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f49a728e-c9f7-4e7c-be6d-8be7fc7570e8",
            "sourceColumn": "Default Labor Code",
            "summarizeBy": "count"
          },
          {
            "name": "Home Timezone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "05bee9e8-c368-4e61-a5ee-5dd830d5195e",
            "sourceColumn": "Home Timezone",
            "summarizeBy": "none"
          },
          {
            "name": "Capacity",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "We track total 'available' hours per staffer so that we can track utilization. This field will return the total hours this staffer has in a \"typical\" month (eg - 20 days). Most firms set this number between 140 and 160 by default.",
            "formatString": "0",
            "lineageTag": "32389db8-f177-4470-a661-967c218a5d66",
            "sourceColumn": "Capacity",
            "summarizeBy": "sum"
          },
          {
            "name": "Cost Factor",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "924a88bb-54a9-49f6-84b5-a339e5b6b81d",
            "sourceColumn": "Cost Factor",
            "summarizeBy": "sum"
          },
          {
            "name": "Hour Rate Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "09d40ecc-1f99-4d0b-a14f-0d326f049812",
            "sourceColumn": "Hour Rate Type",
            "summarizeBy": "sum"
          },
          {
            "name": "Rate1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Staff billing rate (there can be up to 5 billing rates assigned to each staff member and customer's can be assiged \"staff rate\" 1-5 as their base rate).",
            "formatString": "0",
            "lineageTag": "b6cc14eb-a313-43c4-9b3f-6936787ba589",
            "sourceColumn": "Rate1",
            "summarizeBy": "sum"
          },
          {
            "name": "Rate2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Staff billing rate (there can be up to 5 billing rates assigned to each staff member and customer's can be assiged \"staff rate\" 1-5 as their base rate).",
            "formatString": "0",
            "lineageTag": "65f3e084-d87f-4135-9cbf-bc082aa13dfa",
            "sourceColumn": "Rate2",
            "summarizeBy": "sum"
          },
          {
            "name": "Rate3",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Staff billing rate (there can be up to 5 billing rates assigned to each staff member and customer's can be assiged \"staff rate\" 1-5 as their base rate).",
            "formatString": "0",
            "lineageTag": "bcbfbff9-3e8d-4a36-9008-3322a2b564c9",
            "sourceColumn": "Rate3",
            "summarizeBy": "sum"
          },
          {
            "name": "Rate4",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Staff billing rate (there can be up to 5 billing rates assigned to each staff member and customer's can be assiged \"staff rate\" 1-5 as their base rate).",
            "formatString": "0",
            "lineageTag": "43f02a03-b4ac-43ce-a2bd-e8c23264166b",
            "sourceColumn": "Rate4",
            "summarizeBy": "sum"
          },
          {
            "name": "Rate5",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Staff billing rate (there can be up to 5 billing rates assigned to each staff member and customer's can be assiged \"staff rate\" 1-5 as their base rate).",
            "formatString": "0",
            "lineageTag": "17eb16d2-080a-4402-a941-9356dec78e90",
            "sourceColumn": "Rate5",
            "summarizeBy": "sum"
          },
          {
            "name": "CostCenter1ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b46f473e-3b28-4838-909b-02a80fe6e0cf",
            "sourceColumn": "CostCenter1ID",
            "summarizeBy": "count"
          },
          {
            "name": "CostCenter2ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "66f0b260-e618-491d-83c7-a3c4cd07451e",
            "sourceColumn": "CostCenter2ID",
            "summarizeBy": "count"
          },
          {
            "name": "CostCenter3ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "bf4740d0-cece-4574-8315-9c10140e27f6",
            "sourceColumn": "CostCenter3ID",
            "summarizeBy": "count"
          },
          {
            "name": "StaffOrgID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "4eb00968-9802-4b29-a202-30c06af56914",
            "sourceColumn": "StaffOrgID",
            "summarizeBy": "count"
          },
          {
            "name": "Staff Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "85e03bec-13ba-47e9-8ea9-d8f486f24b9c",
            "sourceColumn": "Staff Type",
            "summarizeBy": "sum"
          },
          {
            "name": "User Account Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "15076204-621a-4b94-8eca-62551190df22",
            "sourceColumn": "User Account Status",
            "summarizeBy": "none"
          },
          {
            "name": "QBClassDefaultId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "fc2df3c9-6407-4e18-92bb-44700560c175",
            "sourceColumn": "QBClassDefaultId",
            "summarizeBy": "count"
          },
          {
            "name": "Default Role",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c6feba84-6b39-4d76-bee9-c00fc4d1206d",
            "sourceColumn": "Default Role",
            "summarizeBy": "sum"
          },
          {
            "name": "Post Time As Billed",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "Set TRUE if a Staffer is set to create their time into a Vendor bill.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "dbb5bc5d-cd6a-4cb6-b4e2-42961418ef0c",
            "sourceColumn": "Post Time As Billed",
            "summarizeBy": "none"
          },
          {
            "name": "IAClassDefaultId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "a8c45572-f468-42d4-995d-513e13b24bc8",
            "sourceColumn": "IAClassDefaultId",
            "summarizeBy": "count"
          },
          {
            "name": "User Account Status Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "530d32d1-f179-463b-8796-ef9d50ba52ca",
            "sourceColumn": "User Account Status Name",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 1 Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "06336145-b240-48b5-9ddf-f9023e818bff",
            "sourceColumn": "Cost Center 1 Name",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 1 Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "06abdb5b-e65f-4943-9c40-51bfa696061d",
            "sourceColumn": "Cost Center 1 Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 2 Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "49e175cf-40cc-48ab-9d9c-30e66e83783b",
            "sourceColumn": "Cost Center 2 Name",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 2 Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "7e0abba4-4021-4f20-a660-4fb4bbb97476",
            "sourceColumn": "Cost Center 2 Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 3 Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "39e3460a-7aad-42e4-a7c1-344563b73410",
            "sourceColumn": "Cost Center 3 Name",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 3 Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "1cf5f473-9f4d-4a93-a7c2-05e17eb6d64f",
            "sourceColumn": "Cost Center 3 Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Organization Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f29a422b-3076-46fa-8e94-57fc3840283e",
            "sourceColumn": "Organization Name",
            "summarizeBy": "none"
          },
          {
            "name": "Organization Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "3106e0f2-8ef5-4a7e-9132-a156b9d8b41a",
            "sourceColumn": "Organization Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Manager Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "The staffer's manager",
            "lineageTag": "dd304f57-e5d2-435b-9fff-76e5b284f7a5",
            "sourceColumn": "Manager Name",
            "summarizeBy": "none"
          },
          {
            "name": "Staff Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "The status code controls the specific reason behind a staffer's deactivation (eg - on-leave, terminated). The available values for this list are controlled by the administrator in BigTime's settings section.",
            "lineageTag": "7b491bfe-dd34-4539-912c-8e02494e4611",
            "sourceColumn": "Staff Status",
            "summarizeBy": "none"
          },
          {
            "name": "Staff Status Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "efa94a0a-1272-45da-a6f8-67b25d28df14",
            "sourceColumn": "Staff Status Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Staff Type Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c220470c-8c2b-4b7b-9665-0b01e254a38f",
            "sourceColumn": "Staff Type Name",
            "summarizeBy": "none"
          },
          {
            "name": "Staff Type Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "20af6c1a-f315-4699-97b6-b26d20ceec64",
            "sourceColumn": "Staff Type Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Earliest Transaction Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "description": "The date on which a staffer first entered any hours",
            "expression": "FIRSTNONBLANK( Dates[Date], [Hours Entered] )",
            "formatString": "Short Date",
            "isDataTypeInferred": true,
            "lineageTag": "bf5aa5d9-9440-4447-b526-4a83023ff445",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Latest Transaction Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "description": "If a staffer is inactive, return the date of their final time entry. If currently active, return the last day of next year",
            "expression": [
              "",
              "VAR _Last = LASTNONBLANK( Dates[Date], [Hours Entered] ) // calculates last date of transaction activity for each staffer",
              "VAR _FutureDate = DATE( YEAR(TODAY() + 1), 12, 31)  // Last day of next year",
              "RETURN",
              "IF( Staffers[Is Inactive] = TRUE(), _Last, _FutureDate)  // For inactive staffers, return the final day of activity. For active staffers, return the last day of next year"
            ],
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "lineageTag": "ae3661d1-abea-4860-bc60-85b9b1513dce",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "d21a695a-3e64-4990-8e38-f6e28324fb10",
        "measures": [
          {
            "name": "Count of Any Active Staff",
            "description": "Calculates active staff based on staffers who had time entries during the selected time period. This calculation does not rely on the \"Is Inactive\" field since that field does not retain history",
            "expression": [
              "CALCULATE(",
              "    COUNT( Staffers[StaffSID] ),",
              "    CROSSFILTER( 'Time Entries'[StaffSID], Staffers[StaffSID], Both )",
              ")"
            ],
            "formatString": "#,##0",
            "lineageTag": "bdefb498-779d-4c62-bbdf-868f3a924e08"
          },
          {
            "name": "Current Headcount",
            "description": "Count of staffers currently listed as active ('Is Inactive' = False). Note that this is only accurate for today's date. It does not maintain history of active staffers at previous points in time. For that calculation, see measure 'Count of Active Staff'",
            "expression": "CALCULATE( COUNTROWS( VALUES( Staffers[StaffSID] ) ) , Staffers[Is Inactive] = FALSE() )",
            "formatString": "0",
            "lineageTag": "06d702ae-7dcd-45c5-845e-b7ac3af590f4"
          },
          {
            "name": "Count of Full Time Equivalent Staff (FTE)",
            "description": "Counts the number of active staffers relative to the time they were on board with the company. For example, if an employee was active from Jan 1st - June 30th and another employee was active from July 1st - December 31st, the weighted count is 1 because there was FTE throughout the year",
            "expression": [
              "",
              "VAR _CountDays = COUNTROWS( DISTINCT( Dates[Date] ))",
              "VAR _Iterate = SUMX( DISTINCT( Dates[Date]), VAR _DateRow = Dates[Date] RETURN CALCULATE( COUNTROWS( Staffers ), Staffers[Earliest Transaction Date] <= _DateRow && Staffers[Latest Transaction Date] >= _DateRow ) )",
              "RETURN DIVIDE( _Iterate , _CountDays )"
            ],
            "formatString": "#,0.00",
            "lineageTag": "23073f63-cc02-4a50-892d-1de7e8d8d7e8"
          }
        ],
        "partitions": [
          {
            "name": "Staffers",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = fxGetBigTimeData(\"/staff?ShowInactive=true\"),",
                "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"StaffSID\", \"FName\", \"SName\", \"FullName\", \"ManagerID\", \"Title\", \"Address\", \"EMail\", \"Phone_Cell\", \"Phone_Wk\", \"Phone_Hm\", \"Notes\", \"IsInactive\", \"Status\", \"Start_dt\", \"Term_dt\", \"UsePayrollItem\", \"PayrollDefault\", \"DtCreated\", \"DtModified\", \"DefaultLaborCode\", \"HomeTimezone\", \"Capacity\", \"CostFactor\", \"HourRateType\", \"Rate1\", \"Rate2\", \"Rate3\", \"Rate4\", \"Rate5\", \"CostCenterA\", \"CostCenterB\", \"CostCenterC\", \"StaffOrgID\", \"StaffType\", \"UserAccountStatus\", \"QBClassDefaultId\", \"DefaultRole\", \"PostTimeAsBilled\", \"IAClassDefaultId\", \"UserAccountStatusNm\"}, {\"StaffSID\", \"FName\", \"SName\", \"FullName\", \"ManagerID\", \"Title\", \"Address\", \"EMail\", \"Phone_Cell\", \"Phone_Wk\", \"Phone_Hm\", \"Notes\", \"IsInactive\", \"Status\", \"Start_dt\", \"Term_dt\", \"UsePayrollItem\", \"PayrollDefault\", \"DtCreated\", \"DtModified\", \"DefaultLaborCode\", \"HomeTimezone\", \"Capacity\", \"CostFactor\", \"HourRateType\", \"Rate1\", \"Rate2\", \"Rate3\", \"Rate4\", \"Rate5\", \"CostCenter1ID\", \"CostCenter2ID\", \"CostCenter3ID\", \"StaffOrgID\", \"StaffType\", \"UserAccountStatus\", \"QBClassDefaultId\", \"DefaultRole\", \"PostTimeAsBilled\", \"IAClassDefaultId\", \"UserAccountStatusNm\"}),",
                "    #\"Expanded Address\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"Address\", {\"Id\", \"Address\", \"City\", \"State\", \"Zip\", \"Country\", \"Tag\", \"FullAddress\"}, {\"Id\", \"Address\", \"City\", \"State\", \"Zip\", \"Country\", \"Tag\", \"FullAddress\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Address\",{{\"StaffSID\", Int64.Type}, {\"FName\", type text}, {\"SName\", type text}, {\"FullName\", type text}, {\"ManagerID\", Int64.Type}, {\"Title\", type text}, {\"Id\", Int64.Type}, {\"Address\", type text}, {\"City\", type text}, {\"State\", type text}, {\"Zip\", type text}, {\"Country\", type text}, {\"Tag\", type text}, {\"FullAddress\", type text}, {\"EMail\", type text}, {\"Phone_Cell\", type text}, {\"Phone_Wk\", type text}, {\"Phone_Hm\", type text}, {\"Notes\", type text}, {\"IsInactive\", type logical}, {\"Status\", Int64.Type}, {\"Start_dt\", type date}, {\"Term_dt\", type date}, {\"UsePayrollItem\", type logical}, {\"PayrollDefault\", Int64.Type}, {\"DtCreated\", type date}, {\"DtModified\", type date}, {\"DefaultLaborCode\", Int64.Type}, {\"HomeTimezone\", type text}, {\"Capacity\", type number}, {\"CostFactor\", Int64.Type}, {\"HourRateType\", Int64.Type}, {\"Rate1\", type number}, {\"Rate2\", type number}, {\"Rate3\", type number}, {\"Rate4\", type number}, {\"Rate5\", type number}, {\"CostCenter1ID\", Int64.Type}, {\"CostCenter2ID\", Int64.Type}, {\"CostCenter3ID\", Int64.Type}, {\"StaffOrgID\", Int64.Type}, {\"StaffType\", Int64.Type}, {\"UserAccountStatus\", type text}, {\"QBClassDefaultId\", Int64.Type}, {\"DefaultRole\", Int64.Type}, {\"PostTimeAsBilled\", type logical}, {\"IAClassDefaultId\", Int64.Type}, {\"UserAccountStatusNm\", type text}}),",
                "    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type\", {\"CostCenter1ID\"}, CostCenter1, {\"Id\"}, \"Cost Centers\", JoinKind.LeftOuter),",
                "    #\"Expanded Cost Centers\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Cost Centers\", {\"Name\", \"IsInactive\"}, {\"CostCenter1.Name\", \"CostCenter1.IsInactive\"}),",
                "    #\"Merged Queries1\" = Table.NestedJoin(#\"Expanded Cost Centers\", {\"CostCenter2ID\"}, CostCenter2, {\"Id\"}, \"CostCenter2\", JoinKind.LeftOuter),",
                "    #\"Expanded CostCenter2\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"CostCenter2\", {\"Name\", \"IsInactive\"}, {\"CostCenter2.Name\", \"CostCenter2.IsInactive\"}),",
                "    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded CostCenter2\", {\"CostCenter3ID\"}, CostCenter3, {\"Id\"}, \"CostCenter3\", JoinKind.LeftOuter),",
                "    #\"Expanded CostCenter3\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"CostCenter3\", {\"Name\", \"IsInactive\"}, {\"CostCenter3.Name\", \"CostCenter3.IsInactive\"}),",
                "    #\"Merged Queries3\" = Table.NestedJoin(#\"Expanded CostCenter3\", {\"StaffOrgID\"}, StaffOrganization, {\"Id\"}, \"StaffOrganization\", JoinKind.LeftOuter),",
                "    #\"Expanded StaffOrganization\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"StaffOrganization\", {\"Name\", \"IsInactive\"}, {\"StaffOrg.Name\", \"StaffOrg.IsInactive\"}),",
                "    #\"Merged Queries4\" = Table.NestedJoin(#\"Expanded StaffOrganization\", {\"ManagerID\"}, #\"Expanded StaffOrganization\", {\"StaffSID\"}, \"Expanded StaffOrganization\", JoinKind.LeftOuter),",
                "    #\"Expanded Expanded StaffOrganization\" = Table.ExpandTableColumn(#\"Merged Queries4\", \"Expanded StaffOrganization\", {\"FullName\"}, {\"Manager Name\"}),",
                "    #\"Merged Queries5\" = Table.NestedJoin(#\"Expanded Expanded StaffOrganization\", {\"Status\"}, StaffStatus, {\"Id\"}, \"StaffStatus\", JoinKind.LeftOuter),",
                "    #\"Expanded StaffStatus\" = Table.ExpandTableColumn(#\"Merged Queries5\", \"StaffStatus\", {\"Name\", \"IsInactive\"}, {\"StaffStatus\", \"StaffStatus.IsInactive\"}),",
                "    #\"Merged Queries6\" = Table.NestedJoin(#\"Expanded StaffStatus\", {\"StaffType\"}, StaffType, {\"Id\"}, \"StaffType.1\", JoinKind.LeftOuter),",
                "    #\"Expanded StaffType.1\" = Table.ExpandTableColumn(#\"Merged Queries6\", \"StaffType.1\", {\"Name\", \"IsInactive\"}, {\"StaffTypeName\", \"StaffType.IsInactive\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded StaffType.1\",{{\"FName\", \"First Name\"}, {\"SName\", \"Last Name\"}, {\"FullName\", \"Full Name\"}, {\"FullAddress\", \"Full Address\"}, {\"Phone_Cell\", \"Cell Phone\"}, {\"Phone_Wk\", \"Work Phone\"}, {\"Phone_Hm\", \"Home Phone\"}, {\"IsInactive\", \"Is Inactive\"}, {\"Start_dt\", \"Start Date\"}, {\"Term_dt\", \"Term Date\"}, {\"UsePayrollItem\", \"Use Payroll Item\"}, {\"PayrollDefault\", \"Payroll Default\"}, {\"DtCreated\", \"Created Date\"}, {\"DtModified\", \"Modified Date\"}, {\"DefaultLaborCode\", \"Default Labor Code\"}, {\"HomeTimezone\", \"Home Timezone\"}, {\"CostFactor\", \"Cost Factor\"}, {\"HourRateType\", \"Hour Rate Type\"}, {\"StaffType\", \"Staff Type\"}, {\"UserAccountStatus\", \"User Account Status\"}, {\"DefaultRole\", \"Default Role\"}, {\"PostTimeAsBilled\", \"Post Time As Billed\"}, {\"UserAccountStatusNm\", \"User Account Status Name\"}, {\"CostCenter1.Name\", \"Cost Center 1 Name\"}, {\"CostCenter1.IsInactive\", \"Cost Center 1 Is Inactive\"}, {\"CostCenter2.Name\", \"Cost Center 2 Name\"}, {\"CostCenter2.IsInactive\", \"Cost Center 2 Is Inactive\"}, {\"CostCenter3.Name\", \"Cost Center 3 Name\"}, {\"CostCenter3.IsInactive\", \"Cost Center 3 Is Inactive\"}, {\"StaffOrg.Name\", \"Organization Name\"}, {\"StaffOrg.IsInactive\", \"Organization Is Inactive\"}, {\"StaffStatus\", \"Staff Status\"}, {\"StaffStatus.IsInactive\", \"Staff Status Is Inactive\"}, {\"StaffTypeName\", \"Staff Type Name\"}, {\"StaffType.IsInactive\", \"Staff Type Is Inactive\"}}),",
                "    Buffer = Table.Buffer(#\"Renamed Columns\"),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Staffers\") else Buffer",
                "in",
                "    #\"Sample Data\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Time Entries",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "SID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Unique SID code for this time record. Note that this value is a negative number for any unsubmitted time and a positive number once the entry has been submitted.",
            "formatString": "0",
            "isHidden": true,
            "isKey": true,
            "lineageTag": "1271782a-0a5e-4649-88b2-a9d89f8a8465",
            "sourceColumn": "SID",
            "summarizeBy": "count"
          },
          {
            "name": "Is New",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "If this value is TRUE, the time entry we are examining has not yet been submitted by the user.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "f031d082-6978-4b49-a0e6-b75e794cb97b",
            "sourceColumn": "Is New",
            "summarizeBy": "none"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Time entry INPUT date (eg - the date against which the time is logged, not the date the user physically entered it).",
            "formatString": "Long Date",
            "isHidden": true,
            "lineageTag": "5b80d218-2f6d-4125-9603-b5c691cc42ce",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "ProjectSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "498334dd-7dd0-4320-a8c2-127e5d5f5b53",
            "sourceColumn": "ProjectSID",
            "summarizeBy": "none"
          },
          {
            "name": "ClientID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "881d8805-1e3f-4af6-a3a4-1deef654dfef",
            "sourceColumn": "ClientID",
            "summarizeBy": "count"
          },
          {
            "name": "CurrencySid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "8464cfe1-12f7-4f5b-95a7-71244ee37843",
            "sourceColumn": "CurrencySid",
            "summarizeBy": "sum"
          },
          {
            "name": "StaffSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "911a0640-c7dd-492e-a228-60d7a4a65934",
            "sourceColumn": "StaffSID",
            "summarizeBy": "none"
          },
          {
            "name": "BudgCatID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "8e50cb06-6229-40f2-a808-f1c60bfd6618",
            "sourceColumn": "BudgCatID",
            "summarizeBy": "count"
          },
          {
            "name": "BudgCatNm",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "50af0a29-6890-4e82-b75d-05b1f129475c",
            "sourceColumn": "BudgCatNm",
            "summarizeBy": "none"
          },
          {
            "name": "TaskSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b7dac79b-832f-4798-8567-23e0612aa686",
            "sourceColumn": "TaskSID",
            "summarizeBy": "none"
          },
          {
            "name": "Hours_IN",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "double",
            "description": "Every time entry must have a value for the actual TIME logged.",
            "isHidden": true,
            "lineageTag": "fae6e2ec-7da1-4caf-a722-55a67f9e8e3c",
            "sourceColumn": "Hours_IN",
            "summarizeBy": "sum"
          },
          {
            "name": "Notes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "User entered notes for the time entry (up to 1000 characters).",
            "lineageTag": "9e71274b-e1b2-4eba-a7b1-0fae2bab0cf4",
            "sourceColumn": "Notes",
            "summarizeBy": "none"
          },
          {
            "name": "Revision Notes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "If this time entry has been rejected/revised by a manager -- this this field contains that manager's notes.",
            "lineageTag": "253f372d-1089-42a9-be04-cac3889b4be8",
            "sourceColumn": "Revision Notes",
            "summarizeBy": "none"
          },
          {
            "name": "No Charge",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if this entry should be considered NoCharge for billing purposes.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "7cf3e245-e23a-4069-882d-9e342b2fdef2",
            "sourceColumn": "No Charge",
            "summarizeBy": "none"
          },
          {
            "name": "Created Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Value indicating the UTC date/time on which the time entry was initially entered into the system.",
            "formatString": "Long Date",
            "lineageTag": "2131e340-2aba-412e-a7d2-64f699cdd71a",
            "sourceColumn": "Created Date",
            "summarizeBy": "none"
          },
          {
            "name": "Modified Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Value indicating the UTC date/time on which the time entry was last modified.",
            "formatString": "Long Date",
            "lineageTag": "a222a4c9-41b6-40c6-82fc-1ea2bd35406e",
            "sourceColumn": "Modified Date",
            "summarizeBy": "none"
          },
          {
            "name": "InvoiceSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "27b6a6be-bcfc-441b-820f-b500b48ee08d",
            "sourceColumn": "InvoiceSID",
            "summarizeBy": "count"
          },
          {
            "name": "Is Approved",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if this entry has been approved by the user's manager(s). Note that many firms don't have a formal review process for time entries -- so this value will always be \"false\" for those firms.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "d5d7ba10-76b3-4cc2-a896-c69b9297eefa",
            "sourceColumn": "Is Approved",
            "summarizeBy": "none"
          },
          {
            "name": "Approval Status ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "34a2e2a1-7b57-4b4a-9c18-4b6eab03f7bd",
            "sourceColumn": "Approval Status ID",
            "summarizeBy": "count"
          },
          {
            "name": "Approval Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "If the firm uses a formal manager approval process for time, then you can use this field to track the current status of the entry. This is the text version of ApprovalStatus -- so it will display \"Unsubmitted\", \"Under Review\", \"Approved\" or \"Rejected\".",
            "lineageTag": "0f538422-11da-4848-b5c3-b8811bd4548f",
            "sourceColumn": "Approval Status",
            "summarizeBy": "none"
          },
          {
            "name": "BillRate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Billing rate (applied to an entry on (a) submission or (b) creation of an invoice).",
            "formatString": "0",
            "lineageTag": "5baf2bcb-327a-465e-847b-fae9a21dcb38",
            "sourceColumn": "BillRate",
            "summarizeBy": "sum"
          },
          {
            "name": "CostRate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "The labor \"cost\" rate -- applied by the system when a user SUBMITS an entry.",
            "formatString": "0",
            "lineageTag": "006f7533-e84c-468b-ac7f-264c5913374f",
            "sourceColumn": "CostRate",
            "summarizeBy": "sum"
          },
          {
            "name": "TotalCost",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "13af7d20-af67-47b2-98b6-deb073416526",
            "sourceColumn": "TotalCost",
            "summarizeBy": "sum"
          },
          {
            "name": "HoursBillable",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "description": "Once time is submitted, it can have BOTH an input hours column AND a billed hours column (eg - a firm may only bill part of the hours input by the staffer). See notes on Hours_IN for details on the data format for this column.",
            "isHidden": true,
            "lineageTag": "6bb5bda2-0f53-4315-9b51-02c56f649ab8",
            "sourceColumn": "HoursBillable",
            "summarizeBy": "sum"
          },
          {
            "name": "ChargeInput",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "1db88b66-1f41-4c6b-a2bd-55dc19f2205f",
            "sourceColumn": "ChargeInput",
            "summarizeBy": "sum"
          },
          {
            "name": "ChargeBillable",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "description": "Typically HoursBillable*BillRate (NoCharge hours always have a chargable amount of $0).",
            "isHidden": true,
            "lineageTag": "c291cffe-bed0-4096-9651-917106846a0a",
            "sourceColumn": "ChargeBillable",
            "summarizeBy": "sum"
          },
          {
            "name": "ChargeInvoiced",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "c6556e41-36ee-4f6b-899b-6c1e87b21f43",
            "sourceColumn": "ChargeInvoiced",
            "summarizeBy": "sum"
          },
          {
            "name": "ChargeAdjusted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "2fa6c853-279f-490f-82fd-04b4feb20932",
            "sourceColumn": "ChargeAdjusted",
            "summarizeBy": "sum"
          },
          {
            "name": "Billing Rate Locked",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if the system has marked this billing rate as \"locked\" (so it won't be updated when a project or staffer rate is updated).",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "e4ef5029-1281-42d1-a369-74ec4392efd4",
            "sourceColumn": "Billing Rate Locked",
            "summarizeBy": "none"
          },
          {
            "name": "ExchangeRate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "8fb2d110-5f9e-4ea8-9975-f1f6e8018234",
            "sourceColumn": "ExchangeRate",
            "summarizeBy": "sum"
          },
          {
            "name": "ChargeBillable_Fx",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "4f37c3b6-0869-415a-bbc5-e8d71f5a223d",
            "sourceColumn": "ChargeBillable_Fx",
            "summarizeBy": "sum"
          },
          {
            "name": "ChargeInput_Fx",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "b7026c0f-862d-4e6a-9098-28e682297eaa",
            "sourceColumn": "ChargeInput_Fx",
            "summarizeBy": "sum"
          },
          {
            "name": "BillRate_Fx",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "31676bbb-bce7-4e95-8cd7-877f9850f019",
            "sourceColumn": "BillRate_Fx",
            "summarizeBy": "sum"
          },
          {
            "name": "Is Invoiced",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "If the firm is using BigTime to invoice, then this field will be TRUE if the time entry has already been invoiced.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "1b13b2ef-355b-4416-a272-601fa6f14188",
            "sourceColumn": "Is Invoiced",
            "summarizeBy": "none"
          },
          {
            "name": "Post Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4ac1d2b4-7cda-4db1-8203-8abb234e2038",
            "sourceColumn": "Post Status",
            "summarizeBy": "none"
          },
          {
            "name": "Time Billable Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Indicates \"Billable\" or \"Nonbillable\" based on the \"No Charge\" column",
            "lineageTag": "01f1cafd-c955-4a31-9ae0-bb79af608b73",
            "sourceColumn": "Time Billable Type",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "1f9b72a3-7efd-4f49-a774-9b72c91eea61",
        "measures": [
          {
            "name": "Hours Entered",
            "description": "Total hours entered (both billable and nonbillable)",
            "displayFolder": "_Hours",
            "expression": "SUM('Time Entries'[Hours_IN])",
            "formatString": "#,0.00",
            "lineageTag": "3757c922-503e-4353-82ce-31b503fe38fa"
          },
          {
            "name": "Billable Hours",
            "displayFolder": "_Hours",
            "expression": "SUM ( 'Time Entries'[HoursBillable] )",
            "formatString": "#,0.00",
            "lineageTag": "bd5ed549-e22a-40e6-a2c7-56ba48951100"
          },
          {
            "name": "Nonbillable Hours",
            "displayFolder": "_Hours",
            "expression": [
              "VAR Calc =",
              "    SUMX ( 'Time Entries', 'Time Entries'[Hours_IN] -'Time Entries'[HoursBillable] )",
              "RETURN",
              "    IF ( Calc = 0, BLANK (), Calc )"
            ],
            "formatString": "#,0.00",
            "lineageTag": "5a25598f-e4de-4e6c-be96-2401600637c4"
          },
          {
            "name": "Fees Entered",
            "description": "Value of billable fees entered before any adustments or write down/write up",
            "displayFolder": "_Fees",
            "expression": "SUM('Time Entries'[ChargeInput])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "8401aa09-eb0c-42d1-86be-eedc4325b87f"
          },
          {
            "name": "Billable Fees",
            "description": "Billable fee value of billable hours. (Fees Entered - Adjusted Fees)",
            "displayFolder": "_Fees",
            "expression": "SUM('Time Entries'[ChargeBillable])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "b99ed898-1a43-43e1-b7f3-0cbec6ac9e6c"
          },
          {
            "name": "Adjusted Fees",
            "description": "Sum of adjustments (write up/write down) to billable fees",
            "displayFolder": "_Fees",
            "expression": "SUM('Time Entries'[ChargeAdjusted])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "9926d6f8-9a95-41f3-abce-b4f0da210afe"
          },
          {
            "name": "Invoiced Fees",
            "displayFolder": "_Fees",
            "expression": "SUM('Time Entries'[ChargeInvoiced])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "fc06a838-35b9-421f-a91e-1057e738be20"
          },
          {
            "name": "Fee Value of Nonbillable Hours",
            "description": "The fee value of nonbillable time based on the staffer's bill rate * nonbillable hours",
            "displayFolder": "_Fees",
            "expression": "SUMX ( 'Time Entries', [Nonbillable Hours] * 'Time Entries'[BillRate] )",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "07515af6-d4d3-4292-a8c7-0fa0d530f97a"
          },
          {
            "name": "Cost of Time Entries",
            "description": "Total cost of time entries",
            "displayFolder": "_Cost",
            "expression": "SUM('Time Entries'[TotalCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "dcfbfb22-1b68-4ea6-ae8e-ba617f9de437"
          },
          {
            "name": "Average Total Cost Rate",
            "description": "Average cost rate calculated defined as total cost / hours entered",
            "displayFolder": "_Cost",
            "expression": "DIVIDE ( [Cost of Time Entries], [Hours Entered] )",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "582ceeca-8eb8-456c-9fab-f00bf4ef1332"
          },
          {
            "name": "Weighted Average Bill Rate",
            "description": "Weighted average bill rate calculated as billable fees / billable hours",
            "displayFolder": "_Fees",
            "expression": "DIVIDE ( [Billable Fees], [Billable Hours] )",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "b8027ea6-2f3f-44c6-b6c8-c29d0e6ee797"
          },
          {
            "name": "Billable Fees per FTE",
            "description": "Billable Fees divided by Count of Full Time Equivalent Staff (FTE)",
            "displayFolder": "_Fees",
            "expression": "DIVIDE( [Billable Fees], [Count of Full Time Equivalent Staff (FTE)] )",
            "formatString": "$ #,##0.00",
            "lineageTag": "4106438d-1d29-43fd-a2e4-a089d77fd9ff"
          },
          {
            "name": "Billable Hours per FTE",
            "description": [
              "Billable Hours divided by Count of Full Time Equivalent Staff (FTE)",
              ""
            ],
            "displayFolder": "_Hours",
            "expression": "DIVIDE( [Billable Hours], [Count of Full Time Equivalent Staff (FTE)] )",
            "formatString": "#,0.00",
            "lineageTag": "8783d745-37a2-44e7-b58f-e15906591e20"
          },
          {
            "name": "Hours per Active Staff",
            "description": "Hours Entered divided by Count of Active Staff",
            "displayFolder": "_Hours",
            "expression": "DIVIDE( [Billable Hours], [Count of Any Active Staff] )",
            "formatString": "#,0.00",
            "lineageTag": "422ee04b-6df2-4963-91c9-7f2725753c7d"
          },
          {
            "name": "Nonbillable Hours per Active Staff",
            "description": "Nonbillable Hours Entered divided by Count of Active Staff",
            "displayFolder": "_Hours",
            "expression": "DIVIDE( [Nonbillable Hours], [Count of Any Active Staff] )",
            "formatString": "#,0.00",
            "lineageTag": "2aad4308-93cb-430d-a3d5-45801a58f83b"
          },
          {
            "name": "Project Margin",
            "description": "Billable Fees - Cost of Billable Time",
            "displayFolder": "_Cost",
            "expression": "[Billable Fees] - [Cost of Billable Time]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "780067eb-7d5f-4481-a056-b3fb0932f57c"
          },
          {
            "name": "Project Margin %",
            "description": "Project Margin / Billable Fees",
            "displayFolder": "_Cost",
            "expression": [
              "DIVIDE( [Project Margin], [Billable Fees] )",
              ""
            ],
            "formatString": "#,##0.00 %",
            "lineageTag": "c390442b-2e18-42f4-9249-c6e46e22e08f"
          },
          {
            "name": "Cost of Billable Time",
            "description": "Cost on time entries where 'No Charge' = False",
            "displayFolder": "_Cost",
            "expression": "CALCULATE( [Cost of Time Entries], 'Time Entries'[No Charge] = FALSE )",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "8627f747-a740-49a8-9e93-1fcb9dfbb710"
          },
          {
            "name": "Cost of Nonbillable Time",
            "description": "Cost on time entries where 'No Charge' = True",
            "displayFolder": "_Cost",
            "expression": "CALCULATE( [Cost of Time Entries], 'Time Entries'[No Charge] = TRUE )",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "61c71459-6037-4769-8c1c-9dbe3381a7ab"
          },
          {
            "name": "Cost of Time Entries and Expenses",
            "description": "Cost of Time Entries + Net Expenses",
            "displayFolder": "_Cost",
            "expression": "[Cost of Time Entries] + [Net Expenses]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "371f83d9-ad9a-456a-93cc-5e5d991e148b"
          },
          {
            "name": "Net Margin",
            "description": "Project Margin - Cost of Nonbillable Time - Net Expenses",
            "displayFolder": "_Cost",
            "expression": "[Project Margin] - [Cost of Nonbillable Time] - [Net Expenses]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "bec80d45-137e-4a24-9c59-721d059d2797"
          },
          {
            "name": "Net Margin %",
            "description": "Net Margin / Billable Fees",
            "displayFolder": "_Cost",
            "expression": "DIVIDE( [Net Margin] , [Billable Fees] )",
            "formatString": "#,##0.00 %",
            "lineageTag": "8e740632-7c34-4422-b9dd-4f7fda66d0a7"
          },
          {
            "name": "Billable Fees and Billable Expenses",
            "description": "Billable fees + Billable Expenses",
            "displayFolder": "_Fees",
            "expression": "[Billable Fees] + [Billable Expenses]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "a48fdede-4d74-4903-b8d2-b3b84d1d53d6"
          },
          {
            "name": "Average Daily Hours Entered per Staffer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "VAR _StaffDays = SUMX( CALCULATETABLE( VALUES( Dates[Date] ) , Dates[Day of Week] <> 1 && Dates[Day of Week] <> 7 ), CALCULATE( [Count of Active Staff] ))",
              "RETURN",
              "DIVIDE( [Hours Entered] , _StaffDays )"
            ],
            "displayFolder": "_Hours",
            "expression": [
              "",
              "VAR _StaffDays = SUMX( CALCULATETABLE( VALUES( Dates[Date] ) , Dates[Day of Week] <> 1 && Dates[Day of Week] <> 7 ), CALCULATE( [Count of Any Active Staff] ))",
              "RETURN",
              "DIVIDE( [Hours Entered] , _StaffDays )"
            ],
            "lineageTag": "1b2138e6-525f-4f51-bd2d-91b8e205d7a2"
          },
          {
            "name": "% Billable Hours",
            "description": "Billable Hours / Hours Entered",
            "displayFolder": "_Hours",
            "expression": "DIVIDE( [Billable Hours] , [Hours Entered] )",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%",
            "lineageTag": "3d0a39f7-70a5-419a-a395-9262447fa5a8"
          }
        ],
        "partitions": [
          {
            "name": "Time Entries",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Staffers,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"StaffSID\"}),",
                "    #\"Invoked Custom Function\" = Table.AddColumn(#\"Removed Other Columns\", \"fxGetBigTimeData\", each fxGetBigTimeData(\"/time/Sheet/\"& Text.From([StaffSID]) & \"?StartDt=\" & StartDate & \"&EndDt=2030-12-31&View=Detailed\")),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Invoked Custom Function\",{\"StaffSID\"}),",
                "    #\"Expanded fxGetBigTimeData\" = Table.ExpandListColumn(#\"Removed Columns\", \"fxGetBigTimeData\"),",
                "    #\"Expanded fxGetBigTimeData1\" = Table.ExpandRecordColumn(#\"Expanded fxGetBigTimeData\", \"fxGetBigTimeData\", {\"SID\", \"IsNew\", \"Dt\", \"ProjectSID\", \"ProjectNm\", \"ClientID\", \"ClientNm\", \"CurrencySid\", \"StaffSID\", \"BudgCatID\", \"BudgCatNm\", \"TaskSID\", \"TaskNm\", \"TaskTypeSID\", \"EstItemSID\", \"QBClass\", \"QBClassNm\", \"PayrollItem\", \"Hours_IN\", \"Notes\", \"RevisionNotes\", \"NoCharge\", \"DtCreated\", \"DtModified\", \"InvoiceSID\", \"IsApproved\", \"ApprovalStatus\", \"ApprovalStatusNm\", \"ApprovalInfo\", \"BillRate\", \"CostRate\", \"TotalCost\", \"FName\", \"SName\", \"HoursBillable\", \"ChargeInput\", \"ChargeBillable\", \"ChargeInvoiced\", \"ChargeAdjusted\", \"BillingRateLocked\", \"ProjectCostCenter1\", \"ProjectCostCenter2\", \"ProjectCostCenter3\", \"StaffCostCenter1\", \"StaffCostCenter2\", \"StaffCostCenter3\", \"TSRowId\", \"ExchangeRate\", \"ChargeBillable_Fx\", \"ChargeInput_Fx\", \"BillRate_Fx\", \"SourceNm\", \"IsInvoiced\", \"PostStatus\", \"EstItemNm\"}, {\"SID\", \"IsNew\", \"Dt\", \"ProjectSID\", \"ProjectNm\", \"ClientID\", \"ClientNm\", \"CurrencySid\", \"StaffSID\", \"BudgCatID\", \"BudgCatNm\", \"TaskSID\", \"TaskNm\", \"TaskTypeSID\", \"EstItemSID\", \"QBClass\", \"QBClassNm\", \"PayrollItem\", \"Hours_IN\", \"Notes\", \"RevisionNotes\", \"NoCharge\", \"DtCreated\", \"DtModified\", \"InvoiceSID\", \"IsApproved\", \"ApprovalStatus\", \"ApprovalStatusNm\", \"ApprovalInfo\", \"BillRate\", \"CostRate\", \"TotalCost\", \"FName\", \"SName\", \"HoursBillable\", \"ChargeInput\", \"ChargeBillable\", \"ChargeInvoiced\", \"ChargeAdjusted\", \"BillingRateLocked\", \"ProjectCostCenter1\", \"ProjectCostCenter2\", \"ProjectCostCenter3\", \"StaffCostCenter1\", \"StaffCostCenter2\", \"StaffCostCenter3\", \"TSRowId\", \"ExchangeRate\", \"ChargeBillable_Fx\", \"ChargeInput_Fx\", \"BillRate_Fx\", \"SourceNm\", \"IsInvoiced\", \"PostStatus\", \"EstItemNm\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded fxGetBigTimeData1\", each ([SID] <> null)),",
                "    #\"Convert Unix Time\" = Table.TransformColumns(#\"Filtered Rows\",{{\"DtCreated\", each ConverUnixTime(_), type datetime}, {\"DtModified\", each ConverUnixTime(_), type datetime}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Convert Unix Time\",{{\"SID\", Int64.Type}, {\"IsNew\", type logical}, {\"Dt\", type date}, {\"ProjectSID\", Int64.Type}, {\"ProjectNm\", type text}, {\"ClientID\", Int64.Type}, {\"ClientNm\", type text}, {\"CurrencySid\", Int64.Type}, {\"StaffSID\", Int64.Type}, {\"BudgCatID\", Int64.Type}, {\"BudgCatNm\", type text}, {\"TaskSID\", Int64.Type}, {\"TaskNm\", type text}, {\"TaskTypeSID\", Int64.Type}, {\"EstItemSID\", Int64.Type}, {\"QBClass\", Int64.Type}, {\"QBClassNm\", type any}, {\"PayrollItem\", Int64.Type}, {\"Hours_IN\", type number}, {\"Notes\", type text}, {\"RevisionNotes\", type text}, {\"NoCharge\", type logical}, {\"DtCreated\", type date}, {\"DtModified\", type date}, {\"InvoiceSID\", Int64.Type}, {\"IsApproved\", type logical}, {\"ApprovalStatus\", Int64.Type}, {\"ApprovalStatusNm\", type text}, {\"ApprovalInfo\", type any}, {\"BillRate\", type number}, {\"CostRate\", type number}, {\"TotalCost\", type number}, {\"FName\", type text}, {\"SName\", type text}, {\"HoursBillable\", type number}, {\"ChargeInput\", type number}, {\"ChargeBillable\", type number}, {\"ChargeInvoiced\", type number}, {\"ChargeAdjusted\", type number}, {\"BillingRateLocked\", type logical}, {\"ProjectCostCenter1\", Int64.Type}, {\"ProjectCostCenter2\", Int64.Type}, {\"ProjectCostCenter3\", Int64.Type}, {\"StaffCostCenter1\", Int64.Type}, {\"StaffCostCenter2\", Int64.Type}, {\"StaffCostCenter3\", Int64.Type}, {\"TSRowId\", Int64.Type}, {\"ExchangeRate\", type number}, {\"ChargeBillable_Fx\", Int64.Type}, {\"ChargeInput_Fx\", type number}, {\"BillRate_Fx\", type number}, {\"SourceNm\", type text}, {\"IsInvoiced\", type logical}, {\"PostStatus\", type text}, {\"EstItemNm\", type any}}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type\",{\"ProjectCostCenter1\", \"ProjectCostCenter2\", \"ProjectCostCenter3\", \"StaffCostCenter1\", \"StaffCostCenter2\", \"StaffCostCenter3\", \"TSRowId\", \"SourceNm\", \"EstItemNm\", \"ProjectNm\", \"ClientNm\", \"TaskNm\", \"TaskTypeSID\", \"EstItemSID\", \"QBClass\", \"QBClassNm\", \"PayrollItem\", \"ApprovalInfo\", \"FName\", \"SName\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns1\",{{\"Dt\", \"Date\"}, {\"IsNew\", \"Is New\"}, {\"RevisionNotes\", \"Revision Notes\"}, {\"DtCreated\", \"Created Date\"}, {\"DtModified\", \"Modified Date\"}, {\"IsApproved\", \"Is Approved\"}, {\"ApprovalStatus\", \"Approval Status ID\"}, {\"ApprovalStatusNm\", \"Approval Status\"}, {\"BillingRateLocked\", \"Billing Rate Locked\"}, {\"IsInvoiced\", \"Is Invoiced\"}, {\"PostStatus\", \"Post Status\"}, {\"NoCharge\", \"No Charge\"}}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Time Billable Type\", each if [No Charge] = true then \"Nonbillable\" else \"Billable\", type text),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Time Entries\") else #\"Added Custom\"",
                "in",
                "    #\"Sample Data\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Projects",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "ProjectSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "isKey": true,
            "lineageTag": "1abec27f-95a7-48a2-beb2-3b052d2fadc6",
            "sourceColumn": "ProjectSID",
            "summarizeBy": "none"
          },
          {
            "name": "Project Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "The name for this project (note that BigTime uses a project's \"display name\" instead of the name in most of the views you see in the system).",
            "lineageTag": "4c187e4a-e908-4c12-a014-54dd15dc75cc",
            "sourceColumn": "Project Name",
            "summarizeBy": "none"
          },
          {
            "name": "Project Display Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Since some firms use project \"name\" and others use \"code,\" BigTime supports a display name that makes it easier to identify a project out of context (eg - in a timesheet or a report). Often, the display name is a simple a \"Client:Project\", but it can include any combination of the project's name, code, client name, client code and \"type.\" This value is set by a firm's administrator and used throughout the system. Typically, when a new project is created in the system, the display name is auto-filled. So, DisplayName is not a required field when a new project is created.",
            "lineageTag": "e2209041-3240-41a1-b06f-56adb9f68986",
            "sourceColumn": "Project Display Name",
            "summarizeBy": "none"
          },
          {
            "name": "Project Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "A unique user-friendly project code associated with each project.",
            "lineageTag": "15466858-16dd-4ccc-bca1-29c651e4621e",
            "sourceColumn": "Project Code",
            "summarizeBy": "none"
          },
          {
            "name": "Project Type ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "e6409249-474a-463f-ac9a-c7131b575952",
            "sourceColumn": "Project Type ID",
            "summarizeBy": "count"
          },
          {
            "name": "Project Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Start date for the project (defaults to today if a project is created without one, and field cannot be set to an empty value).",
            "formatString": "Long Date",
            "lineageTag": "38dfed9d-96b4-4ac0-8073-ef43f151976d",
            "sourceColumn": "Project Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "Project Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "Inactive projects have this value set to TRUE.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "8f77d44d-2b56-4b9f-a099-0b7f094342ad",
            "sourceColumn": "Project Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Project Production Status Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "The production status code controls the specific reason behind a project's deactivation (eg - on-hold, cancelled, closed). The available values for this list are controlled by the administrator in BigTime's settings section.",
            "formatString": "0",
            "lineageTag": "e76e744f-43c1-4b1f-a747-ffe8ec6eb4fd",
            "sourceColumn": "Project Production Status Code",
            "summarizeBy": "count"
          },
          {
            "name": "Project Production Status Sort Order",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "61da640c-ab9f-46f1-a8fe-f692f5ceaecc",
            "sourceColumn": "Project Production Status Sort Order",
            "summarizeBy": "sum"
          },
          {
            "name": "Project Billing Status Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "The billing status code determines whether or not a project shows up on the \"draft invoicing\" screens and reports. Note that house accounts (eg - internal projects that are used to track time but are not billed out) are typically setup with an inactive billing status. In addition, keep in mind that projects may be \"closed\" to time tracking BEFORE they are \"closed\" in the billing system.",
            "formatString": "0",
            "lineageTag": "e8f4040b-fa52-49f3-b408-213a8550a1b6",
            "sourceColumn": "Project Billing Status Code",
            "summarizeBy": "count"
          },
          {
            "name": "Project Notes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "A text field used to house a project's outline/description.",
            "lineageTag": "ac012d52-a719-4947-9321-a1346f5de502",
            "sourceColumn": "Project Notes",
            "summarizeBy": "none"
          },
          {
            "name": "Project Is All Staff",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if a project can be viewed/billed against by every member of the staff (no matter who is actually staffed on the project's team list). This value is frequently set to TRUE for internal projects.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "b90f94d0-c4eb-4460-b4aa-cfa65020367a",
            "sourceColumn": "Project Is All Staff",
            "summarizeBy": "none"
          },
          {
            "name": "Project No Charge",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if a project is an internal (non-billing) project. All time/expense charges on projects marked as IsNoCharge are flagged as non-billable automatically when a user submits them.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "0a548a90-cccc-4f60-9cc0-cc2232f1f528",
            "sourceColumn": "Project No Charge",
            "summarizeBy": "none"
          },
          {
            "name": "Project Created Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "UTC Date that the project was created in the system.",
            "formatString": "Long Date",
            "lineageTag": "730e919a-c897-4bd7-9713-293ea0af4be6",
            "sourceColumn": "Project Created Date",
            "summarizeBy": "none"
          },
          {
            "name": "Project Modified Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "UTC Date that the project was last modified by anyone (including external systems like QuickBooks or Xero).\t",
            "formatString": "Long Date",
            "lineageTag": "ddb01131-bcbf-47a5-a0d3-2b1a3659ad19",
            "sourceColumn": "Project Modified Date",
            "summarizeBy": "none"
          },
          {
            "name": "Project Invoice Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Unique SID code for the type of invoice that this project uses (eg - T&M, retainer). These values are activated/controlled by the system administrator in the BigTime settings area.",
            "formatString": "0",
            "lineageTag": "b6d9e80f-b17a-4bde-aeac-9a98a6f492bc",
            "sourceColumn": "Project Invoice Type",
            "summarizeBy": "sum"
          },
          {
            "name": "Project Billing Base",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Projects all have a base billing rate, and this enum determines where that rate is pulled from. Acceptable values are StaffRate1, StaffRate2, StaffRate3, StaffRate4, StaffRate5, ActivityRate1, ActivityRate2, ActivityRate3, ActivityRate4, ActivityRate5.",
            "lineageTag": "637ec75e-d67d-4a28-9920-034722ec6d6c",
            "sourceColumn": "Project Billing Base",
            "summarizeBy": "none"
          },
          {
            "name": "Project Basic Rate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "6c40f541-5c2b-47f4-b29d-cab9015440e3",
            "sourceColumn": "Project Basic Rate",
            "summarizeBy": "sum"
          },
          {
            "name": "Project Cost Center 1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Each project/staffer in the system can be assigned up to 3 cost center values (eg - office, partner, department). Those cost centers are useful for reporting -- and they are set by the administrator in the settings area.",
            "formatString": "0",
            "lineageTag": "bdbac06a-d3e6-4a01-81ae-a17a833dc44b",
            "sourceColumn": "Project Cost Center 1",
            "summarizeBy": "sum"
          },
          {
            "name": "Project Cost Center 2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Each project/staffer in the system can be assigned up to 3 cost center values (eg - office, partner, department). Those cost centers are useful for reporting -- and they are set by the administrator in the settings area.",
            "formatString": "0",
            "lineageTag": "21721b33-e75e-4355-9221-9b0dc6adca31",
            "sourceColumn": "Project Cost Center 2",
            "summarizeBy": "sum"
          },
          {
            "name": "Project Cost Center 3",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Each project/staffer in the system can be assigned up to 3 cost center values (eg - office, partner, department). Those cost centers are useful for reporting -- and they are set by the administrator in the settings area.",
            "formatString": "0",
            "lineageTag": "afcb9b3b-713d-41a2-88d3-66b07d32da2f",
            "sourceColumn": "Project Cost Center 3",
            "summarizeBy": "sum"
          },
          {
            "name": "Project Deactivated",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "9b77b16f-aba3-4bad-9400-376ba78b4bc1",
            "sourceColumn": "Project Deactivated",
            "summarizeBy": "none"
          },
          {
            "name": "Project Contract Notes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "If there are special invoicing instructions on the project, then those instructions are contained in this free-form text field.\t",
            "lineageTag": "36f57ec7-8d33-4bc8-a0aa-db6e9592fd1f",
            "sourceColumn": "Project Contract Notes",
            "summarizeBy": "none"
          },
          {
            "name": "Project Invoice Notes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "If the project's invoices get a special note by default (when they are created), then that free-form text note is contained here.\t",
            "lineageTag": "4893f2bd-ec75-4a32-8039-697ed18bc6ee",
            "sourceColumn": "Project Invoice Notes",
            "summarizeBy": "none"
          },
          {
            "name": "ClientSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "9c67e299-66e1-41a8-91ad-853ec9050cae",
            "sourceColumn": "ClientSID",
            "summarizeBy": "count"
          },
          {
            "name": "Client Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Short/standard name for the client",
            "lineageTag": "2b843f38-9594-4e4f-9798-3748df62bd3e",
            "sourceColumn": "Client Name",
            "summarizeBy": "none"
          },
          {
            "name": "Client Legal Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Legal name (eg - full name used on invoices and estimates)",
            "lineageTag": "5050581c-00a7-4b29-8566-c28880d6fd0e",
            "sourceColumn": "Client Legal Name",
            "summarizeBy": "none"
          },
          {
            "name": "Client Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "48652a99-deab-40d9-b38d-0debb6a13abf",
            "sourceColumn": "Client Type",
            "summarizeBy": "sum"
          },
          {
            "name": "Client Address",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Street address (can be multi-line)",
            "lineageTag": "348ae51c-0447-4274-99c6-d39cea35f1c3",
            "sourceColumn": "Client Address",
            "summarizeBy": "none"
          },
          {
            "name": "Client City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "11328924-b5a4-4eab-aeea-821ca481b307",
            "sourceColumn": "Client City",
            "summarizeBy": "none"
          },
          {
            "name": "Client State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "State, Province or county (depending on the address' country of origin)",
            "lineageTag": "a701ea7e-9e38-4c76-86d9-0d23aff263e7",
            "sourceColumn": "Client State",
            "summarizeBy": "none"
          },
          {
            "name": "Client Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Postal code",
            "lineageTag": "9affc459-9da8-44be-8366-a1b7da7f792f",
            "sourceColumn": "Client Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Client Country",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Country of origin",
            "lineageTag": "236de0c9-615e-4fc9-af0d-90ee5362f2ed",
            "sourceColumn": "Client Country",
            "summarizeBy": "none"
          },
          {
            "name": "Client Phone Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8b6e61e2-2548-4c26-ab75-ed6fad7387b6",
            "sourceColumn": "Client Phone Number",
            "summarizeBy": "none"
          },
          {
            "name": "Client Fax Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8419b0ea-cea3-420a-b5fa-3206c1c4e478",
            "sourceColumn": "Client Fax Number",
            "summarizeBy": "none"
          },
          {
            "name": "Client Business Phone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2887363f-8bb8-44cc-a5b2-aa7b0894fd68",
            "sourceColumn": "Client Business Phone",
            "summarizeBy": "none"
          },
          {
            "name": "Client Sales Tax Reference ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "77a78f7d-a9cd-4320-9cb8-34b9d5b49a16",
            "sourceColumn": "Client Sales Tax Reference ID",
            "summarizeBy": "count"
          },
          {
            "name": "Client Notes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b3fa02a5-958d-4406-a513-ea85c9866f54",
            "sourceColumn": "Client Notes",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 1 Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bd76590f-61b6-4af6-9590-754980033068",
            "sourceColumn": "Cost Center 1 Name",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 1 Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "9e367ad8-0fb1-43cc-9d4c-33cf0582ead4",
            "sourceColumn": "Cost Center 1 Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 2 Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "26db6332-c72b-4f04-9673-7edce3ffc4bf",
            "sourceColumn": "Cost Center 2 Name",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 2 Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "569d3c34-9717-4035-8724-5769f51a9be9",
            "sourceColumn": "Cost Center 2 Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 3 Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a50c0b45-3275-4e16-a529-5a3305f0ac5a",
            "sourceColumn": "Cost Center 3 Name",
            "summarizeBy": "none"
          },
          {
            "name": "Cost Center 3 Is Inactive",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "491a502d-4b77-41a9-9cf2-5b56e7e98391",
            "sourceColumn": "Cost Center 3 Is Inactive",
            "summarizeBy": "none"
          },
          {
            "name": "Project End Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "When a project is terminated, this date contains the date it is closed \"as of\" (important because new time entries will be blocked on closed projects on/after their termination date).",
            "lineageTag": "b7170b33-01ec-4573-9484-dc687d8d2656",
            "sourceColumn": "Project End Date",
            "summarizeBy": "none"
          },
          {
            "name": "Project URL",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "WebUrl",
            "dataType": "string",
            "expression": "\"https://iq.bigtime.net/Bigtime/Project2#/vitals/\" & Projects[ProjectSID]",
            "isDataTypeInferred": true,
            "lineageTag": "b734f441-db81-4ad8-a6a7-d9d7fc629f10",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Team Lead",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ba431df6-00e0-4a08-b370-c563433ec5cc",
            "sourceColumn": "Team Lead",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "7159bafc-018c-4bd3-979e-16782605c0ef",
        "measures": [
          {
            "name": "Selected Project Title",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SELECTEDVALUE( Projects[Project Display Name], \"Multiple Projects Selected. Use the filter pane or drill through to select a project\" )",
            "lineageTag": "1fe3d573-3716-4a42-88d6-3f7d6a0e659c"
          },
          {
            "name": "Selected Team Leads",
            "expression": "CONCATENATEX( VALUES( Projects[Team Lead] ), [Team Lead] , \", \")",
            "lineageTag": "44d790f7-a2c1-4e72-b3ec-7eba10d071d7"
          }
        ],
        "partitions": [
          {
            "name": "Projects",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = fxGetBigTimeData(\"/project?ShowInactive=true\"),",
                "    Custom1 = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    Custom3 = Table.ExpandRecordColumn(Custom1, \"Column1\", {\"SystemId\", \"ClientId\"}, {\"ProjectSID\", \"ClientID\"}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Custom3,{\"ProjectSID\", \"ClientID\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\", {\"ProjectSID\"}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Removed Duplicates\", \"Projects\", each fxGetBigTimeData(\"/project/detail/\" & Text.From([ProjectSID]) & \"?View=Detailed&ShowAllContacts=False\")),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"Clients\", each fxGetBigTimeData(\"/client/detail/\" & Text.From([ClientID]) & \"?View=Detailed\")),",
                "    #\"Expanded Projects\" = Table.ExpandRecordColumn(#\"Added Custom1\", \"Projects\", {\"SystemId\", \"Nm\", \"DisplayName\", \"ProjectCode\", \"TypeId\", \"StartDt\", \"IsInactive\", \"StatusProd\", \"StatusProd_nt\", \"StatusProd_SortOrd\", \"StatusBill\", \"Notes\", \"IsAllStaff\", \"IsNoCharge\", \"IsPto\", \"Category\", \"BudgetStyle\", \"DtCreated\", \"DtModified\", \"InvoiceType\", \"InvoiceTotals\", \"BillingRate\", \"BasicRate\", \"QBClassDefault\", \"ClientId\", \"PrimaryContactId\", \"BillingContactId\", \"ContractNotes\", \"InvoiceNotes\", \"CostCenterA\", \"CostCenterB\", \"CostCenterC\", \"RevenueRec\", \"DefaultSalesTaxSid\", \"DefaultLaborCode\", \"RateCardSid\", \"InputHours\", \"BudgetHours\", \"InputFees\", \"BudgetFees\", \"InputExpenses\", \"BudgetExpenses\", \"Deactivated\", \"BaseRateStyle\", \"Contact\", \"AddressList\", \"Client\", \"UdfList\", \"Visible\", \"ViewOnly\", \"ApprovalDeadline\", \"CurrencySID\", \"EndDt\", \"TeamLeads\", \"DefaultInvoiceTermSid\"}, {\"Projects.SystemId\", \"Projects.Nm\", \"Projects.DisplayName\", \"Projects.ProjectCode\", \"Projects.TypeId\", \"Projects.StartDt\", \"Projects.IsInactive\", \"Projects.StatusProd\", \"Projects.StatusProd_nt\", \"Projects.StatusProd_SortOrd\", \"Projects.StatusBill\", \"Projects.Notes\", \"Projects.IsAllStaff\", \"Projects.IsNoCharge\", \"Projects.IsPto\", \"Projects.Category\", \"Projects.BudgetStyle\", \"Projects.DtCreated\", \"Projects.DtModified\", \"Projects.InvoiceType\", \"Projects.InvoiceTotals\", \"Projects.BillingRate\", \"Projects.BasicRate\", \"Projects.QBClassDefault\", \"Projects.ClientId\", \"Projects.PrimaryContactId\", \"Projects.BillingContactId\", \"Projects.ContractNotes\", \"Projects.InvoiceNotes\", \"Projects.CostCenterA\", \"Projects.CostCenterB\", \"Projects.CostCenterC\", \"Projects.RevenueRec\", \"Projects.DefaultSalesTaxSid\", \"Projects.DefaultLaborCode\", \"Projects.RateCardSid\", \"Projects.InputHours\", \"Projects.BudgetHours\", \"Projects.InputFees\", \"Projects.BudgetFees\", \"Projects.InputExpenses\", \"Projects.BudgetExpenses\", \"Projects.Deactivated\", \"Projects.BaseRateStyle\", \"Projects.Contact\", \"Projects.AddressList\", \"Projects.Client\", \"Projects.UdfList\", \"Projects.Visible\", \"Projects.ViewOnly\", \"Projects.ApprovalDeadline\", \"Projects.CurrencySID\", \"Projects.EndDt\", \"Projects.TeamLeads\", \"Projects.DefaultInvoiceTermSid\"}),",
                "    #\"Expanded Clients\" = Table.ExpandRecordColumn(#\"Expanded Projects\", \"Clients\", {\"SystemId\", \"Nm\", \"LegalNm\", \"ClientType\", \"ClientID\", \"Address\", \"City\", \"State\", \"Zip\", \"Country\", \"MainPH\", \"MainFX\", \"CurrencySID\", \"BusinessNumber\", \"SalesTaxRefId\", \"Notes\", \"UseConsoInvoice\", \"AddData\", \"QBCustomerId\", \"IACustomerId\"}, {\"Clients.SystemId\", \"Clients.Nm\", \"Clients.LegalNm\", \"Clients.ClientType\", \"Clients.ClientID\", \"Clients.Address\", \"Clients.City\", \"Clients.State\", \"Clients.Zip\", \"Clients.Country\", \"Clients.MainPH\", \"Clients.MainFX\", \"Clients.CurrencySID\", \"Clients.BusinessNumber\", \"Clients.SalesTaxRefId\", \"Clients.Notes\", \"Clients.UseConsoInvoice\", \"Clients.AddData\", \"Clients.QBCustomerId\", \"Clients.IACustomerId\"}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded Clients\",{\"ProjectSID\", \"ClientID\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Projects.SystemId\", \"ProjectSID\"}, {\"Projects.Nm\", \"Project Name\"}, {\"Projects.DisplayName\", \"Project Display Name\"}, {\"Projects.ProjectCode\", \"Project Code\"}, {\"Projects.TypeId\", \"Project Type ID\"}, {\"Projects.StartDt\", \"Project Start Date\"}, {\"Projects.IsInactive\", \"Project Is Inactive\"}, {\"Projects.StatusProd\", \"Project Production Status Code\"}, {\"Projects.StatusProd_SortOrd\", \"Project Production Status Sort Order\"}, {\"Projects.StatusBill\", \"Project Billing Status Code\"}, {\"Projects.Notes\", \"Project Notes\"}, {\"Projects.IsAllStaff\", \"Project Is All Staff\"}, {\"Projects.IsNoCharge\", \"Project No Charge\"}, {\"Projects.DtCreated\", \"Project Created Date\"}, {\"Projects.DtModified\", \"Project Modified Date\"}, {\"Projects.InvoiceType\", \"Project Invoice Type\"}, {\"Projects.BillingRate\", \"Project Billing Base\"}, {\"Projects.BasicRate\", \"Project Basic Rate\"}, {\"Projects.CostCenterA\", \"Project Cost Center 1\"}, {\"Projects.CostCenterB\", \"Project Cost Center 2\"}, {\"Projects.CostCenterC\", \"Project Cost Center 3\"}, {\"Projects.Deactivated\", \"Project Deactivated\"}, {\"Projects.ContractNotes\", \"Project Contract Notes\"}, {\"Projects.InvoiceNotes\", \"Project Invoice Notes\"}, {\"Clients.SystemId\", \"ClientSID\"}, {\"Clients.Nm\", \"Client Name\"}, {\"Clients.LegalNm\", \"Client Legal Name\"}, {\"Clients.ClientType\", \"Client Type\"}, {\"Clients.Address\", \"Client Address\"}, {\"Clients.City\", \"Client City\"}, {\"Clients.State\", \"Client State\"}, {\"Clients.Zip\", \"Client Zip\"}, {\"Clients.Country\", \"Client Country\"}, {\"Clients.MainPH\", \"Client Phone Number\"}, {\"Clients.MainFX\", \"Client Fax Number\"}, {\"Clients.BusinessNumber\", \"Client Business Phone\"}, {\"Clients.SalesTaxRefId\", \"Client Sales Tax Reference ID\"}, {\"Clients.Notes\", \"Client Notes\"}, {\"Projects.EndDt\", \"Project End Date\"}, {\"Projects.TeamLeads\", \"Team Lead\"}}),",
                "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Renamed Columns\",{\"ProjectSID\", \"Project Name\", \"Project Display Name\", \"Project Code\", \"Project Type ID\", \"Project Start Date\", \"Project Is Inactive\", \"Project Production Status Code\", \"Project Production Status Sort Order\", \"Project Billing Status Code\", \"Project Notes\", \"Project Is All Staff\", \"Project No Charge\", \"Project Created Date\", \"Project Modified Date\", \"Project Invoice Type\", \"Project Billing Base\", \"Project Basic Rate\", \"Project Contract Notes\", \"Project Invoice Notes\", \"Project Cost Center 1\", \"Project Cost Center 2\", \"Project Cost Center 3\", \"Project Deactivated\", \"Projects.UdfList\", \"Project End Date\", \"Team Lead\", \"ClientSID\", \"Client Name\", \"Client Legal Name\", \"Client Type\", \"Client Address\", \"Client City\", \"Client State\", \"Client Zip\", \"Client Country\", \"Client Phone Number\", \"Client Fax Number\", \"Client Business Phone\", \"Client Sales Tax Reference ID\", \"Client Notes\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns1\",{{\"ProjectSID\", Int64.Type}, {\"Project Name\", type text}, {\"Project Display Name\", type text}, {\"Project Code\", type text}, {\"Project Type ID\", Int64.Type}, {\"Project Start Date\", type date}, {\"Project End Date\", type date}, {\"Project Is Inactive\", type logical}, {\"Project Production Status Code\", Int64.Type}, {\"Project Production Status Sort Order\", Int64.Type}, {\"Project Billing Status Code\", Int64.Type}, {\"Project Notes\", type text}, {\"Project Is All Staff\", type logical}, {\"Project No Charge\", type logical}, {\"Project Created Date\", type date}, {\"Project Modified Date\", type datetime}, {\"Project Invoice Type\", Int64.Type}, {\"Project Billing Base\", type text}, {\"Project Basic Rate\", Int64.Type}, {\"Project Cost Center 1\", Int64.Type}, {\"Project Cost Center 2\", Int64.Type}, {\"Project Cost Center 3\", Int64.Type}, {\"Project Deactivated\", type logical}, {\"Project Contract Notes\", type text}, {\"Project Invoice Notes\", type text}, {\"ClientSID\", Int64.Type}, {\"Client Name\", type text}, {\"Client Legal Name\", type text}, {\"Client Type\", Int64.Type}, {\"Client Address\", type text}, {\"Client City\", type text}, {\"Client State\", type text}, {\"Client Zip\", type text}, {\"Client Country\", type text}, {\"Client Phone Number\", type text}, {\"Client Fax Number\", type text}, {\"Client Business Phone\", type any}, {\"Client Sales Tax Reference ID\", Int64.Type}, {\"Client Notes\", type text}, {\"Team Lead\", type text}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Changed Type\",{{\"Project Modified Date\", type date}}),",
                "    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Project Cost Center 1\"}, CostCenter1, {\"Id\"}, \"Cost Centers\", JoinKind.LeftOuter),",
                "    #\"Expanded Cost Centers\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Cost Centers\", {\"Name\", \"IsInactive\"}, {\"Cost Center 1 Name\", \"Cost Center 1 Is Inactive\"}),",
                "    #\"Merged Queries1\" = Table.NestedJoin(#\"Expanded Cost Centers\", {\"Project Cost Center 2\"}, CostCenter1, {\"Id\"}, \"Cost Centers\", JoinKind.LeftOuter),",
                "    #\"Expanded CostCenter2\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"Cost Centers\", {\"Name\", \"IsInactive\"}, {\"Cost Center 2 Name\", \"Cost Center 2 Is Inactive\"}),",
                "    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded CostCenter2\", {\"Project Cost Center 3\"}, CostCenter1, {\"Id\"}, \"Cost Centers\", JoinKind.LeftOuter),",
                "    #\"Expanded CostCenter3\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"Cost Centers\", {\"Name\", \"IsInactive\"}, {\"Cost Center 3 Name\", \"Cost Center 3 Is Inactive\"}),",
                "    #\"UDF Field Names\" = Record.FieldNames(Record.Combine(List.Select(#\"Expanded CostCenter3\"[Projects.UdfList], each _ <> null))),",
                "    #\"Expand UDF Columns\" = Table.ExpandRecordColumn(#\"Expanded CostCenter3\" , \"Projects.UdfList\", #\"UDF Field Names\"),",
                "    Buffer = Table.Buffer(#\"Expand UDF Columns\"),",
                "    #\"Transform UDF Column Types\" = fxDetectColumnTypeUDF(Buffer, #\"UDF Field Names\"),",
                "    Buffer2 = Table.Buffer(#\"Transform UDF Column Types\"),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Projects\") else Buffer2",
                "in",
                "    #\"Sample Data\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Expenses",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Expense Category",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Name of the expense category to which this expense is linked.",
            "lineageTag": "3e93c9b6-d93a-46d7-aabe-fd78c3cd0516",
            "sourceColumn": "Expense Category",
            "summarizeBy": "none"
          },
          {
            "name": "CategorySID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "06104344-49ed-44ea-a17d-4889d3235734",
            "sourceColumn": "CategorySID",
            "summarizeBy": "count"
          },
          {
            "name": "TaskSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "2c197661-144f-45e5-97c6-094bc5238cb1",
            "sourceColumn": "TaskSID",
            "summarizeBy": "none"
          },
          {
            "name": "MerchantSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "6f4ea378-3be1-4501-ab20-8942c341adc5",
            "sourceColumn": "MerchantSID",
            "summarizeBy": "count"
          },
          {
            "name": "Merchant Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "258efb13-f064-4c02-abc1-ca49a5e8d2ce",
            "sourceColumn": "Merchant Name",
            "summarizeBy": "none"
          },
          {
            "name": "LocationSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "1e7376b6-1632-450c-8da0-01f0d18bf249",
            "sourceColumn": "LocationSID",
            "summarizeBy": "count"
          },
          {
            "name": "Location Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "301103c5-12c4-4fdf-aaf1-de74dc16fdb7",
            "sourceColumn": "Location Name",
            "summarizeBy": "none"
          },
          {
            "name": "EstItemSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b094be21-9db8-4a5f-b486-ff78b2bbf678",
            "sourceColumn": "EstItemSID",
            "summarizeBy": "count"
          },
          {
            "name": "EstItemNm",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "7c282126-991a-46d0-a452-24be87bc3e06",
            "sourceColumn": "EstItemNm",
            "summarizeBy": "none"
          },
          {
            "name": "CCardSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "befcce76-6690-477b-b376-b1b3a5b87dca",
            "sourceColumn": "CCardSID",
            "summarizeBy": "count"
          },
          {
            "name": "Credit Card Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "be2139f7-b965-4422-ad1d-7fe49fe0b6d3",
            "sourceColumn": "Credit Card Name",
            "summarizeBy": "none"
          },
          {
            "name": "CostIN",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "c9fa074f-e00c-43d8-b1ca-ae3628e7b81f",
            "sourceColumn": "CostIN",
            "summarizeBy": "sum"
          },
          {
            "name": "CostBill",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "23dd36bd-4f8b-4e55-8165-ebddd5d263d7",
            "sourceColumn": "CostBill",
            "summarizeBy": "sum"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Expense entry INPUT date (eg - the date against which the entry is logged, not the date the user physically entered it).",
            "formatString": "Long Date",
            "isHidden": true,
            "lineageTag": "966ad49c-e304-4fc3-9a77-21c7677dee1e",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Has Receipt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "If the expense has a receipt attached, then this item returns TRUE. Note the URL's (above) used to query/pull receipts attached to expenses.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "e46db7de-2a04-4bb4-b3b8-9c6dd152d5b4",
            "sourceColumn": "Has Receipt",
            "summarizeBy": "none"
          },
          {
            "name": "Is Submitted",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "If this value is TRUE, the entry has been submitted by the user.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "d1a3138b-765a-40ae-a8f4-a3f92525c7ce",
            "sourceColumn": "Is Submitted",
            "summarizeBy": "none"
          },
          {
            "name": "Is Unit",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "If the expense category against which an expense is being logged is a PER UNIT category (eg - mileage), then this value will return TRUE.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "ccbf8b67-d525-49e2-a144-cc37aec8a974",
            "sourceColumn": "Is Unit",
            "summarizeBy": "none"
          },
          {
            "name": "No Charge",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if this entry should be considered NoCharge for billing purposes.\t",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "2c8f4f5a-daeb-461f-9379-5e3cb965b636",
            "sourceColumn": "No Charge",
            "summarizeBy": "none"
          },
          {
            "name": "Note",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "User entered notes for the entry (up to 1000 characters).",
            "lineageTag": "2694162c-2068-49da-a4b0-cbc9952e3bbc",
            "sourceColumn": "Note",
            "summarizeBy": "none"
          },
          {
            "name": "Paid By Company",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if this entry is not a reimbursable expense (eg - a credit card charge or another company-paid expense that the user is simply logging).\t",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "8d8126af-f384-4a0b-adb7-3cee500bd208",
            "sourceColumn": "Paid By Company",
            "summarizeBy": "none"
          },
          {
            "name": "ProjectSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b307e100-e678-4be9-8136-cbaa56c6c943",
            "sourceColumn": "ProjectSID",
            "summarizeBy": "none"
          },
          {
            "name": "RptSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "8d84465c-dc0f-4ebd-9be4-440be8af7b1c",
            "sourceColumn": "RptSID",
            "summarizeBy": "count"
          },
          {
            "name": "SID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "description": "Unique SID code for this record.",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "c66564f2-999d-421f-aa90-52f853e77ace",
            "sourceColumn": "SID",
            "summarizeBy": "count"
          },
          {
            "name": "StaffSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "6279784d-24e9-4892-a2f5-9657cd6498b1",
            "sourceColumn": "StaffSID",
            "summarizeBy": "none"
          },
          {
            "name": "Tax1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "57adde8c-d1d1-4ae7-8ded-4e08b2dcab3c",
            "sourceColumn": "Tax1",
            "summarizeBy": "sum"
          },
          {
            "name": "UnitPrice",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "If the expense category against which an expense is being logged is a PER UNIT category (eg - mileage), then this value returns the PER UNIT sale price for that item (eg - mileage is billed to a customer at .555/mile).",
            "formatString": "0",
            "lineageTag": "00c8d620-1743-47c7-adb1-4059682a6ccc",
            "sourceColumn": "UnitPrice",
            "summarizeBy": "sum"
          },
          {
            "name": "UnitRate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "description": "If the expense category against which an expense is being logged is a PER UNIT category (eg - mileage), then this value returns the PER UNIT reimbursable rate for that item (eg - mileage is reimbursed to an employee at .495/mile).",
            "lineageTag": "7c653862-6dfb-461a-aee9-11c0673124a6",
            "sourceColumn": "UnitRate",
            "summarizeBy": "sum"
          },
          {
            "name": "Units",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "description": "If the expense category against which an expense is being logged is a PER UNIT category (eg - mileage), then this value is used to indicate the NUMBER of units this expense represents (eg - for a mileage expense, this number represents the number of miles being logged).",
            "lineageTag": "8e0fdf78-6233-4ae6-8122-dce7f849d1e6",
            "sourceColumn": "Units",
            "summarizeBy": "sum"
          },
          {
            "name": "Unit of Measure",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "If the expense category against which an expense is being logged is a PER UNIT category (eg - mileage), then this value is the \"unit\" of measure (eg - \"miles\" for a mileage expense). This value will be empty if a category is not setup as a \"per-unit\" category.",
            "lineageTag": "eb117691-8d23-4a53-a2b9-ab20886a3e48",
            "sourceColumn": "Unit of Measure",
            "summarizeBy": "none"
          },
          {
            "name": "TaxRateSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "74ec0e01-0e51-4992-b90e-fde768c8cb5e",
            "sourceColumn": "TaxRateSID",
            "summarizeBy": "count"
          },
          {
            "name": "TotalCostIN",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "dcf7dc8a-203b-4077-aa78-e2b79e563c29",
            "sourceColumn": "TotalCostIN",
            "summarizeBy": "sum"
          },
          {
            "name": "TotalCostBill",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "c2fe81c1-cc51-4b10-a3c2-ac31a8c54b20",
            "sourceColumn": "TotalCostBill",
            "summarizeBy": "sum"
          },
          {
            "name": "VendorSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "311607c7-42bb-41af-ba75-ab460d5c49ca",
            "sourceColumn": "VendorSID",
            "summarizeBy": "count"
          },
          {
            "name": "Vendor Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0aed66b6-463a-4f7e-b0d2-a4b5335f487d",
            "sourceColumn": "Vendor Name",
            "summarizeBy": "none"
          },
          {
            "name": "Reference Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e8ad479f-6668-4e12-82d2-c0473032cb03",
            "sourceColumn": "Reference Number",
            "summarizeBy": "none"
          },
          {
            "name": "BillSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "4b96ae46-d63a-413e-bc16-15d4af565ecd",
            "sourceColumn": "BillSid",
            "summarizeBy": "sum"
          },
          {
            "name": "Is Vendor Expense",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "TRUE if this is a vendor expense.",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "b68f66dd-cf38-456a-835f-18c2a786db6d",
            "sourceColumn": "Is Vendor Expense",
            "summarizeBy": "none"
          },
          {
            "name": "Expense Billable Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8d4c8bc9-6a03-42c6-b50a-c6864fd865f4",
            "sourceColumn": "Expense Billable Type",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "755e0d72-96f6-45bc-b006-dfd0a3d27010",
        "measures": [
          {
            "name": "Expenses Entered",
            "description": "Amount entered as expense",
            "expression": "CALCULATE( SUM( Expenses[TotalCostIN] ) )",
            "formatString": "$ #,##0.00",
            "lineageTag": "b6738033-99e1-4a9d-8904-553fa5ae116e"
          },
          {
            "name": "Billable Expenses",
            "description": "Billable expenses",
            "expression": "SUM( Expenses[CostBill] )",
            "formatString": "$ #,##0.00",
            "lineageTag": "98b7d42f-ca48-43a0-a901-395370d977ed"
          },
          {
            "name": "Nonbillable Expenses",
            "description": "Nonbillable expenses",
            "expression": [
              "VAR Calc =",
              "    SUMX ( Expenses, Expenses[CostIN] - Expenses[CostBill] )",
              "RETURN",
              "    IF ( Calc = 0, BLANK (), Calc )"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "2e207472-e22c-41e3-ad7d-b0abc4fef3be"
          },
          {
            "name": "Expenses Paid by Company",
            "description": "The subset of expenses entered that were paid directly through the company by credit card or other. Determined by 'Paid by Company' = true",
            "expression": "CALCULATE( [Expenses Entered], Expenses[Paid By Company] = TRUE )",
            "formatString": "$ #,##0.00",
            "lineageTag": "d1965409-eb6a-4712-8c23-e87161fb2242"
          },
          {
            "name": "Expenses to Reimburse",
            "description": "The subset of expenses entered that were paid by and employee and will need to be reimbursed. Determined by 'Paid by Company' = true",
            "expression": [
              "VAR Calc =",
              "    SUMX ( Expenses, Expenses[CostIN] - Expenses[CostBill] )",
              "RETURN",
              "    IF ( Calc = 0, BLANK (), Calc )"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "495941d8-c3e0-4be9-bebb-434e20abf2ab"
          },
          {
            "name": "Net Expenses",
            "description": "Billable Expenses - Nonbillable Expenses",
            "expression": "[Billable Expenses] - [Nonbillable Expenses]",
            "formatString": "$ #,##0.00",
            "lineageTag": "4d2b80ea-ed3b-43e4-b436-995d76b01c41"
          }
        ],
        "partitions": [
          {
            "name": "Expenses",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    #\"Generate List\" = List.Generate( ()=> [sd=#date(2029,12,18), ed= #date(2030,1,1)],",
                "each [ed] > Date.FromText(StartDate),",
                "each [sd=Date.AddDays([sd], -15), ed=Date.AddDays([ed], -15)], each _),",
                "    #\"Converted to Table2\" = Table.FromList(#\"Generate List\", Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Expanded Column2\" = Table.ExpandRecordColumn(#\"Converted to Table2\", \"Column1\", {\"sd\", \"ed\"}, {\"sd\", \"ed\"}),",
                "    test = #\"Expanded Column2\",",
                "    #\"Added Custom\" = Table.AddColumn(test, \"Custom\", each [mindate= Text.From([sd]) , maxdate= Text.From([ed]),view= \"basic\", showapproval= \"false\"]),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"Custom.1\", each fxGetExpenses([Custom])),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Custom1\",{\"sd\", \"ed\", \"Custom\"}),",
                "    #\"Expanded Custom.1\" = Table.ExpandListColumn(#\"Removed Columns\", \"Custom.1\"),",
                "    #\"Expanded Custom.2\" = Table.ExpandRecordColumn(#\"Expanded Custom.1\", \"Custom.1\", {\"CatNm\", \"CatSID\", \"TaskSID\", \"TaskNm\", \"MerchantSID\", \"MerchantNm\", \"LocationSID\", \"LocationNm\", \"EstItemSID\", \"EstItemNm\", \"QBClass\", \"QBClassNm\", \"CCardSID\", \"CCardNm\", \"ClientNm\", \"ClientSID\", \"CostIN\", \"CostBill\", \"Dt\", \"HasReceipt\", \"IsSubmitted\", \"IsUnit\", \"NoCharge\", \"Nt\", \"PaidByCo\", \"ProjectNm\", \"ProjectSID\", \"RptSID\", \"SID\", \"StaffSID\", \"Tax1\", \"UnitPrice\", \"UnitRate\", \"Units\", \"UOM\", \"TaxRateSID\", \"TotalCostIN\", \"TotalCostBill\", \"VendorSID\", \"VendorNm\", \"RefNbr\", \"BillSid\", \"IsVendorExpense\"}, {\"CatNm\", \"CatSID\", \"TaskSID\", \"TaskNm\", \"MerchantSID\", \"MerchantNm\", \"LocationSID\", \"LocationNm\", \"EstItemSID\", \"EstItemNm\", \"QBClass\", \"QBClassNm\", \"CCardSID\", \"CCardNm\", \"ClientNm\", \"ClientSID\", \"CostIN\", \"CostBill\", \"Dt\", \"HasReceipt\", \"IsSubmitted\", \"IsUnit\", \"NoCharge\", \"Nt\", \"PaidByCo\", \"ProjectNm\", \"ProjectSID\", \"RptSID\", \"SID\", \"StaffSID\", \"Tax1\", \"UnitPrice\", \"UnitRate\", \"Units\", \"UOM\", \"TaxRateSID\", \"TotalCostIN\", \"TotalCostBill\", \"VendorSID\", \"VendorNm\", \"RefNbr\", \"BillSid\", \"IsVendorExpense\"}),",
                "    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Custom.2\", each ([SID] <> null)),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows1\",{{\"CatNm\", \"Expense Category\"}, {\"CatSID\", \"CategorySID\"}, {\"MerchantNm\", \"Merchant Name\"}, {\"LocationNm\", \"Location Name\"}, {\"Dt\", \"Date\"}, {\"HasReceipt\", \"Has Receipt\"}, {\"IsSubmitted\", \"Is Submitted\"}, {\"IsUnit\", \"Is Unit\"}, {\"NoCharge\", \"No Charge\"}, {\"Nt\", \"Note\"}, {\"PaidByCo\", \"Paid By Company\"}, {\"VendorNm\", \"Vendor Name\"}, {\"RefNbr\", \"Reference Number\"}, {\"IsVendorExpense\", \"Is Vendor Expense\"}, {\"CCardNm\", \"Credit Card Name\"}, {\"UOM\", \"Unit of Measure\"}}),",
                "    #\"Removed Other Columns2\" = Table.SelectColumns(#\"Renamed Columns\",{\"Expense Category\", \"CategorySID\", \"TaskSID\", \"MerchantSID\", \"Merchant Name\", \"LocationSID\", \"Location Name\", \"EstItemSID\", \"EstItemNm\", \"CCardSID\", \"Credit Card Name\", \"CostIN\", \"CostBill\", \"Date\", \"Has Receipt\", \"Is Submitted\", \"Is Unit\", \"No Charge\", \"Note\", \"Paid By Company\", \"ProjectSID\", \"RptSID\", \"SID\", \"StaffSID\", \"Tax1\", \"UnitPrice\", \"UnitRate\", \"Units\", \"Unit of Measure\", \"TaxRateSID\", \"TotalCostIN\", \"TotalCostBill\", \"VendorSID\", \"Vendor Name\", \"Reference Number\", \"BillSid\", \"Is Vendor Expense\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns2\",{{\"Expense Category\", type text}, {\"CategorySID\", Int64.Type}, {\"TaskSID\", Int64.Type}, {\"MerchantSID\", Int64.Type}, {\"Merchant Name\", type text}, {\"LocationSID\", Int64.Type}, {\"Location Name\", type text}, {\"EstItemSID\", Int64.Type}, {\"EstItemNm\", type any}, {\"CCardSID\", Int64.Type}, {\"Credit Card Name\", type text}, {\"CostIN\", type number}, {\"CostBill\", type number}, {\"Date\", type date}, {\"Has Receipt\", type logical}, {\"Is Submitted\", type logical}, {\"Is Unit\", type logical}, {\"No Charge\", type logical}, {\"Note\", type text}, {\"Paid By Company\", type logical}, {\"ProjectSID\", Int64.Type}, {\"RptSID\", Int64.Type}, {\"SID\", Int64.Type}, {\"StaffSID\", Int64.Type}, {\"Tax1\", Int64.Type}, {\"UnitPrice\", Int64.Type}, {\"UnitRate\", type number}, {\"Units\", type number}, {\"Unit of Measure\", type text}, {\"TaxRateSID\", Int64.Type}, {\"TotalCostIN\", type number}, {\"TotalCostBill\", type number}, {\"VendorSID\", Int64.Type}, {\"Vendor Name\", type text}, {\"Reference Number\", type text}, {\"BillSid\", Int64.Type}, {\"Is Vendor Expense\", type logical}}),",
                "    #\"Added Custom2\" = Table.AddColumn(#\"Changed Type\", \"Expense Billable Type\", each if [No Charge] = true then \"Nonbillable\" else \"Billable\", type text),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Expenses\") else #\"Added Custom2\"",
                "in",
                "    #\"Sample Data\"",
                "",
                "",
                "",
                "    /*let",
                "FormattedStartDate = Date.ToText(Date.From(StartDate), [Format=\"MM/dd/yyyy\", Culture=\"en-US\"]),",
                "projectsids = \"[\" & Text.Combine(List.Transform(Projects[ProjectSID], Text.From), \", \") & \"]\",",
                "maxdate = \"1/1/2023\",",
                "    PostData = \"{mindate: \"\"\" & FormattedStartDate & \"\"\", maxdate: \"\"\" & maxdate & \"\"\",projectsids: \" & projectsids & \", view: \"\"basic\"\", showapproval: false}\",",
                "    Post = fxGetBigTimeData(\"/expense/reportbyfilter\", Text.ToBinary(PostData) ),",
                "    #\"Converted to Table\" = Table.FromList(Post, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"CatNm\", \"CatSID\", \"TaskSID\", \"TaskNm\", \"MerchantSID\", \"MerchantNm\", \"LocationSID\", \"LocationNm\", \"EstItemSID\", \"EstItemNm\", \"QBClass\", \"QBClassNm\", \"CCardSID\", \"CCardNm\", \"ClientNm\", \"ClientSID\", \"CostIN\", \"CostBill\", \"Dt\", \"HasReceipt\", \"IsSubmitted\", \"IsUnit\", \"NoCharge\", \"Nt\", \"PaidByCo\", \"ProjectNm\", \"ProjectSID\", \"RptSID\", \"SID\", \"StaffSID\", \"Tax1\", \"UnitPrice\", \"UnitRate\", \"Units\", \"UOM\", \"TaxRateSID\", \"TotalCostIN\", \"TotalCostBill\", \"VendorSID\", \"VendorNm\", \"RefNbr\", \"BillSid\", \"IsVendorExpense\"}, {\"CatNm\", \"CatSID\", \"TaskSID\", \"TaskNm\", \"MerchantSID\", \"MerchantNm\", \"LocationSID\", \"LocationNm\", \"EstItemSID\", \"EstItemNm\", \"QBClass\", \"QBClassNm\", \"CCardSID\", \"CCardNm\", \"ClientNm\", \"ClientSID\", \"CostIN\", \"CostBill\", \"Dt\", \"HasReceipt\", \"IsSubmitted\", \"IsUnit\", \"NoCharge\", \"Nt\", \"PaidByCo\", \"ProjectNm\", \"ProjectSID\", \"RptSID\", \"SID\", \"StaffSID\", \"Tax1\", \"UnitPrice\", \"UnitRate\", \"Units\", \"UOM\", \"TaxRateSID\", \"TotalCostIN\", \"TotalCostBill\", \"VendorSID\", \"VendorNm\", \"RefNbr\", \"BillSid\", \"IsVendorExpense\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded Column1\",{{\"CatNm\", \"Expense Category\"}, {\"CatSID\", \"CategorySID\"}, {\"MerchantNm\", \"Merchant Name\"}, {\"LocationNm\", \"Location Name\"}, {\"Dt\", \"Date\"}, {\"HasReceipt\", \"Has Receipt\"}, {\"IsSubmitted\", \"Is Submitted\"}, {\"IsUnit\", \"Is Unit\"}, {\"NoCharge\", \"No Charge\"}, {\"Nt\", \"Note\"}, {\"PaidByCo\", \"Paid By Company\"}, {\"VendorNm\", \"Vendor Name\"}, {\"RefNbr\", \"Reference Number\"}, {\"IsVendorExpense\", \"Is Vendor Expense\"}, {\"CCardNm\", \"Credit Card Name\"}, {\"UOM\", \"Unit of Measure\"}}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Renamed Columns\",{\"Expense Category\", \"CategorySID\", \"TaskSID\", \"MerchantSID\", \"Merchant Name\", \"LocationSID\", \"Location Name\", \"EstItemSID\", \"EstItemNm\", \"CCardSID\", \"Credit Card Name\", \"CostIN\", \"CostBill\", \"Date\", \"Has Receipt\", \"Is Submitted\", \"Is Unit\", \"No Charge\", \"Note\", \"Paid By Company\", \"ProjectSID\", \"RptSID\", \"SID\", \"StaffSID\", \"Tax1\", \"UnitPrice\", \"UnitRate\", \"Units\", \"Unit of Measure\", \"TaxRateSID\", \"TotalCostIN\", \"TotalCostBill\", \"VendorSID\", \"Vendor Name\", \"Reference Number\", \"BillSid\", \"Is Vendor Expense\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"Expense Category\", type text}, {\"CategorySID\", Int64.Type}, {\"TaskSID\", Int64.Type}, {\"MerchantSID\", Int64.Type}, {\"Merchant Name\", type text}, {\"LocationSID\", Int64.Type}, {\"Location Name\", type text}, {\"EstItemSID\", Int64.Type}, {\"EstItemNm\", type any}, {\"CCardSID\", Int64.Type}, {\"Credit Card Name\", type text}, {\"CostIN\", type number}, {\"CostBill\", type number}, {\"Date\", type date}, {\"Has Receipt\", type logical}, {\"Is Submitted\", type logical}, {\"Is Unit\", type logical}, {\"No Charge\", type logical}, {\"Note\", type text}, {\"Paid By Company\", type logical}, {\"ProjectSID\", Int64.Type}, {\"RptSID\", Int64.Type}, {\"SID\", Int64.Type}, {\"StaffSID\", Int64.Type}, {\"Tax1\", Int64.Type}, {\"UnitPrice\", Int64.Type}, {\"UnitRate\", type number}, {\"Units\", type number}, {\"Unit of Measure\", type text}, {\"TaxRateSID\", Int64.Type}, {\"TotalCostIN\", type number}, {\"TotalCostBill\", type number}, {\"VendorSID\", Int64.Type}, {\"Vendor Name\", type text}, {\"Reference Number\", type text}, {\"BillSid\", Int64.Type}, {\"Is Vendor Expense\", type logical}}),",
                " ",
                "",
                "",
                "test = List.Generate( ()=>fx(\"1/1/2030\"),",
                "each [rc] >0 ,",
                "each fx([min]), each [tbl]),",
                "    Custom1 = fx(\"1/1/2030\"),",
                "    Custom2 = List.Generate(()=> [tbl = #table({},{}), rc =10, min = \"1/1/2023\"], each [rc]>=0, each [tbl = #table({},{}), rc = [rc] -1, min = \"1/1/2023\"], each [tbl]),",
                "    Custom3 = test,",
                "    Custom4 = Table.Combine(Custom3)",
                "in",
                "    Custom4",
                "",
                "*/"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Tasks",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "columns": [
          {
            "name": "TaskSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "isKey": true,
            "lineageTag": "2a9d9712-0edb-41a6-b2cf-e8d962899610",
            "sourceColumn": "TaskSID",
            "summarizeBy": "none"
          },
          {
            "name": "Task Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Task \"name\" (or title)",
            "lineageTag": "62c86927-c0e9-41f7-b6ec-2338511d5ffc",
            "sourceColumn": "Task Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task Group",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "BigTime supports two-level task lists, and project plans can include a mix of tasks/sub-tasks. Any task with a TaskGroup is considered a sub-task. You can group tasks together in reports/UI by assigning them the same TaskGroup value.",
            "lineageTag": "f1554da3-659c-44ea-9cb4-a7019543085e",
            "sourceColumn": "Task Group",
            "summarizeBy": "none"
          },
          {
            "name": "Task Group Derrived",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Uses Task Group if available, otherwise use Task Name",
            "lineageTag": "fd331831-3be9-40fa-892e-3ea29187687d",
            "sourceColumn": "Task Group Derrived",
            "summarizeBy": "none"
          },
          {
            "name": "Task Full Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "The fullname is another way of referencing a task. FullName is a read-only property that combines TaskGroup and TaskNm in TaskGroup:TaskNm format. A task with a TaskGroup value of \"Design\" and a TaskNm value of \"Initial Project Plan\" would have a FullName value of \"Design:Initial Project Plan\"",
            "lineageTag": "4c35ca46-8e0f-4642-a853-24982f373461",
            "sourceColumn": "Task Full Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task Sort Order",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "8ea69012-6030-4047-9357-2376d49d4324",
            "sourceColumn": "Task Sort Order",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Type ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "5e973278-c2b6-496d-91bf-b75b294cfcf5",
            "sourceColumn": "Task Type ID",
            "summarizeBy": "count"
          },
          {
            "name": "Task Type Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Every task in the system is assigned a type, and users can manage workflow and settings for each type individually. Think of the type as a \"template\" into which a given task will fit.",
            "lineageTag": "f4b79f74-2a21-4309-999e-ab20dff363e1",
            "sourceColumn": "Task Type Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task External Type Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1db1661f-8e4a-4eb2-9e07-03e98cfbfc1c",
            "sourceColumn": "Task External Type Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task Current Status ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "ea82eee9-cf29-42c6-b650-f793e0144abb",
            "sourceColumn": "Task Current Status ID",
            "summarizeBy": "count"
          },
          {
            "name": "Task Current Status Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "The current status is the current workflow \"stage\" for a task. While firms may have the same workflow stages for all of their task types, each type can support custom workflow.",
            "lineageTag": "c03f2f09-e87d-48e8-aad2-2407b5ca15d3",
            "sourceColumn": "Task Current Status Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task Order",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "2ba6b196-e7b9-41e5-b3aa-759b097ef8c3",
            "sourceColumn": "Task Order",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Priority ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "bd6dbabf-e9b1-4f97-8746-c40049a4f52e",
            "sourceColumn": "Task Priority ID",
            "summarizeBy": "count"
          },
          {
            "name": "Task Priority Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "HIGH MEDIUM or LOW.",
            "lineageTag": "a6647d4f-c007-4457-a96f-455e6c0d8250",
            "sourceColumn": "Task Priority Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task Notes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2092f35d-f69a-4efb-b683-61b4a11666c6",
            "sourceColumn": "Task Notes",
            "summarizeBy": "none"
          },
          {
            "name": "Task Non Billable",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "isHidden": true,
            "lineageTag": "7acb7e78-9ae5-4d23-8103-338e195e6150",
            "sourceColumn": "Task Non Billable",
            "summarizeBy": "none"
          },
          {
            "name": "Task Assignment Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Comma separated list of staff names assigned to the task",
            "lineageTag": "edc1d93a-b8cd-428f-873d-8e523f38c27d",
            "sourceColumn": "Task Assignment Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Start date of the task",
            "lineageTag": "997234b3-d1fa-42af-8a88-92c49c45c3f8",
            "sourceColumn": "Task Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "Task Fee or Expense ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "9a0e8e34-7064-4966-941f-64ca29ebe6de",
            "sourceColumn": "Task Fee or Expense ID",
            "summarizeBy": "count"
          },
          {
            "name": "Task Fee or Expense Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "If you are going to setup a budget for a task (eg - so that user can bill time/expenses against it) -- then use this value to determine whether the task appears on the user's timesheet, thier expense entry form(s) or both. Values are an enum (FeeOnly, ExpenseOnly, FeeAndExpense).",
            "lineageTag": "e06da5ff-6ec4-4417-8114-054b95329a9e",
            "sourceColumn": "Task Fee or Expense Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task Budget Hours",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "d52abf06-1146-4369-bf91-40528f7f5b18",
            "sourceColumn": "Task Budget Hours",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Budget Expenses",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "4b9d8380-441b-4f24-bdaf-d6525b6b5e8b",
            "sourceColumn": "Task Budget Expenses",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Budget Fees",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "96609205-6380-479a-a0b3-462e0ee2295f",
            "sourceColumn": "Task Budget Fees",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Budget Total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "a781df91-c94c-4e15-ae4d-89394acb443e",
            "sourceColumn": "Task Budget Total",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Remaining Budget Hours",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "0f922089-8624-4f8e-8965-aa92c3076c70",
            "sourceColumn": "Task Remaining Budget Hours",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Remaining Budget Fees",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "364213cd-3dbd-4804-99e1-9b13ad58fdab",
            "sourceColumn": "Task Remaining Budget Fees",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Is Archived",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "013c1f74-5b99-4582-9abc-4a726302cf6f",
            "sourceColumn": "Task Is Archived",
            "summarizeBy": "none"
          },
          {
            "name": "Task Date Created",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Date task was created",
            "formatString": "Long Date",
            "lineageTag": "d4e780b9-862d-4b20-8dfa-47d28706ac1a",
            "sourceColumn": "Task Date Created",
            "summarizeBy": "none"
          },
          {
            "name": "Task Date Modified",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Date task was last modified",
            "formatString": "Long Date",
            "lineageTag": "c50356b5-6a6b-46a6-b3ab-539df24e211a",
            "sourceColumn": "Task Date Modified",
            "summarizeBy": "none"
          },
          {
            "name": "Task Is Ovedue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "6a787158-9478-4d3f-835c-87850ed94350",
            "sourceColumn": "Task Is Ovedue",
            "summarizeBy": "none"
          },
          {
            "name": "Task Is Recurring",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "89be3d62-352d-4132-8c4f-20028860a952",
            "sourceColumn": "Task Is Recurring",
            "summarizeBy": "none"
          },
          {
            "name": "Task Fee Type ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "394ba346-4c52-4112-8c7d-bd605f426409",
            "sourceColumn": "Task Fee Type ID",
            "summarizeBy": "count"
          },
          {
            "name": "Task Fee Type Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "78ae07c6-e0c2-4709-bd7e-9518c0da0430",
            "sourceColumn": "Task Fee Type Name",
            "summarizeBy": "none"
          },
          {
            "name": "Task Retainer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "629b46ae-9ccc-43f0-a71c-a630dd54cba0",
            "sourceColumn": "Task Retainer",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Billable Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Indicates \"Billable\" or \"Nonbillable\" based on the \"No Charge\" column",
            "lineageTag": "b549c21b-6824-4cef-a5da-3f0004e41085",
            "sourceColumn": "Task Billable Type",
            "summarizeBy": "none"
          },
          {
            "name": "Task Assignment Count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Total number of staff members assigned to this task.\t",
            "formatString": "0",
            "lineageTag": "e34d4865-191f-4e0d-92e3-49962ec7e86e",
            "sourceColumn": "Task Assignment Count",
            "summarizeBy": "sum"
          },
          {
            "name": "Task Due Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Date on which a task is \"due.\"",
            "lineageTag": "a8c4a091-b063-402a-8b38-28821be6888f",
            "sourceColumn": "Task Due Date",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "bdb5f416-f438-4001-82cd-80be5f27b501",
        "measures": [
          {
            "name": "Budget Expenses",
            "description": "Budget for billable expenses on the selected tasks",
            "displayFolder": "_Budgets",
            "expression": [
              "CALCULATE(",
              "    SUM( Tasks[Task Budget Expenses] ),",
              "    CROSSFILTER( 'Time Entries'[TaskSID], Tasks[TaskSID], Both ),",
              "    REMOVEFILTERS( Staffers),",
              "    REMOVEFILTERS( Dates[Date] )",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "261a481a-87dc-414f-a2b9-78e0e7b16cb4"
          },
          {
            "name": "Budget Fees",
            "description": "Budget fees for the selected tasks",
            "displayFolder": "_Budgets",
            "expression": [
              "CALCULATE(",
              "    SUM( Tasks[Task Budget Fees] ),",
              "    CROSSFILTER( 'Time Entries'[TaskSID], Tasks[TaskSID], Both ),",
              "    REMOVEFILTERS( Staffers),",
              "    REMOVEFILTERS( Dates[Date] )",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "11c07c9c-d9bf-45b3-aae4-1d16f25f891b"
          },
          {
            "name": "Budget Hours",
            "description": "Hourly budget for the selected tasks",
            "displayFolder": "_Budgets",
            "expression": [
              "CALCULATE(",
              "    SUM( Tasks[Task Budget Hours] ),",
              "    CROSSFILTER( 'Time Entries'[TaskSID], Tasks[TaskSID], Both ),",
              "    REMOVEFILTERS( Staffers),",
              "    REMOVEFILTERS( Dates[Date] )",
              ")"
            ],
            "formatString": "#,0.00",
            "lineageTag": "0141b1a9-33b8-4a2d-9262-453b1898ab78"
          },
          {
            "name": "Budget Total Fees and Expenses",
            "description": "Fee+Expense budget",
            "displayFolder": "_Budgets",
            "expression": [
              "CALCULATE(",
              "    SUM( Tasks[Task Budget Total] ),",
              "    CROSSFILTER( 'Time Entries'[TaskSID], Tasks[TaskSID], Both ),",
              "    REMOVEFILTERS( Staffers),",
              "    REMOVEFILTERS( Dates[Date] )",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "101cfd49-63ea-4822-9ad3-bdd5e727c782"
          },
          {
            "name": "Remaining Fee Budget",
            "description": "Budget Fees - Billable Fees",
            "displayFolder": "_Budgets",
            "expression": "[Budget Fees] - [Billable Fees]",
            "formatString": "$ #,##0.00",
            "lineageTag": "596825d1-de83-42ed-81ad-f3064550b06d"
          },
          {
            "name": "Remaining Fee Budget %",
            "description": "Remaining Fee Budget / Budget Fees",
            "displayFolder": "_Budgets",
            "expression": "DIVIDE( [Remaining Fee Budget], [Budget Fees] )",
            "formatString": "#,##0.00 %",
            "lineageTag": "2acc2ed4-1c85-4ee7-8df0-dfd8810afbfa"
          },
          {
            "name": "Fee Budget % Complete",
            "description": "Billable Fees / Budget Fees",
            "displayFolder": "_Budgets",
            "expression": "DIVIDE( [Billable Fees], [Budget Fees] )",
            "formatString": "#,##0.00 %",
            "lineageTag": "bdd24c5c-228d-4023-b010-338c04ee73dc"
          },
          {
            "name": "Remaining Total Fees and Expenses",
            "description": "Budget Total Fees and Expenses - Billable Fees and Billable Expenses",
            "displayFolder": "_Budgets",
            "expression": "[Budget Total Fees and Expenses] - [Billable Fees and Billable Expenses]",
            "formatString": "$ #,##0.00",
            "lineageTag": "342fd72f-7730-4124-b769-1f2d4d4420e4"
          },
          {
            "name": "Fee and Expense Budget % Complete",
            "description": "Billable Fees and Expenses / Budget Total Fees and Expenses",
            "displayFolder": "_Budgets",
            "expression": "DIVIDE( [Billable Fees and Billable Expenses], [Budget Total Fees and Expenses] )",
            "formatString": "#,##0.00 %",
            "lineageTag": "adc8e153-02ee-4670-a750-e968c38233e1"
          },
          {
            "name": "Remaining to Invoice to Total Fees and Expenses Budget",
            "description": "Budget Total Fees and Expenses - Invoiced Amount Inception To Date",
            "displayFolder": "_Budgets",
            "expression": "[Budget Total Fees and Expenses] - CALCULATE( [Invoice Amount], 'Time Intelligence'[Name] = \"ITD\")",
            "formatString": "$ #,##0.00",
            "lineageTag": "c2afc3bd-6049-4676-85d0-e1bfe2b8a3e0"
          }
        ],
        "partitions": [
          {
            "name": "Tasks",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.SelectColumns(Projects, \"ProjectSID\"),",
                "    #\"Added Custom1\" = Table.AddColumn(Source, \"Custom\", each fxGetBigTimeData(\"/task/listByProject/\" & Text.From([ProjectSID])& \"?showCompleted=True\")),",
                "    Custom3 = Table.ExpandListColumn(#\"Added Custom1\", \"Custom\"),",
                "    Custom1 = #\"Custom3\",",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Custom1,{\"Custom\"}),",
                "    #\"Expanded Tasks\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"Custom\", {\"FollowupAction\", \"ReadyForBillingStatusSid\", \"CurrentFollowupStatus\", \"TaskSid\", \"ProjectSid\", \"CurrencySid\", \"TaskNm\", \"TaskGroup\", \"TaskGroupDerived\", \"TaskGroupSid\", \"FullName\", \"SortOrd\", \"ProjectNm\", \"ProjectId\", \"ClientId\", \"TaskType\", \"TaskType_nm\", \"ExternalTypeNm\", \"CurrentStatus\", \"CurrentStatus_nm\", \"TaskId\", \"Priority\", \"Priority_nm\", \"Notes\", \"NoCharge\", \"AssignmentNames\", \"AssignmentList\", \"AssignCount\", \"FeeOrExpense\", \"FeeOrExpense_nm\", \"BudgetHours\", \"BudgetExps\", \"BudgetFees\", \"BudgetTotal\", \"BudgetHrsIn\", \"BudgetInputTotal\", \"BudgetRemainingEstHrs\", \"BudgetRemainingEstFee\", \"BudgetInvoicedToDate\", \"PerComp\", \"IsArchived\", \"InactiveProject\", \"DefaultQBClass\", \"DefaultQBTaxDetail\", \"DefaultQBItem\", \"Class_nm\", \"Item_nm\", \"IsSeriesMaster\", \"MasterTaskSid\", \"Series\", \"ParentSid\", \"UdfValues\", \"DtCreated\", \"DtModified\", \"TransactionSummary\", \"Links\", \"MaxGroupId\", \"IsOverdue\", \"IsRecurring\", \"FeeType\", \"FeeType_nm\", \"Retainer\", \"FeeBudgetDistribution\", \"ProjectBudgetStyle\", \"StartDt\", \"DueDt\"}, {\"Tasks.FollowupAction\", \"Tasks.ReadyForBillingStatusSid\", \"Tasks.CurrentFollowupStatus\", \"Tasks.TaskSid\", \"Tasks.ProjectSid\", \"Tasks.CurrencySid\", \"Tasks.TaskNm\", \"Tasks.TaskGroup\", \"Tasks.TaskGroupDerived\", \"Tasks.TaskGroupSid\", \"Tasks.FullName\", \"Tasks.SortOrd\", \"Tasks.ProjectNm\", \"Tasks.ProjectId\", \"Tasks.ClientId\", \"Tasks.TaskType\", \"Tasks.TaskType_nm\", \"Tasks.ExternalTypeNm\", \"Tasks.CurrentStatus\", \"Tasks.CurrentStatus_nm\", \"Tasks.TaskId\", \"Tasks.Priority\", \"Tasks.Priority_nm\", \"Tasks.Notes\", \"Tasks.NoCharge\", \"Tasks.AssignmentNames\", \"Tasks.AssignmentList\", \"Tasks.AssignCount\", \"Tasks.FeeOrExpense\", \"Tasks.FeeOrExpense_nm\", \"Tasks.BudgetHours\", \"Tasks.BudgetExps\", \"Tasks.BudgetFees\", \"Tasks.BudgetTotal\", \"Tasks.BudgetHrsIn\", \"Tasks.BudgetInputTotal\", \"Tasks.BudgetRemainingEstHrs\", \"Tasks.BudgetRemainingEstFee\", \"Tasks.BudgetInvoicedToDate\", \"Tasks.PerComp\", \"Tasks.IsArchived\", \"Tasks.InactiveProject\", \"Tasks.DefaultQBClass\", \"Tasks.DefaultQBTaxDetail\", \"Tasks.DefaultQBItem\", \"Tasks.Class_nm\", \"Tasks.Item_nm\", \"Tasks.IsSeriesMaster\", \"Tasks.MasterTaskSid\", \"Tasks.Series\", \"Tasks.ParentSid\", \"Tasks.UdfValues\", \"Tasks.DtCreated\", \"Tasks.DtModified\", \"Tasks.TransactionSummary\", \"Tasks.Links\", \"Tasks.MaxGroupId\", \"Tasks.IsOverdue\", \"Tasks.IsRecurring\", \"Tasks.FeeType\", \"Tasks.FeeType_nm\", \"Tasks.Retainer\", \"Tasks.FeeBudgetDistribution\", \"Tasks.ProjectBudgetStyle\", \"Tasks.StartDt\", \"Tasks.DueDt\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded Tasks\",{{\"Tasks.TaskSid\", \"TaskSID\"}, {\"Tasks.TaskNm\", \"Task Name\"}, {\"Tasks.TaskGroup\", \"Task Group\"}, {\"Tasks.TaskGroupDerived\", \"Task Group Derrived\"}, {\"Tasks.FullName\", \"Task Full Name\"}, {\"Tasks.SortOrd\", \"Task Sort Order\"}, {\"Tasks.TaskType\", \"Task Type ID\"}, {\"Tasks.TaskType_nm\", \"Task Type Name\"}, {\"Tasks.ExternalTypeNm\", \"Task External Type Name\"}, {\"Tasks.CurrentStatus\", \"Task Current Status ID\"}, {\"Tasks.CurrentStatus_nm\", \"Task Current Status Name\"}, {\"Tasks.Priority\", \"Task Priority ID\"}, {\"Tasks.Priority_nm\", \"Task Priority Name\"}, {\"Tasks.Notes\", \"Task Notes\"}, {\"Tasks.NoCharge\", \"Task Non Billable\"}, {\"Tasks.AssignmentNames\", \"Task Assignment Name\"}, {\"Tasks.StartDt\", \"Task Start Date\"}, {\"Tasks.FeeOrExpense\", \"Task Fee or Expense ID\"}, {\"Tasks.FeeOrExpense_nm\", \"Task Fee or Expense Name\"}, {\"Tasks.BudgetHours\", \"Task Budget Hours\"}, {\"Tasks.BudgetExps\", \"Task Budget Expenses\"}, {\"Tasks.BudgetFees\", \"Task Budget Fees\"}, {\"Tasks.BudgetTotal\", \"Task Budget Total\"}, {\"Tasks.BudgetRemainingEstHrs\", \"Task Remaining Budget Hours\"}, {\"Tasks.BudgetRemainingEstFee\", \"Task Remaining Budget Fees\"}, {\"Tasks.IsArchived\", \"Task Is Archived\"}, {\"Tasks.DtCreated\", \"Task Date Created\"}, {\"Tasks.DtModified\", \"Task Date Modified\"}, {\"Tasks.IsOverdue\", \"Task Is Ovedue\"}, {\"Tasks.IsRecurring\", \"Task Is Recurring\"}, {\"Tasks.FeeType\", \"Task Fee Type ID\"}, {\"Tasks.FeeType_nm\", \"Task Fee Type Name\"}, {\"Tasks.Retainer\", \"Task Retainer\"}, {\"Tasks.TaskId\", \"Task Order\"}, {\"Tasks.AssignCount\", \"Task Assignment Count\"}, {\"Tasks.DueDt\", \"Task Due Date\"}}),",
                "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Renamed Columns\",{\"TaskSID\", \"Task Name\", \"Task Group\", \"Task Group Derrived\", \"Task Full Name\", \"Task Sort Order\", \"Task Type ID\", \"Task Type Name\", \"Task External Type Name\", \"Task Current Status ID\", \"Task Current Status Name\", \"Task Order\", \"Task Priority ID\", \"Task Priority Name\", \"Task Notes\", \"Task Non Billable\", \"Task Assignment Name\", \"Task Assignment Count\", \"Task Start Date\", \"Task Fee or Expense ID\", \"Task Fee or Expense Name\", \"Task Budget Hours\", \"Task Budget Expenses\", \"Task Budget Fees\", \"Task Budget Total\", \"Task Remaining Budget Hours\", \"Task Remaining Budget Fees\", \"Task Is Archived\", \"Task Date Created\", \"Task Date Modified\", \"Task Is Ovedue\", \"Task Is Recurring\", \"Task Fee Type ID\", \"Task Fee Type Name\", \"Task Retainer\", \"Task Due Date\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns1\",{{\"TaskSID\", Int64.Type}, {\"Task Name\", type text}, {\"Task Group\", type text}, {\"Task Group Derrived\", type text}, {\"Task Full Name\", type text}, {\"Task Sort Order\", Int64.Type}, {\"Task Type ID\", Int64.Type}, {\"Task Type Name\", type text}, {\"Task External Type Name\", type text}, {\"Task Current Status ID\", Int64.Type}, {\"Task Current Status Name\", type text}, {\"Task Order\", Int64.Type}, {\"Task Priority ID\", Int64.Type}, {\"Task Priority Name\", type text}, {\"Task Notes\", type text}, {\"Task Non Billable\", type logical}, {\"Task Assignment Name\", type text}, {\"Task Start Date\", type date}, {\"Task Fee or Expense ID\", Int64.Type}, {\"Task Fee or Expense Name\", type text}, {\"Task Budget Hours\", type number}, {\"Task Budget Expenses\", type number}, {\"Task Budget Fees\", type number}, {\"Task Budget Total\", type number}, {\"Task Remaining Budget Hours\", type number}, {\"Task Remaining Budget Fees\", type number}, {\"Task Is Archived\", type logical}, {\"Task Date Created\", type date}, {\"Task Date Modified\", type date}, {\"Task Is Ovedue\", type logical}, {\"Task Is Recurring\", type logical}, {\"Task Fee Type ID\", Int64.Type}, {\"Task Fee Type Name\", type text}, {\"Task Retainer\", type number}, {\"Task Assignment Count\", Int64.Type}, {\"Task Due Date\", type date}}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Changed Type\", \"Task Billable Type\", each if [Task Non Billable] = true then \"Nonbillable\" else \"Billable\", type text),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Added Custom\", each ([TaskSID] <> null)),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Tasks\") else #\"Filtered Rows\"",
                "in",
                "    #\"Sample Data\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Capacity",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "StaffSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "25920c66-7c49-4208-91f1-d1bc372c0aab",
            "sourceColumn": "StaffSid",
            "summarizeBy": "none"
          },
          {
            "name": "RealCapacity",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "description": "We track total 'available' hours per staffer so that we can track utilization. This field will return the total hours this staffer has based on holidays, settings, and other allocations.",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "4a8a2c86-0ee4-4061-9580-501f3b13708d",
            "sourceColumn": "RealCapacity",
            "summarizeBy": "sum"
          },
          {
            "name": "RawCapacity",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "description": "Bigtime tracks total 'available' hours per staffer so that utilization can be tracked. This field will return the total hours this staffer has in a \"typical\" month (eg - 20 days). Most firms set this number between 140 and 160 by default.",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "9d94d999-76fc-4c44-9d1a-3edb41119690",
            "sourceColumn": "RawCapacity",
            "summarizeBy": "sum"
          },
          {
            "name": "Period",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "isHidden": true,
            "lineageTag": "cdc7b3c6-3ebf-4de4-9840-e81d751f692f",
            "sourceColumn": "Period",
            "summarizeBy": "none"
          },
          {
            "name": "AllocatedHours",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "description": "The number of hours allocated for the staff in the specified period.",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "23f3f22f-e178-48c5-9b70-cf52e83e4c77",
            "sourceColumn": "AllocatedHours",
            "summarizeBy": "sum"
          },
          {
            "name": "ProjectSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "6b331530-5898-4fa0-90fe-31fcf0ffafba",
            "sourceColumn": "ProjectSid",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "0ad10bca-d3ad-4eee-91f7-4dc5a9890f8f",
        "measures": [
          {
            "name": "Real Capacity",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "description": "We track total 'available' hours per staffer so that we can track utilization. This field will return the total hours this staffer has based on holidays, settings, and other allocations.",
            "expression": "SUM( Capacity[RealCapacity] )",
            "formatString": "#,##0.00",
            "isHidden": true,
            "lineageTag": "57c4e570-e8bc-484f-a84f-6342b3544da9"
          },
          {
            "name": "Raw Capacity",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "description": "Raw capacity is calculated as 8 hours per week day (Monday - Friday) for the tenure of a staffer's employment as determined by the 'Earliest Transaction Date' and 'Latest Transaction Date' fields. Does not include any adjustments or reductions for holidays, personal time, etc.",
            "expression": [
              "",
              "VAR _WorkDays = // Returns table of workdays (Monday - Friday)",
              "    CALCULATETABLE (",
              "        VALUES ( Dates[Date] ),",
              "        Dates[Day of Week] <> 7         // Exclude Saturday",
              "            && Dates[Day of Week] <> 1  // Exclude Sunday",
              "    )",
              "VAR _Hours = // Iterates the above table and counts the active staff members on those days",
              "    SUMX (",
              "        _WorkDays,",
              "        VAR _DateRow = Dates[Date]",
              "        VAR _calc =",
              "            CALCULATE (",
              "                COUNTROWS ( VALUES(Staffers[StaffSID]) ),",
              "                _DateRow >= Staffers[Earliest Transaction Date]",
              "                    && _DateRow <= Staffers[Latest Transaction Date]",
              "            )",
              "        RETURN",
              "            _calc",
              "    ) * 8  // Multiply active staff member days by 8 hours per day",
              "RETURN",
              "    _Hours",
              ""
            ],
            "formatString": "#,##0.00",
            "lineageTag": "c05d257d-9845-4002-9e0d-5da6e6afbf40"
          },
          {
            "name": "Date Context",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "MIN( Dates[Date]) & \" - \" & MAX( Dates[Date] )",
            "isHidden": true,
            "lineageTag": "7b03822e-6152-4b2b-b619-d8d1437f4e36"
          },
          {
            "name": "Utilization % of Real Capacity",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "DIVIDE( [Billable Hours] , [Real Capacity] )",
            "formatString": "0.00%;-0.00%;0.00%",
            "isHidden": true,
            "lineageTag": "75cc5ed8-85b5-4c9d-a045-d94e2515a3ee"
          },
          {
            "name": "Raw Utilization %",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "DIVIDE( [Billable Hours] , [Raw Capacity] )",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "fa818c61-0280-4d01-8718-c15e3425d715"
          }
        ],
        "partitions": [
          {
            "name": "Capacity",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = fxGetBigTimeData(\"/staff/staffAllocations/?startDate=\" & StartDate & \"&endDate=12/31/2030&allocationPeriodType=monthly\"),",
                "    details = Source[details],",
                "    #\"Converted to Table\" = Table.FromList(details, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"StaffSid\", \"StaffFName\", \"StaffSName\", \"StaffCC1\", \"StaffCC2\", \"StaffCC3\", \"StaffOrgID\", \"StaffInactive\", \"StaffStatus\", \"RealCapacity\", \"RawCapacity\", \"ProjectSid\", \"ProjectDName\", \"ProjectCC1\", \"ProjectCC2\", \"ProjectCC3\", \"ProjectBillable\", \"ProjectInactive\", \"ProjectDeactivated\", \"ProjectTypeId\", \"ProjectStatusProd\", \"Period\", \"AllocatedHours\", \"StaffRole\", \"IsRole\"}, {\"StaffSid\", \"StaffFName\", \"StaffSName\", \"StaffCC1\", \"StaffCC2\", \"StaffCC3\", \"StaffOrgID\", \"StaffInactive\", \"StaffStatus\", \"RealCapacity\", \"RawCapacity\", \"ProjectSid\", \"ProjectDName\", \"ProjectCC1\", \"ProjectCC2\", \"ProjectCC3\", \"ProjectBillable\", \"ProjectInactive\", \"ProjectDeactivated\", \"ProjectTypeId\", \"ProjectStatusProd\", \"Period\", \"AllocatedHours\", \"StaffRole\", \"IsRole\"}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Expanded Column1\",{\"StaffSid\", \"RealCapacity\", \"RawCapacity\", \"ProjectSid\", \"Period\", \"AllocatedHours\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"StaffSid\", Int64.Type}, {\"RealCapacity\", type number}, {\"RawCapacity\", type number}, {\"AllocatedHours\", type number}, {\"ProjectSid\", Int64.Type}}),",
                "    #\"Transform Period\" = Table.TransformColumns(#\"Changed Type\",{{\"Period\", each Date.From(Text.From(_), \"en-US\"), type date}}),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Capacity\") else #\"Transform Period\"",
                "in",
                "    #\"Sample Data\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Invoices",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "columns": [
          {
            "name": "Sid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a068aea9-7893-4aee-8b08-9a8d082e829e",
            "sourceColumn": "Sid",
            "summarizeBy": "sum"
          },
          {
            "name": "Audit Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "252e8e54-7f33-4147-9135-bf035ef08a13",
            "sourceColumn": "Audit Status",
            "summarizeBy": "sum"
          },
          {
            "name": "Invoice Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Invoice \"number\" which the customer will see on the printed invoice.\t",
            "lineageTag": "bf7513b2-dbe1-4612-a263-8fa4a427b926",
            "sourceColumn": "Invoice Number",
            "summarizeBy": "none"
          },
          {
            "name": "Invoice Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "DATE for the invoice (eg - the date that appears on the printed invoice). Note that this will default to the DRAFT date unless the user changes that value when the invoice is posted to their accounting system (often - invoices are drafed a few days after the end of a given month, but they are \"dated\" for the last day of the month).\t",
            "formatString": "Long Date",
            "isHidden": true,
            "lineageTag": "8770b498-dfe6-4077-a0f3-c0b1b66a064e",
            "sourceColumn": "Invoice Date",
            "summarizeBy": "none"
          },
          {
            "name": "Invoice Period",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b2925190-9d7c-43a9-8ac6-9b74e5ee78c1",
            "sourceColumn": "Invoice Period",
            "summarizeBy": "sum"
          },
          {
            "name": "Invoice Date Sent",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Date this invoice was POSTED (eg - recorded and sent to the client. THIS is the date that we post to QuickBooks or other accounting packages).",
            "formatString": "Long Date",
            "isHidden": true,
            "lineageTag": "48959da5-213b-4a46-a006-86048826f038",
            "sourceColumn": "Invoice Date Sent",
            "summarizeBy": "none"
          },
          {
            "name": "InvoiceAmt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "description": "AMOUNT in tblInvoice (note that this property is pulled for the invoice Simple view, and is the same as TotalAmt in the detailed view).",
            "isHidden": true,
            "lineageTag": "592e23aa-4777-47db-9017-950a6611777a",
            "sourceColumn": "InvoiceAmt",
            "summarizeBy": "sum"
          },
          {
            "name": "Subtotal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "description": "TOTAL of line item amounts. This is the invoice amount NET OF TAXES and DISCOUNTS.\t",
            "isHidden": true,
            "lineageTag": "cb963a12-72b7-4bda-ae8a-16e85c77c294",
            "sourceColumn": "Subtotal",
            "summarizeBy": "sum"
          },
          {
            "name": "SalesTaxAmt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Total amount of SALES TAXES on this invoice",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "01253c17-30c5-49c9-bf67-7b8e7ed26310",
            "sourceColumn": "SalesTaxAmt",
            "summarizeBy": "sum"
          },
          {
            "name": "TotalAmt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "description": "The invoice \"amount due\". This is the invoice amount INCLUDING TAXES and DISCOUNTS.\t",
            "isHidden": true,
            "lineageTag": "4c623cf2-ad6d-45ca-a2db-5eac5407fc8a",
            "sourceColumn": "TotalAmt",
            "summarizeBy": "sum"
          },
          {
            "name": "TotalAmtInBaseCurrency",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "647c5ae1-9f6d-4dfa-b9b3-073df0ff252c",
            "sourceColumn": "TotalAmtInBaseCurrency",
            "summarizeBy": "sum"
          },
          {
            "name": "ExchangeRate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "397a2eef-4766-495f-bec0-ac4be1962bd3",
            "sourceColumn": "ExchangeRate",
            "summarizeBy": "sum"
          },
          {
            "name": "PaidAmt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "description": "The total amount PAID on this invoice (TOTAL AMOUNT DUE should be TotalAmt-PaidAmt)\t",
            "isHidden": true,
            "lineageTag": "6325d672-52e6-4edd-b7a5-13b77ac04860",
            "sourceColumn": "PaidAmt",
            "summarizeBy": "sum"
          },
          {
            "name": "Payment Method",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7d37ee52-2fc4-4fb3-945d-c2a8b0bc186c",
            "sourceColumn": "Payment Method",
            "summarizeBy": "none"
          },
          {
            "name": "PayMethodId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "7db588e0-a6cf-4232-aa59-51ba28c8bb25",
            "sourceColumn": "PayMethodId",
            "summarizeBy": "count"
          },
          {
            "name": "TotalAmtDue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isHidden": true,
            "lineageTag": "8d0966cd-b117-4b76-93c8-1e0c6a79b5c6",
            "sourceColumn": "TotalAmtDue",
            "summarizeBy": "sum"
          },
          {
            "name": "Posted Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "One of the following values: none, Unposted, Pending, Successful, Failed, InProcess, Invalid",
            "lineageTag": "f06f62d5-9cfe-4db6-945d-e114ef0594ca",
            "sourceColumn": "Posted Status",
            "summarizeBy": "none"
          },
          {
            "name": "PostedStatusId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "404590a8-9c76-454f-8568-8216ccc67e11",
            "sourceColumn": "PostedStatusId",
            "summarizeBy": "count"
          },
          {
            "name": "Note 1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Invoice note (first field) 500 characters long.",
            "lineageTag": "2cabfa44-2a2a-46b4-ac50-2c8748ec184d",
            "sourceColumn": "Note 1",
            "summarizeBy": "none"
          },
          {
            "name": "Note 2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Invoice note (second field) 500 characters long.",
            "lineageTag": "55e3972a-6d4d-40a3-a88a-3ad210c9a18b",
            "sourceColumn": "Note 2",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "f330db19-704e-48db-b807-bea69b80f3ff",
            "sourceColumn": "Status",
            "summarizeBy": "sum"
          },
          {
            "name": "StatusId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b3be7d0c-2047-4ea6-a818-d384d44d37ce",
            "sourceColumn": "StatusId",
            "summarizeBy": "count"
          },
          {
            "name": "Status Text",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "This value should be one of the following: Drafted, Approved, Posted, Sent, Paid",
            "lineageTag": "9b024b1d-0872-4dc3-b88a-437bd222dc9d",
            "sourceColumn": "Status Text",
            "summarizeBy": "none"
          },
          {
            "name": "Consolidated",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "37435cc8-7a09-4d1c-a90b-27176020783d",
            "sourceColumn": "Consolidated",
            "summarizeBy": "none"
          },
          {
            "name": "ConsoParentSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "fb4bb63f-d2c1-4154-9593-670f5f04e98a",
            "sourceColumn": "ConsoParentSID",
            "summarizeBy": "count"
          },
          {
            "name": "ARAcctSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "0f5853c2-dce3-4507-8df0-4c3f51de7f66",
            "sourceColumn": "ARAcctSid",
            "summarizeBy": "sum"
          },
          {
            "name": "CurrencySid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "3c30ce14-9776-43f3-8670-0c2d29e9c6bb",
            "sourceColumn": "CurrencySid",
            "summarizeBy": "sum"
          },
          {
            "name": "QBPostType",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "63c00d07-dbbe-4e58-8060-33c85aa9eebd",
            "sourceColumn": "QBPostType",
            "summarizeBy": "sum"
          },
          {
            "name": "TermsSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "593b1ade-c583-4f3c-88f9-eadc1cdab50f",
            "sourceColumn": "TermsSID",
            "summarizeBy": "count"
          },
          {
            "name": "Terms",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "the INVOICE TERMS (eg - net 30, 60, 90)",
            "lineageTag": "73fabcc4-f46c-47a3-b26b-3955369d6521",
            "sourceColumn": "Terms",
            "summarizeBy": "none"
          },
          {
            "name": "Invoice Due Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "Due date",
            "formatString": "Long Date",
            "isHidden": true,
            "lineageTag": "da5369e5-45c6-4c39-9ee1-e53862a1af89",
            "sourceColumn": "Invoice Due Date",
            "summarizeBy": "none"
          },
          {
            "name": "ProjectSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b7db99ff-ddaa-49b5-85f2-ee83c421686a",
            "sourceColumn": "ProjectSid",
            "summarizeBy": "none"
          },
          {
            "name": "BillingContactId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "38717088-5133-4577-bb0d-6c2a6e2ccc92",
            "sourceColumn": "BillingContactId",
            "summarizeBy": "count"
          },
          {
            "name": "Calculator",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "The id for the invoice calculator type used to generate this invoice (this is the same as the invoiceType parameter used to create the invoice).",
            "formatString": "0",
            "lineageTag": "cb3d4601-37d5-41ea-9ab8-342aedca93a2",
            "sourceColumn": "Calculator",
            "summarizeBy": "sum"
          },
          {
            "name": "PONumber",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "599844ec-2eeb-44e3-92f4-84e70fc125ee",
            "sourceColumn": "PONumber",
            "summarizeBy": "none"
          },
          {
            "name": "RptSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "9b6071c7-9597-4364-a69a-43120b90b51e",
            "sourceColumn": "RptSid",
            "summarizeBy": "sum"
          },
          {
            "name": "PaymentInvoiceSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "eac22779-4f3a-4319-8f6d-c44385fcb629",
            "sourceColumn": "PaymentInvoiceSid",
            "summarizeBy": "sum"
          },
          {
            "name": "LastPaymentAmt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e1cfc6a1-3b74-4c3e-954a-b8fbbacff8cf",
            "sourceColumn": "LastPaymentAmt",
            "summarizeBy": "sum"
          },
          {
            "name": "Last Payment Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9b219bd6-eaff-4dcb-99da-185fee43015f",
            "sourceColumn": "Last Payment Type",
            "summarizeBy": "none"
          },
          {
            "name": "Last Payment Reference",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9ec4c77b-f377-4945-a2aa-fe9bbd7e0f43",
            "sourceColumn": "Last Payment Reference",
            "summarizeBy": "none"
          },
          {
            "name": "LastPaymentSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "8db39ee4-e9d3-49a8-98ac-47e9620e52a3",
            "sourceColumn": "LastPaymentSid",
            "summarizeBy": "sum"
          },
          {
            "name": "ScheduledPaymentSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "46ee440f-7798-412e-9b8a-2d4d2e497d99",
            "sourceColumn": "ScheduledPaymentSid",
            "summarizeBy": "sum"
          },
          {
            "name": "ScheduledPaymentInvoiceSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b4c3b1b0-8083-40a7-9518-094c0f4f5afa",
            "sourceColumn": "ScheduledPaymentInvoiceSid",
            "summarizeBy": "sum"
          },
          {
            "name": "Scheduled Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "0b7b1ff0-37bc-47eb-8ae9-b8e40d64be92",
            "sourceColumn": "Scheduled Date",
            "summarizeBy": "none"
          },
          {
            "name": "ScheduledAmt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "56209458-c8aa-4392-94c4-b584c2c0a337",
            "sourceColumn": "ScheduledAmt",
            "summarizeBy": "sum"
          },
          {
            "name": "Scheduled Payment Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4c584ce4-4656-4b58-8873-2c9474e97165",
            "sourceColumn": "Scheduled Payment Status",
            "summarizeBy": "none"
          },
          {
            "name": "Scheduled By",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "99a01591-f236-414b-965e-63829ed1a940",
            "sourceColumn": "Scheduled By",
            "summarizeBy": "none"
          },
          {
            "name": "Is Paid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "f06e97df-f3fb-4b3e-af5a-9ca8e8998d30",
            "sourceColumn": "Is Paid",
            "summarizeBy": "none"
          },
          {
            "name": "AR Period",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "a764e921-399c-4c97-9f14-83848c4976e8",
            "sourceColumn": "AR Period",
            "summarizeBy": "none"
          },
          {
            "name": "AR Aging Category",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "description": "Aging bucket for open invoices ('Current', '1-30 Days', etc",
            "lineageTag": "b2c9ad00-7402-48a6-b222-b0cde8c84653",
            "sortByColumn": "ARPeriodSort",
            "sourceColumn": "AR Aging Category",
            "summarizeBy": "none"
          },
          {
            "name": "ARPeriodSort",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "49c27023-59e2-4576-a7d4-b8947a2f89f4",
            "sourceColumn": "ARPeriodSort",
            "summarizeBy": "sum"
          },
          {
            "name": "Days Outstanding",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Number of days since invoice issuance ( Today - 'Invoice Date Sent')",
            "formatString": "0",
            "lineageTag": "bbaf6fee-f5fe-4216-bebd-f23c2ba089e3",
            "sourceColumn": "Days Outstanding",
            "summarizeBy": "sum"
          },
          {
            "name": "Review Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0ce50a01-7cb2-461f-8404-5e55b591fe7b",
            "sourceColumn": "Review Status",
            "summarizeBy": "none"
          },
          {
            "name": "Review Status Text",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ab2619f6-e836-4505-9981-f0cde772ac6b",
            "sourceColumn": "Review Status Text",
            "summarizeBy": "none"
          },
          {
            "name": "Has Attachments",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "676f1369-69d1-4fb0-ace7-db501dd94d60",
            "sourceColumn": "Has Attachments",
            "summarizeBy": "none"
          },
          {
            "name": "Email Sent",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "88c11535-385b-4415-bd46-cc4224df7eb8",
            "sourceColumn": "Email Sent",
            "summarizeBy": "none"
          },
          {
            "name": "Modified Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "1e7b0ba9-9b2e-4b24-a619-cc376707ae4d",
            "sourceColumn": "Modified Date",
            "summarizeBy": "none"
          },
          {
            "name": "Invoice Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "If the invoice was created for a specific PERIOD, then this field contains that period's start date.",
            "formatString": "Long Date",
            "isHidden": true,
            "lineageTag": "34981bce-b226-4b3c-8a5c-7af524e0bc45",
            "sourceColumn": "Invoice Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "Invoice End Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "description": "If the invoice was created for a specific PERIOD, then this field contains that period's end date.",
            "formatString": "Long Date",
            "isHidden": true,
            "lineageTag": "227764f3-f0fc-4124-932a-ae46043bd188",
            "sourceColumn": "Invoice End Date",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "4365eeeb-43db-49cd-b002-80f9a2b39424",
        "measures": [
          {
            "name": "Invoice Amount",
            "description": "The invoice \"amount due\". This is the invoice amount INCLUDING TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice Date",
            "expression": "SUM( Invoices[InvoiceAmt] )",
            "formatString": "$ #,##0.00",
            "lineageTag": "b9139df0-edea-4b24-9ae4-6d7bad866931"
          },
          {
            "name": "Sales Tax Amount",
            "description": "Sales taxes billed on the invoice",
            "displayFolder": "_Invoices by Invoice Date",
            "expression": "SUM( Invoices[SalesTaxAmt] )",
            "formatString": "$ #,##0.00",
            "lineageTag": "11d06dc2-291b-4a05-a129-a3969c573679"
          },
          {
            "name": "Invoice Subtotal Amount",
            "description": "TOTAL of line item amounts. This is the invoice amount NET OF TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice Date",
            "expression": "SUM( Invoices[Subtotal] )",
            "formatString": "$ #,##0.00",
            "lineageTag": "142824f9-310e-4483-bd53-edf0b5bef14b"
          },
          {
            "name": "Invoice Due Amount",
            "description": "Outstanding invoice amount currently due",
            "displayFolder": "_Invoices by Invoice Date",
            "expression": "SUM( Invoices[TotalAmtDue] )",
            "formatString": "$ #,##0.00",
            "lineageTag": "a2281645-3e60-4b2d-b731-c85654bb2d9c"
          },
          {
            "name": "Invoice Paid Amount",
            "description": "The total amount PAID on this invoice (TOTAL AMOUNT DUE should be TotalAmt-PaidAmt)",
            "displayFolder": "_Invoices by Invoice Date",
            "expression": "SUM( Invoices[PaidAmt] )",
            "formatString": "$ #,##0.00",
            "lineageTag": "e2d1a22c-3aaf-48b1-bcdc-6fb5bcbe71eb"
          },
          {
            "name": "Sales Tax Amount by Sent Date",
            "description": "Sales taxes billed on the invoice",
            "displayFolder": "_Invoices by Invoice Sent Date",
            "expression": [
              "CALCULATE(",
              "    [Sales Tax Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Date Sent], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "3c646da4-2932-44d8-8993-068f43d1945d"
          },
          {
            "name": "Invoice Subtotal Amount by Sent Date",
            "description": "TOTAL of line item amounts. This is the invoice amount NET OF TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice Sent Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Subtotal Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Date Sent], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "14534149-65a5-419b-862e-fb7e1901cbf3"
          },
          {
            "name": "Invoice Paid Amount by Sent Date",
            "description": "The total amount PAID on this invoice (TOTAL AMOUNT DUE should be TotalAmt-PaidAmt)",
            "displayFolder": "_Invoices by Invoice Sent Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Paid Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Date Sent], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "8a2f7e9c-50e1-495b-9399-59bba8b54e98"
          },
          {
            "name": "Invoice Due Amount by Sent Date",
            "description": "Outstanding invoice amount currently due",
            "displayFolder": "_Invoices by Invoice Sent Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Due Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Date Sent], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "81de5822-9c95-429a-b602-17e9227d795f"
          },
          {
            "name": "Invoice Amount by Sent Date",
            "description": "The invoice \"amount due\". This is the invoice amount INCLUDING TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice Sent Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Date Sent], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "6f42851d-c236-4929-b6e0-ce489917581e"
          },
          {
            "name": "Sales Tax Amount by Due Date",
            "description": "Sales taxes billed on the invoice",
            "displayFolder": "_Invoices by Invoice Due Date",
            "expression": [
              "CALCULATE(",
              "    [Sales Tax Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Due Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "3844d316-201f-4128-a6e6-cb22480e5cf3"
          },
          {
            "name": "Invoice Subtotal Amount by Due Date",
            "description": "TOTAL of line item amounts. This is the invoice amount NET OF TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice Due Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Subtotal Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Due Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "3ad4780b-b6ce-4ee3-8b5b-e35b3f6a669b"
          },
          {
            "name": "Invoice Paid Amount by Due Date",
            "description": "The total amount PAID on this invoice (TOTAL AMOUNT DUE should be TotalAmt-PaidAmt)",
            "displayFolder": "_Invoices by Invoice Due Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Paid Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Due Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "fabcbd8c-414c-4606-afe0-79839d8d21b7"
          },
          {
            "name": "Invoice Due Amount by Due Date",
            "description": "Outstanding invoice amount currently due",
            "displayFolder": "_Invoices by Invoice Due Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Due Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Due Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "26db9e92-e23e-40b8-a7cb-7bacc3cf9d41"
          },
          {
            "name": "Invoice Amount by Due Date",
            "description": "The invoice \"amount due\". This is the invoice amount INCLUDING TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice Due Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Due Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "8d2302c4-e740-4d1f-ac49-f2a0d2a85d65"
          },
          {
            "name": "Sales Tax Amount by Start Date",
            "description": "Sales taxes billed on the invoice",
            "displayFolder": "_Invoices by Invoice Start Date",
            "expression": [
              "CALCULATE(",
              "    [Sales Tax Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Start Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "33ed4ddb-4c91-445b-af96-93ad0e7fc0ee"
          },
          {
            "name": "Invoice Subtotal Amount by Start Date",
            "description": "TOTAL of line item amounts. This is the invoice amount NET OF TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice Start Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Subtotal Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Start Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "cf7155d7-fe57-44d8-916b-e67892a042e8"
          },
          {
            "name": "Invoice Paid Amount by Start Date",
            "description": "The total amount PAID on this invoice (TOTAL AMOUNT DUE should be TotalAmt-PaidAmt)",
            "displayFolder": "_Invoices by Invoice Start Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Paid Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Start Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "24573895-ea82-4669-9841-87e7227a7040"
          },
          {
            "name": "Invoice Due Amount by Start Date",
            "description": "Outstanding invoice amount currently due",
            "displayFolder": "_Invoices by Invoice Start Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Due Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Start Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "2b1982b2-525c-42d9-98fb-5d1af2f8d489"
          },
          {
            "name": "Invoice Amount by Start Date",
            "description": "The invoice \"amount due\". This is the invoice amount INCLUDING TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice Start Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Amount],",
              "    USERELATIONSHIP( Invoices[Invoice Start Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "2fd9be9e-721b-4ff8-a9e4-035992571da6"
          },
          {
            "name": "Sales Tax Amount by End Date",
            "description": "Sales taxes billed on the invoice",
            "displayFolder": "_Invoices by Invoice End Date",
            "expression": [
              "CALCULATE(",
              "    [Sales Tax Amount],",
              "    USERELATIONSHIP( Invoices[Invoice End Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "c713b459-f22d-4c13-a686-c8e06f04eaf7"
          },
          {
            "name": "Invoice Subtotal Amount by End Date",
            "description": "TOTAL of line item amounts. This is the invoice amount NET OF TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice End Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Subtotal Amount],",
              "    USERELATIONSHIP( Invoices[Invoice End Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "5f858224-f914-4de6-ad56-05d1db9042df"
          },
          {
            "name": "Invoice Paid Amount by End Date",
            "description": "The total amount PAID on this invoice (TOTAL AMOUNT DUE should be TotalAmt-PaidAmt)",
            "displayFolder": "_Invoices by Invoice End Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Paid Amount],",
              "    USERELATIONSHIP( Invoices[Invoice End Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "4898cf55-4348-483d-80e6-b4594e2a4565"
          },
          {
            "name": "Invoice Due Amount by End Date",
            "description": "Outstanding invoice amount currently due",
            "displayFolder": "_Invoices by Invoice End Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Due Amount],",
              "    USERELATIONSHIP( Invoices[Invoice End Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "9d26f3a2-2b2c-49dc-8209-3c5ce2b8c830"
          },
          {
            "name": "Invoice Amount by End Date",
            "description": "The invoice \"amount due\". This is the invoice amount INCLUDING TAXES and DISCOUNTS.",
            "displayFolder": "_Invoices by Invoice End Date",
            "expression": [
              "CALCULATE(",
              "    [Invoice Amount],",
              "    USERELATIONSHIP( Invoices[Invoice End Date], Dates[Date] )",
              ")"
            ],
            "formatString": "$ #,##0.00",
            "lineageTag": "df3dd278-cff4-44ee-ad07-fff327ece473"
          },
          {
            "name": "Billing Realization",
            "description": "Billable Fees and Expenses / Invoiced Amount",
            "expression": "DIVIDE(  [Invoice Amount], [Billable Fees and Billable Expenses] )",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "4eb468c7-ddb4-47d4-be97-229baf5c40bc"
          },
          {
            "name": "Work in Progress (WIP)",
            "description": "Billable Fees and Billable Expenses - Invoiced Amount. A negative number indicates advance billings for which an invoice has been submitted, but billable fees not yet been incurred up to that amount",
            "expression": "CALCULATE( [Billable Fees and Billable Expenses] - Invoices[Invoice Amount] , CROSSFILTER( Projects[ProjectSID] , 'Time Entries'[ProjectSID], Both ), CROSSFILTER( Invoices[ProjectSid] , Projects[ProjectSID] , Both ))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "541f2fdb-be35-4c35-9a66-4f028356de75"
          }
        ],
        "partitions": [
          {
            "name": "Invoices",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Projects = List.Distinct(Projects[ClientSID]),",
                "    Source = List.Transform( Projects, each fxGetBigTimeData(\"/invoice/GetInvoicesByClientId?clientid=\" & Text.From(_) & \"&startDt=\" & StartDate & \"&endDt=2030-12-31\" ) ),",
                "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Expand Lists\" = Table.ExpandListColumn(#\"Converted to Table\", \"Column1\"),",
                "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expand Lists\", \"Column1\", {\"Sid\", \"AuditStatus\", \"ClientSid\", \"ClientNm\", \"CostCenterA\", \"CostCenterB\", \"CostCenterC\", \"InvoiceNbr\", \"InvoiceDt\", \"InvoicePeriod\", \"InvoiceDtSent\", \"InvoiceAmt\", \"Subtotal\", \"SalesTaxAmt\", \"TotalAmt\", \"TotalAmtInBaseCurrency\", \"ExchangeRate\", \"PaidAmt\", \"PayMethod\", \"PayMethodId\", \"TotalAmtDue\", \"PostedStatus\", \"PostedStatusId\", \"Note1\", \"Note2\", \"Status\", \"StatusId\", \"StatusTxt\", \"Consolidated\", \"ConsoParentSID\", \"ARAcctSid\", \"CurrencySid\", \"QBPostType\", \"TermsSID\", \"TermsNm\", \"InvoiceDtDue\", \"ProjectSid\", \"DName\", \"BillingContactId\", \"Calculator\", \"PONumber\", \"RptSid\", \"PaymentInvoiceSid\", \"LastPaymentAmt\", \"LastPaymentType\", \"LastPaymentReference\", \"LastPaymentSid\", \"ScheduledPaymentSid\", \"ScheduledPaymentInvoiceSid\", \"ScheduledDate\", \"ScheduledAmt\", \"ScheduledPaymentStatus\", \"ScheduledBy\", \"IsPaid\", \"ARPeriod\", \"ARPeriodNm\", \"ARPeriodSort\", \"BillingAddress\", \"DaysOutstanding\", \"ReviewStatus\", \"ReviewStatusTxt\", \"InvHasAttch\", \"EmailSent\", \"DtModified\", \"InvoiceDtSt\", \"InvoiceDtEnd\"}, {\"Sid\", \"AuditStatus\", \"ClientSid\", \"ClientNm\", \"CostCenterA\", \"CostCenterB\", \"CostCenterC\", \"InvoiceNbr\", \"InvoiceDt\", \"InvoicePeriod\", \"InvoiceDtSent\", \"InvoiceAmt\", \"Subtotal\", \"SalesTaxAmt\", \"TotalAmt\", \"TotalAmtInBaseCurrency\", \"ExchangeRate\", \"PaidAmt\", \"PayMethod\", \"PayMethodId\", \"TotalAmtDue\", \"PostedStatus\", \"PostedStatusId\", \"Note1\", \"Note2\", \"Status\", \"StatusId\", \"StatusTxt\", \"Consolidated\", \"ConsoParentSID\", \"ARAcctSid\", \"CurrencySid\", \"QBPostType\", \"TermsSID\", \"TermsNm\", \"InvoiceDtDue\", \"ProjectSid\", \"DName\", \"BillingContactId\", \"Calculator\", \"PONumber\", \"RptSid\", \"PaymentInvoiceSid\", \"LastPaymentAmt\", \"LastPaymentType\", \"LastPaymentReference\", \"LastPaymentSid\", \"ScheduledPaymentSid\", \"ScheduledPaymentInvoiceSid\", \"ScheduledDate\", \"ScheduledAmt\", \"ScheduledPaymentStatus\", \"ScheduledBy\", \"IsPaid\", \"ARPeriod\", \"ARPeriodNm\", \"ARPeriodSort\", \"BillingAddress\", \"DaysOutstanding\", \"ReviewStatus\", \"ReviewStatusTxt\", \"InvHasAttch\", \"EmailSent\", \"DtModified\", \"InvoiceDtSt\", \"InvoiceDtEnd\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded Column1\",{{\"AuditStatus\", \"Audit Status\"}, {\"InvoiceNbr\", \"Invoice Number\"}, {\"InvoiceDt\", \"Invoice Date\"}, {\"InvoicePeriod\", \"Invoice Period\"}, {\"InvoiceDtSent\", \"Invoice Date Sent\"}, {\"PayMethod\", \"Payment Method\"}, {\"PostedStatus\", \"Posted Status\"}, {\"Note1\", \"Note 1\"}, {\"Note2\", \"Note 2\"}, {\"StatusTxt\", \"Status Text\"}, {\"TermsNm\", \"Terms\"}, {\"InvoiceDtDue\", \"Invoice Due Date\"}, {\"LastPaymentType\", \"Last Payment Type\"}, {\"LastPaymentReference\", \"Last Payment Reference\"}, {\"ScheduledDate\", \"Scheduled Date\"}, {\"ScheduledPaymentStatus\", \"Scheduled Payment Status\"}, {\"ScheduledBy\", \"Scheduled By\"}, {\"IsPaid\", \"Is Paid\"}, {\"ARPeriod\", \"AR Period\"}, {\"ARPeriodNm\", \"AR Aging Category\"}, {\"DaysOutstanding\", \"Days Outstanding\"}, {\"ReviewStatus\", \"Review Status\"}, {\"ReviewStatusTxt\", \"Review Status Text\"}, {\"InvHasAttch\", \"Has Attachments\"}, {\"EmailSent\", \"Email Sent\"}, {\"DtModified\", \"Modified Date\"}, {\"InvoiceDtSt\", \"Invoice Start Date\"}, {\"InvoiceDtEnd\", \"Invoice End Date\"}}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Renamed Columns\",{\"Sid\", \"Audit Status\", \"Invoice Number\", \"Invoice Date\", \"Invoice Period\", \"Invoice Date Sent\", \"InvoiceAmt\", \"Subtotal\", \"SalesTaxAmt\", \"TotalAmt\", \"TotalAmtInBaseCurrency\", \"ExchangeRate\", \"PaidAmt\", \"Payment Method\", \"PayMethodId\", \"TotalAmtDue\", \"Posted Status\", \"PostedStatusId\", \"Note 1\", \"Note 2\", \"Status\", \"StatusId\", \"Status Text\", \"Consolidated\", \"ConsoParentSID\", \"ARAcctSid\", \"CurrencySid\", \"QBPostType\", \"TermsSID\", \"Terms\", \"Invoice Due Date\", \"ProjectSid\", \"BillingContactId\", \"Calculator\", \"PONumber\", \"RptSid\", \"PaymentInvoiceSid\", \"LastPaymentAmt\", \"Last Payment Type\", \"Last Payment Reference\", \"LastPaymentSid\", \"ScheduledPaymentSid\", \"ScheduledPaymentInvoiceSid\", \"Scheduled Date\", \"ScheduledAmt\", \"Scheduled Payment Status\", \"Scheduled By\", \"Is Paid\", \"AR Period\", \"AR Aging Category\", \"ARPeriodSort\", \"Days Outstanding\", \"Review Status\", \"Review Status Text\", \"Has Attachments\", \"Email Sent\", \"Modified Date\", \"Invoice Start Date\", \"Invoice End Date\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"Sid\", Int64.Type}, {\"Audit Status\", Int64.Type}, {\"Invoice Number\", type text}, {\"Invoice Date\", type date}, {\"Invoice Period\", Int64.Type}, {\"Invoice Date Sent\", type date}, {\"InvoiceAmt\", type number}, {\"Subtotal\", type number}, {\"SalesTaxAmt\", type number}, {\"TotalAmt\", type number}, {\"TotalAmtInBaseCurrency\", type number}, {\"ExchangeRate\", type number}, {\"PaidAmt\", type number}, {\"Payment Method\", type text}, {\"PayMethodId\", Int64.Type}, {\"TotalAmtDue\", type number}, {\"Posted Status\", type text}, {\"PostedStatusId\", Int64.Type}, {\"Note 1\", type text}, {\"Note 2\", type text}, {\"Status\", Int64.Type}, {\"StatusId\", Int64.Type}, {\"Status Text\", type text}, {\"Consolidated\", type logical}, {\"ConsoParentSID\", Int64.Type}, {\"ARAcctSid\", Int64.Type}, {\"CurrencySid\", Int64.Type}, {\"QBPostType\", Int64.Type}, {\"TermsSID\", Int64.Type}, {\"Terms\", type text}, {\"Invoice Due Date\", type date}, {\"ProjectSid\", Int64.Type}, {\"BillingContactId\", Int64.Type}, {\"Calculator\", Int64.Type}, {\"PONumber\", type any}, {\"RptSid\", Int64.Type}, {\"PaymentInvoiceSid\", Int64.Type}, {\"LastPaymentAmt\", type number}, {\"Last Payment Type\", type any}, {\"Last Payment Reference\", type any}, {\"LastPaymentSid\", Int64.Type}, {\"ScheduledPaymentSid\", Int64.Type}, {\"ScheduledPaymentInvoiceSid\", Int64.Type}, {\"ScheduledAmt\", type number}, {\"Scheduled Payment Status\", type text}, {\"Scheduled By\", type text}, {\"Is Paid\", type logical}, {\"AR Period\", type text}, {\"AR Aging Category\", type text}, {\"ARPeriodSort\", Int64.Type}, {\"Days Outstanding\", Int64.Type}, {\"Review Status\", type text}, {\"Review Status Text\", type text}, {\"Has Attachments\", type logical}, {\"Email Sent\", type logical}, {\"Modified Date\", type date}, {\"Invoice Start Date\", type date}, {\"Invoice End Date\", type date}}),",
                "    Custom1 = Table.SelectRows(#\"Changed Type\", each [Sid] <> null),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Invoices\") else #\"Custom1\"",
                "in",
                "    #\"Sample Data\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Dates",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "1bd7c46a67e04cf3a6d790fb6f6bdfa2"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "TabularEditor_MarkAsDateKey",
                "value": "1"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "isDataTypeInferred": true,
            "isKey": true,
            "isNameInferred": true,
            "lineageTag": "50d1a500-2607-4839-8ed7-504a2cec736e",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "202ab6f2-6e9f-4e5d-b5d1-b0cee8697f20",
            "sourceColumn": "[Year]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Start of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "fa6af64b-6d40-4e19-a280-7afa78533316",
            "sourceColumn": "[Start of Year]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "End of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "d3b72454-26dc-4141-9fa1-75a2c0121f86",
            "sourceColumn": "[End of Year]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Start of Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "ceea303a-456f-4f5d-8247-653d3d6009dd",
            "sourceColumn": "[Start of Month]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "End of Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "5a144d96-8569-4b75-9e6a-2c600e9b5563",
            "sourceColumn": "[End of Month]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Days in Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "85a1d6dd-5756-4ad6-8380-162b2b725fd7",
            "sourceColumn": "[Days in Month]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "4450b2fd-25d4-4002-8ab4-6f6b89941169",
            "sourceColumn": "[Day Name]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day Name Short",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e80c4f09-2d5a-4a92-9227-03904dc72309",
            "sortByColumn": "Day of Week",
            "sourceColumn": "[Day Name Short]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day of Week",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "2ebb932a-8043-4c10-b141-32e28ddc8872",
            "sourceColumn": "[Day of Week]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "828e20e8-956d-4e67-b918-74f44c1d2220",
            "sourceColumn": "[Day of Year]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "764ad786-cfe4-4052-8947-86741f3e1260",
            "sortByColumn": "Month Number",
            "sourceColumn": "[Month Name]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month Name Short",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "da89203f-2eaa-4160-9ebf-43b297fa5cf2",
            "sortByColumn": "Month Number",
            "sourceColumn": "[Month Name Short]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "792a0278-6d79-457a-8d3c-0525eb858481",
            "sourceColumn": "[Quarter]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Quarter Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c4d91004-8680-4637-a8d4-9b7cacb816c0",
            "sourceColumn": "[Quarter Name]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year Quarter Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "68a7de45-b26a-4e42-aeee-fc6aa65e1fab",
            "sourceColumn": "[Year Quarter Number]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year Quarter Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "16de6301-5f05-4969-86b4-63de83df9671",
            "sourceColumn": "[Year Quarter Name]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Start of Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "baa218bf-9950-4da7-a200-ed0fa6538aa6",
            "sourceColumn": "[Start of Quarter]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "End of Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e44b03af-dbf8-42d6-a7bb-856ba78ab814",
            "sourceColumn": "[End of Quarter]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Week of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "f59caead-5464-429d-ac0b-6bbc623b214e",
            "sourceColumn": "[Week of Year]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Start of Week",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "053d4bd7-c0a2-4f70-85a0-39f92c898210",
            "sourceColumn": "[Start of Week]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "End of Week",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "21f25cc5-4f40-48e2-8edd-f11dabc24c09",
            "sourceColumn": "[End of Week]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day Offset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "34bacd16-2a2c-43c0-9930-42f9ca02135c",
            "sourceColumn": "[Day Offset]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month Offset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "00fd2e74-0989-4346-ad21-44210119e1c2",
            "sourceColumn": "[Month Offset]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Quarter Offset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "8416b8ac-b6fb-4dfb-ad2d-61544920f3fb",
            "sourceColumn": "[Quarter Offset]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Year Offset",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "7bf75198-f63c-4df2-b233-ac6f4e77cb2c",
            "sourceColumn": "[Year Offset]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e0e3d718-8e4d-4e44-9978-fd5a713aa1fe",
            "sourceColumn": "[Month Number]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "YYYYMM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "91bc46a7-722a-448d-b279-cf6159c17dbf",
            "sourceColumn": "[YYYYMM]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "YYYY-MM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "fdc00c06-d2f2-4fba-a1fc-d5a0d0b9f81c",
            "sourceColumn": "[YYYY-MM]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Month Name Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "055d0775-d40f-417a-befd-f322416e6dd1",
            "sortByColumn": "YYYYMM",
            "sourceColumn": "[Month Name Year]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Day of Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "c37e1d17-d679-4648-81d1-927ef4a3c3ed",
            "sourceColumn": "[Day of Month]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          }
        ],
        "dataCategory": "Time",
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "bf834cb0-0c48-4cd7-b0e5-6930bd7a73ee",
                "ordinal": 0
              },
              {
                "name": "Month Name Short",
                "column": "Month Name Short",
                "lineageTag": "3c93522c-5191-48bb-bbc6-2dab7731282d",
                "ordinal": 1
              },
              {
                "name": "Day of Month",
                "column": "Day of Month",
                "lineageTag": "fea9cc6f-8302-48a0-a493-a6b2908aa4d2",
                "ordinal": 2
              }
            ],
            "lineageTag": "445ab7f1-fb69-4f68-8773-f11919c6e203"
          }
        ],
        "lineageTag": "c89228d6-151e-4a73-b7db-26779c0d74df",
        "partitions": [
          {
            "name": "Dates",
            "mode": "import",
            "source": {
              "expression": [
                "",
                "VAR _today =",
                "    TODAY ()",
                "RETURN",
                "    ADDCOLUMNS (",
                "        CALENDARAUTO (),",
                "        \"Year\", YEAR ( [Date] ),",
                "        \"Start of Year\", DATE ( YEAR ( [Date] ), 1, 1 ),",
                "        \"End of Year\", DATE ( YEAR ( [Date] ), 12, 31 ),",
                "        \"Month Number\", MONTH ( [Date] ),",
                "        \"Start of Month\", DATE ( YEAR ( [Date] ), MONTH ( [Date] ), 1 ),",
                "        \"End of Month\", EOMONTH ( [Date], 0 ),",
                "        \"Days in Month\",",
                "            DATEDIFF (",
                "                DATE ( YEAR ( [Date] ), MONTH ( [Date] ), 1 ),",
                "                EOMONTH ( [Date], 0 ),",
                "                DAY",
                "            ) + 1,",
                "        \"YYYYMM\", INT ( FORMAT ( [Date], \"YYYYMM\" ) ),",
                "        \"YYYY-MM\", FORMAT ( [Date], \"YYYY-MMM\" ),",
                "        \"Day of Month\", DAY ( [Date] ),",
                "        \"Day Name\", FORMAT ( [Date], \"DDDD\" ),",
                "        \"Day Name Short\", FORMAT ( [Date], \"DDD\" ),",
                "        \"Day of Week\", WEEKDAY ( [Date] ),",
                "        \"Day of Year\", DATEDIFF ( DATE ( YEAR ( [Date] ), 1, 1 ), [Date], DAY ) + 1,",
                "        \"Month Name\", FORMAT ( [Date], \"MMMM\" ),",
                "        \"Month Name Short\", FORMAT ( [Date], \"MMM\" ),",
                "        \"Month Name Year\", FORMAT ( [Date], \"MMMM YYYY\" ),",
                "        \"Quarter\", QUARTER ( [Date] ),",
                "        \"Quarter Name\", \"Q\" & FORMAT ( [Date], \"Q\" ),",
                "        \"Year Quarter Number\", INT ( FORMAT ( [Date], \"YYYYQ\" ) ),",
                "        \"Year Quarter Name\",",
                "            FORMAT ( [Date], \"YYYY\" ) & \" Q\"",
                "                & FORMAT ( [Date], \"Q\" ),",
                "        \"Start of Quarter\",",
                "            DATE ( YEAR ( [Date] ), ( QUARTER ( [Date] ) * 3 ) - 2, 1 ),",
                "        \"End of Quarter\", EOMONTH ( DATE ( YEAR ( [Date] ), QUARTER ( [Date] ) * 3, 1 ), 0 ),",
                "        \"Week of Year\", WEEKNUM ( [Date] ),",
                "        \"Start of Week\",",
                "            [Date] - WEEKDAY ( [Date] ) + 1,",
                "        \"End of Week\",",
                "            [Date] + 7",
                "                - WEEKDAY ( [Date] ),",
                "        \"Day Offset\", DATEDIFF ( _today, [Date], DAY ),",
                "        \"Month Offset\", DATEDIFF ( _today, [Date], MONTH ),",
                "        \"Quarter Offset\", DATEDIFF ( _today, [Date], QUARTER ),",
                "        \"Year Offset\", DATEDIFF ( _today, [Date], YEAR )",
                "    )",
                "//here's a good starting point https://radacad.com/all-in-one-script-to-create-calendar-table-or-date-dimension-using-dax-in-power-bi"
              ],
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "Time Intelligence",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "CY",
              "description": "Current Year",
              "expression": "SELECTEDMEASURE()",
              "ordinal": 0
            },
            {
              "name": "PY",
              "description": "Prior Year",
              "expression": [
                "CALCULATE (",
                "     SELECTEDMEASURE (),",
                "     SAMEPERIODLASTYEAR ( 'Dates'[Date] )",
                ") "
              ],
              "ordinal": 1
            },
            {
              "name": "CY vs PY Variance",
              "description": "Current Year vs Prior Year Variance",
              "expression": [
                "VAR _CY =",
                "     SELECTEDMEASURE ()",
                "VAR _PY =",
                "     CALCULATE (",
                "          SELECTEDMEASURE (),",
                "          SAMEPERIODLASTYEAR ( 'Dates'[Date] )",
                ")",
                "VAR Result = _CY - _PY",
                "RETURN",
                "     Result  "
              ],
              "ordinal": 2
            },
            {
              "name": "CY vs PY Variance %",
              "description": "Current Year vs Prior Year %",
              "expression": [
                "VAR _CY =",
                "     SELECTEDMEASURE ()",
                "VAR _PY =",
                "     CALCULATE (",
                "          SELECTEDMEASURE (),",
                "          SAMEPERIODLASTYEAR ( 'Dates'[Date] )",
                "     )",
                "VAR Result =",
                "     DIVIDE (",
                "         _CY - _PY,",
                "         _PY",
                "     )",
                "RETURN",
                "     Result  "
              ],
              "ordinal": 3
            },
            {
              "name": "MTD",
              "description": "Month To Date",
              "expression": [
                "\tCALCULATE (",
                "     SELECTEDMEASURE (),",
                "     DATESMTD ( 'Dates'[Date] )",
                ")  "
              ],
              "ordinal": 7
            },
            {
              "name": "QTD",
              "expression": [
                "CALCULATE (",
                "     SELECTEDMEASURE (),",
                "     DATESQTD ( 'Dates'[Date] )",
                ")  "
              ],
              "ordinal": 8
            },
            {
              "name": "YTD",
              "description": "Year to Date",
              "expression": [
                "CALCULATE (",
                "     SELECTEDMEASURE (),",
                "     DATESYTD ( 'Dates'[Date] )",
                ")  "
              ],
              "ordinal": 9
            },
            {
              "name": "PM",
              "description": "Prior Month",
              "expression": [
                "CALCULATE (",
                "     SELECTEDMEASURE (),",
                "     PREVIOUSMONTH ( 'Dates'[Date] )",
                ") "
              ],
              "ordinal": 4
            },
            {
              "name": "PYTD",
              "description": "Prior Year to Date",
              "expression": [
                "CALCULATE (",
                "     SELECTEDMEASURE (),",
                "     PREVIOUSYEAR( DATESYTD( 'Dates'[Date] ) )",
                ")  "
              ],
              "ordinal": 10
            },
            {
              "name": "MoM Variance",
              "description": "Month Over Month Variance",
              "expression": [
                "VAR _CM = SELECTEDMEASURE()",
                "",
                "VAR _PM =",
                "    CALCULATE (",
                "     SELECTEDMEASURE (),",
                "     PREVIOUSMONTH ( 'Dates'[Date] )",
                ") ",
                "RETURN _CM - _PM"
              ],
              "ordinal": 5
            },
            {
              "name": "MoM Variance %",
              "description": "Month Over Month Variance",
              "expression": [
                "VAR _CM = SELECTEDMEASURE( )",
                "VAR _PM =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        PREVIOUSMONTH( Dates[Date] )",
                "    )",
                "RETURN",
                "    DIVIDE( _CM - _PM, _PM )"
              ],
              "ordinal": 6
            },
            {
              "name": "ITD",
              "description": "Inception To Date",
              "expression": [
                "VAR _MaxDate = MAX( Dates[Date] )",
                "RETURN",
                "    CALCULATE( SELECTEDMEASURE( ), Dates[Date] <= _MaxDate )"
              ],
              "ordinal": 11
            }
          ],
          "precedence": 2
        },
        "columns": [
          {
            "name": "Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f7b3f39f-0029-4311-a506-4335b0b6bf71",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "isHidden": true,
            "lineageTag": "3ee1e5c9-2a0c-43e3-8c05-45042138b5b7",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "5b59796a-0f4a-4478-8644-9473468cd46c",
        "partitions": [
          {
            "name": "Partition",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Rates",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "ProjectSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "98de125c-112e-4721-9662-6df16ab57e99",
            "sourceColumn": "ProjectSID",
            "summarizeBy": "none"
          },
          {
            "name": "RateSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "055d13d4-e137-4eb9-8231-5f9223a40455",
            "sourceColumn": "RateSid",
            "summarizeBy": "sum"
          },
          {
            "name": "TaskSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "eafdcdb3-b3b7-4f92-8f84-359b312ab833",
            "sourceColumn": "TaskSid",
            "summarizeBy": "none"
          },
          {
            "name": "CatSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "67fe8cb7-65d8-4c37-a8a7-3f382e2647a1",
            "sourceColumn": "CatSid",
            "summarizeBy": "sum"
          },
          {
            "name": "RateId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "61754826-cd4e-4f1a-b92d-8ac1c1deb08c",
            "sourceColumn": "RateId",
            "summarizeBy": "none"
          },
          {
            "name": "RateVal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "c914430a-c0cd-4556-b620-860f4baa998d",
            "sourceColumn": "RateVal",
            "summarizeBy": "sum"
          },
          {
            "name": "StaffSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "00430307-4369-4d15-b706-dadc9002a129",
            "sourceColumn": "StaffSid",
            "summarizeBy": "none"
          },
          {
            "name": "GroupSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "60356a80-4579-4a19-8f44-8956685f3d87",
            "sourceColumn": "GroupSid",
            "summarizeBy": "sum"
          },
          {
            "name": "BillingRate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "40707d3d-7511-4e88-a1f1-33588df734df",
            "sourceColumn": "BillingRate",
            "summarizeBy": "none"
          },
          {
            "name": "AssignToSid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "9e044f9c-f94b-41b5-9f2b-7c465a0793ca",
            "sourceColumn": "AssignToSid",
            "summarizeBy": "sum"
          }
        ],
        "isHidden": true,
        "lineageTag": "4adcf28a-1d30-4dcf-a43f-f0138142c770",
        "partitions": [
          {
            "name": "Rates",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.SelectColumns(Projects, \"ProjectSID\"),",
                "    #\"Added Custom\" = Table.AddColumn(Source, \"Rates\", each fxGetBigTimeData(\"/project/rates/\" & Text.From( [ProjectSID] ))),",
                "    #\"Expanded Rates\" = Table.ExpandListColumn(#\"Added Custom\", \"Rates\"),",
                "    #\"Expanded Rates1\" = Table.ExpandRecordColumn(#\"Expanded Rates\", \"Rates\", {\"RateSid\", \"ProjectNm\", \"TaskSid\", \"TaskNm\", \"CatSid\", \"CatNm\", \"RateId\", \"RateVal\", \"StaffSid\", \"StaffNm\", \"GroupSid\", \"BillingRate\", \"GroupNm\", \"Errors\", \"AssignToSid\", \"AssignToNm\"}, {\"RateSid\", \"ProjectNm\", \"TaskSid\", \"TaskNm\", \"CatSid\", \"CatNm\", \"RateId\", \"RateVal\", \"StaffSid\", \"StaffNm\", \"GroupSid\", \"BillingRate\", \"GroupNm\", \"Errors\", \"AssignToSid\", \"AssignToNm\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded Rates1\", each ([RateSid] <> null)),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"ProjectSID\", \"RateSid\", \"TaskSid\", \"CatSid\", \"RateId\", \"RateVal\", \"StaffSid\", \"GroupSid\", \"BillingRate\", \"AssignToSid\"}),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Rates\") else#\"Removed Other Columns\"",
                "in",
                "    #\"Sample Data\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Allocations",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Allocated Hourly Rate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "expression": [
              "VAR _TaskSID = [TaskSID] ",
              "VAR _StaffSID = [StaffSID]",
              "VAR _StandardRateCategory = RELATED( Projects[Project Billing Base] ) //staffA, staffB, etc",
              "VAR _staffA = RELATED( Staffers[Rate1] )",
              "VAR _staffB = RELATED( Staffers[Rate2] )",
              "VAR _staffC = RELATED( Staffers[Rate3] )",
              "VAR _staffD = RELATED( Staffers[Rate4] )",
              "VAR _staffE = RELATED( Staffers[Rate5] )",
              "VAR _SelectedStaffRate = SWITCH( TRUE(), _StandardRateCategory = \"staffA\", _staffA,",
              "_StandardRateCategory = \"staffB\", _staffB,",
              "_StandardRateCategory = \"staffC\", _staffC,",
              "_StandardRateCategory = \"staffD\", _staffD,",
              "_StandardRateCategory = \"staffE\", _staffE,0)",
              "VAR CustomRate = ",
              "value(CALCULATE( VALUES( Rates[RateVal] ), Tasks[TaskSID] = _TaskSID, Staffers[StaffSID] = _StaffSID))",
              "VAR CheckCustomRate = IF( or( ISBLANK( CustomRate ), CustomRate = 0), _SelectedStaffRate, CustomRate )",
              "RETURN CheckCustomRate"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isDataTypeInferred": true,
            "lineageTag": "cb4c8665-f211-4059-9879-086eaa0e921f",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "AllocatedHours",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "543b330f-3577-436b-97d1-aaf6d07968b7",
            "sourceColumn": "AllocatedHours",
            "summarizeBy": "sum"
          },
          {
            "name": "Period",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "0dcf6ee4-10e5-4cd1-a4e1-461d6c15bd2c",
            "sourceColumn": "Period",
            "summarizeBy": "none"
          },
          {
            "name": "TaskSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c472356f-25bb-4999-9acb-a38bb95d1378",
            "sourceColumn": "TaskSID",
            "summarizeBy": "none"
          },
          {
            "name": "StaffSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "08c4c23c-0dda-41f5-8a7b-430b14f504bf",
            "sourceColumn": "StaffSID",
            "summarizeBy": "none"
          },
          {
            "name": "ProjectSID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8748f843-820a-4a55-b280-b4116d9ca234",
            "sourceColumn": "ProjectSID",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "ce7872b9-f3f3-468d-8660-cf188e6ec66b",
        "measures": [
          {
            "name": "Allocated Fees",
            "expression": "SUMX( Allocations, Allocations[Allocated Hourly Rate] * Allocations[AllocatedHours] )",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "490810ba-8056-4121-947d-ffe88042b9bf"
          },
          {
            "name": "Allocated Hours",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "description": "The number of hours allocated for the staff in the specified period.",
            "expression": "SUM( Allocations[AllocatedHours] )",
            "formatString": "#,0.00",
            "lineageTag": "4f65c7b4-ce6d-4f00-8bfc-c4287f0f758c"
          },
          {
            "name": "Allocated Utilization",
            "expression": "DIVIDE([Allocated Billable Hours], [Raw Capacity])",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%",
            "lineageTag": "e8ec7f2d-c8b3-49e8-82f5-8ff63baa6c43"
          },
          {
            "name": "Allocated Billable Hours",
            "expression": [
              "",
              "VAR _WithTaskIDs = CALCULATE( Allocations[Allocated Hours] , KEEPFILTERS(Tasks[Task Non Billable] = FALSE() ) , KEEPFILTERS(Tasks[TaskSID] <>0 ) ) ",
              "VAR _NoTaskIDs = CALCULATE( Allocations[Allocated Hours] , KEEPFILTERS( Tasks[TaskSID] = 0 ), KEEPFILTERS(Projects[Project No Charge] = FALSE() ) )",
              "RETURN _WithTaskIDs + _NoTaskIDs"
            ],
            "formatString": "#,0.00",
            "lineageTag": "19968a82-ce4d-49f7-acc0-5b54aa134e81"
          },
          {
            "name": "Allocated Hours Variance",
            "expression": "[Hours Entered] - Allocations[Allocated Hours]",
            "formatString": "#,0.00",
            "lineageTag": "ea1b251e-4bae-4f3f-8c54-3cef5fd1688e"
          },
          {
            "name": "Allocated Nonbillable Hours",
            "expression": [
              "",
              "VAR _calc = [Allocated Hours] - [Allocated Billable Hours]",
              "RETURN IF( _calc = 0 , BLANK() , _calc )"
            ],
            "formatString": "#,0.00",
            "lineageTag": "4fae4fcd-ef1c-4646-b699-8532248d382a"
          }
        ],
        "partitions": [
          {
            "name": "Allocations",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    PostData = Text.ToBinary(\"{\"\"DT_BEGIN\"\":\"\"\" & StartDate & \"\"\",\"\"DT_END\"\":\"\"2030-01-01\"\"}\"),",
                "    Source = fxGetBigTimeData(\"report/data/215\", PostData),",
                "    FieldList = Source[FieldList],",
                "    #\"Converted to Table\" = Table.FromList(FieldList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Column Names\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"FieldNm\"}, {\"FieldNm\"})[FieldNm],",
                "    Custom1 = Source[Data],",
                "    #\"Converted to Table1\" = Table.FromList(Custom1, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Extracted Values\" = Table.TransformColumns(#\"Converted to Table1\", {\"Column1\", each Text.Combine(List.Transform(_, Text.From), \"|||||\"), type text}),",
                "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Extracted Values\", \"Column1\", Splitter.SplitTextByDelimiter(\"|||||\", QuoteStyle.Csv), {\"Column1.1\", \"Column1.2\", \"Column1.3\", \"Column1.4\", \"Column1.5\", \"Column1.6\", \"Column1.7\", \"Column1.8\", \"Column1.9\", \"Column1.10\", \"Column1.11\", \"Column1.12\", \"Column1.13\"}),",
                "    #\"Zip List Column Names\" = List.Zip( {Table.ColumnNames(#\"Split Column by Delimiter\"), #\"Column Names\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Split Column by Delimiter\",#\"Zip List Column Names\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Renamed Columns1\",{{\"alcstaffer_id\", \"StaffSID\"}, {\"alcproject_id\", \"ProjectSID\"}, {\"alctask_id\", \"TaskSID\"}, {\"alcperiod\", \"Period\"}, {\"alchours\", \"AllocatedHours\"}}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Renamed Columns\",{\"AllocatedHours\", \"Period\", \"TaskSID\", \"StaffSID\", \"ProjectSID\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"AllocatedHours\", type number}, {\"Period\", type date}, {\"TaskSID\", Int64.Type}, {\"StaffSID\", Int64.Type}, {\"ProjectSID\", Int64.Type}}),",
                "    #\"Sample Data\" = if #\"Email Address\" = \"sampledata\" then fxSampleData(\"Allocations\") else #\"Changed Type\"",
                "in",
                "    #\"Sample Data\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Report Level Measures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "Column1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "e9dc88c3-096a-4d61-8ccd-a729d1f3dea6",
            "sourceColumn": "Column1",
            "summarizeBy": "none"
          }
        ],
        "isHidden": true,
        "lineageTag": "e0625945-850f-4eb7-8335-52c55eee40b1",
        "measures": [
          {
            "name": "YTD Monthly Fees",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "",
              " VAR _MaxDate = CALCULATE( MAX( Dates[Date] ) , ALLSELECTED() )",
              " VAR _calc = CALCULATE( [Billable Fees] , KEEPFILTERS(Dates[Date] <= _MaxDate ), KEEPFILTERS( Dates[Year] = YEAR(_MaxDate)))",
              " RETURN _calc"
            ],
            "isHidden": true,
            "lineageTag": "3a57c67b-7efe-4f33-8b39-80b0e578c426"
          },
          {
            "name": "YTD Min",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "",
              "VAR _Max = CALCULATE(YEAR(MAX( Dates[Date] )) -1, ALLSELECTED())",
              "RETURN DATE( _Max , 1, 1)"
            ],
            "isHidden": true,
            "lineageTag": "a0935646-0556-4d03-8dbe-a7433b796d6d"
          },
          {
            "name": "Max Utilization",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "CALCULATE( MAXX( Staffers , [Raw Utilization %] ))",
            "isHidden": true,
            "lineageTag": "8b1278c9-0abb-4be9-811f-1bc9f46f44b6"
          },
          {
            "name": "Min Utilization",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "CALCULATE( MINX( Staffers , [Raw Utilization %] ))",
            "isHidden": true,
            "lineageTag": "fdb7e006-2bdd-4478-9a93-01a5c18719fd"
          },
          {
            "name": "YTD Monthly Avg Fees per Staffer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "",
              " VAR _calc = CALCULATE( [Billable Fees per FTE] )",
              " RETURN IF( MAX( Dates[Date] ) < [YTD Min] , BLANK() , _calc)"
            ],
            "isHidden": true,
            "lineageTag": "d0c4c255-6deb-4210-afa4-a8fdf9f0070e"
          },
          {
            "name": "Selected CY and PY Period Fees",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "",
              " VAR _MaxDate = CALCULATE( MAX( Dates[Date] ) , ALLSELECTED() )",
              " VAR _CY = CALCULATETABLE( VALUES( Dates[Date] ) , Dates[Date] <= _MaxDate && Dates[Year] = YEAR( _MaxDate ) )",
              " VAR _PY = SAMEPERIODLASTYEAR(_CY)",
              " VAR _Dates = UNION(_PY, _CY )",
              " VAR _calc = CALCULATE( [Billable Fees] , KEEPFILTERS(_Dates ) )",
              " RETURN _calc"
            ],
            "isHidden": true,
            "lineageTag": "c5c5ecaa-371e-4510-8253-45badb8781ea"
          },
          {
            "name": "YTD Fees",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "VAR _MaxDate = CALCULATE( MAX( Dates[Date]), ALLSELECTED(  )) ",
              "VAR _Fees = CALCULATE( [Billable Fees] , Dates[Date] <= _MaxDate && Dates[Year] = YEAR( _MaxDate ) )",
              "RETURN _Fees"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "lineageTag": "f3895a6a-bf5d-47e5-afc6-d444f5326fef"
          },
          {
            "name": "PYTD Fees",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "VAR _MaxDate = CALCULATE( MAX( Dates[Date]), ALLSELECTED(  )) ",
              "VAR _PYMaxDate = DATEADD(CALCULATETABLE( VALUES(Dates[Date]) , Dates[Date] <= _MaxDate && Dates[Year] = YEAR( _MaxDate ) ), -1, YEAR )",
              "VAR _Fees = CALCULATE( [Billable Fees] , _PYMaxDate )",
              "RETURN _Fees"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "lineageTag": "0b701b7b-9cc8-4095-ab66-247f6d731093"
          },
          {
            "name": "YTD Date Context",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "",
              "VAR _MaxDate = CALCULATE( MAX( Dates[Date] ), ALLSELECTED( ) )",
              "VAR _FormattedMaxDate = FORMAT( _MaxDate , \"MMM DD\")",
              "VAR _FormattedMinDate = FORMAT( DATE( YEAR( _MaxDate ), 1, 1) , \"MMM DD\")",
              "RETURN _FormattedMinDate & \" - \" & _FormattedMaxDate"
            ],
            "isHidden": true,
            "lineageTag": "b19d13fd-4e81-473b-9a16-25119b884365"
          },
          {
            "name": "YTD vs PYTD Fees Variance",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "[YTD Fees] - [PYTD Fees] ",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "lineageTag": "418aa2e9-9fd6-44d8-a7c3-7eb244cf2327"
          },
          {
            "name": "Selected CY Period Fees",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "",
              " VAR _MaxDate = CALCULATE( MAX( Dates[Date] ) , ALLSELECTED() )",
              " VAR _CY = CALCULATETABLE( VALUES( Dates[Date] ) , Dates[Date] <= _MaxDate && Dates[Year] = YEAR( _MaxDate ) )",
              " VAR _PY = SAMEPERIODLASTYEAR(_CY)",
              " VAR _Dates = UNION(_PY, _CY )",
              " VAR _calc = CALCULATE( [Billable Fees] , KEEPFILTERS(_CY ) )",
              " RETURN _calc"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "lineageTag": "07808ef7-4f3f-4be3-b8c2-fafd56cf116d"
          },
          {
            "name": "Selected PY Period Fees",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": [
              "",
              " VAR _MaxDate = CALCULATE( MAX( Dates[Date] ) , ALLSELECTED() )",
              " VAR _CY = CALCULATETABLE( VALUES( Dates[Date] ) , Dates[Date] <= _MaxDate && Dates[Year] = YEAR( _MaxDate ) )",
              " VAR _PY = SAMEPERIODLASTYEAR(_CY)",
              " VAR _Dates = UNION(_PY, _CY )",
              " VAR _calc = CALCULATE( [Billable Fees] , KEEPFILTERS(_PY ) )",
              " RETURN _calc"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "lineageTag": "2285fb8e-812f-4bf6-8653-0b15e0eff3ed"
          },
          {
            "name": "PY Average Bill Rate",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "CALCULATE( [Weighted Average Bill Rate] , 'YTD Tab Calculations'[Calculation group column] = \"Selected PY Period\")",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "lineageTag": "992c73b0-6cd4-4109-a76f-1df6298b9314"
          },
          {
            "name": "CY Average Bill Rate",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "CALCULATE( [Weighted Average Bill Rate] , 'YTD Tab Calculations'[Calculation group column] = \"Selected CY Period\")",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "lineageTag": "cf5553f5-8acd-45c0-b7bc-5f9cd4a34668"
          },
          {
            "name": "Min Staff Utilization",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "CALCULATE( MINX( Staffers , [Raw Utilization %] )  , ALL( Staffers[StaffSID] ) )",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%",
            "isHidden": true,
            "lineageTag": "65e21474-59a2-4ee4-9c84-659e5ad0b5fa"
          },
          {
            "name": "Max Staff Utilization",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "CALCULATE( MAXX( Staffers , [Raw Utilization %] )  , ALL( Staffers[StaffSID] ) )",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%",
            "isHidden": true,
            "lineageTag": "0eadc0e2-11ee-4f1f-8051-4a47e02003ba"
          },
          {
            "name": "Allocated Billable Hours with Note",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "IF( ISFILTERED( 'Time Entries'[Notes] ), BLANK() , Allocations[Allocated Billable Hours] )",
            "formatString": "#,0.00",
            "isHidden": true,
            "lineageTag": "70f80ea9-58f9-4e23-a36a-b00cb42cd661"
          },
          {
            "name": "Allocated Billable Hours Variance with Note",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "[Billable Hours] - [Allocated Billable Hours with Note] ",
            "formatString": "#,0.00",
            "isHidden": true,
            "lineageTag": "287ab921-3617-45f0-9035-cb5f33bb36c0"
          },
          {
            "name": "Allocated Nonbillable Hours with Note",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "IF( ISFILTERED( 'Time Entries'[Notes] ) , BLANK() , [Allocated Nonbillable Hours] )",
            "formatString": "#,0.00",
            "isHidden": true,
            "lineageTag": "214c03fe-faa0-4f26-bdfa-f743ab50172d"
          },
          {
            "name": "Allocated Nonbillable Hours Variance with Note",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "expression": "[Nonbillable Hours] - [Allocated Nonbillable Hours with Note] ",
            "isHidden": true,
            "lineageTag": "c96440f1-205a-4448-b4ba-17d369ee0523"
          }
        ],
        "partitions": [
          {
            "name": "Report Level Measures",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Titles and R\" = _t]),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Source,{{\"Titles and R\", \"Column1\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "YTD Tab Calculations",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Selected CY and PY Period Measure",
              "expression": [
                "",
                " VAR _MaxDate = CALCULATE( MAX( Dates[Date] ) , ALLSELECTED() )",
                " VAR _CY = CALCULATETABLE( VALUES( Dates[Date] ) , Dates[Date] <= _MaxDate && Dates[Year] = YEAR( _MaxDate ) )",
                " VAR _PY = SAMEPERIODLASTYEAR(_CY)",
                " VAR _Dates = UNION(_PY, _CY )",
                " VAR _calc = CALCULATE( SELECTEDMEASURE() , KEEPFILTERS(_Dates ) )",
                " RETURN _calc"
              ]
            },
            {
              "name": "Selected CY Period",
              "expression": [
                "VAR _MaxDate =",
                "    CALCULATE ( MAX ( Dates[Date] ), ALLSELECTED () )",
                "VAR _CY =",
                "    CALCULATETABLE (",
                "        VALUES ( Dates[Date] ),",
                "        Dates[Date] <= _MaxDate",
                "            && Dates[Year] = YEAR ( _MaxDate )",
                "    )",
                "VAR _PY =",
                "    SAMEPERIODLASTYEAR ( _CY )",
                "VAR _Dates =",
                "    UNION ( _PY, _CY )",
                "VAR _calc =",
                "    CALCULATE ( SELECTEDMEASURE (), KEEPFILTERS ( _CY ) )",
                "RETURN",
                "    _calc"
              ],
              "ordinal": 2
            },
            {
              "name": "Selected PY Period",
              "expression": [
                "VAR _MaxDate =",
                "    CALCULATE ( MAX ( Dates[Date] ), ALLSELECTED () )",
                "VAR _CY =",
                "    CALCULATETABLE (",
                "        VALUES ( Dates[Date] ),",
                "        Dates[Date] <= _MaxDate",
                "            && Dates[Year] = YEAR ( _MaxDate )",
                "    )",
                "VAR _PY =",
                "    SAMEPERIODLASTYEAR ( _CY )",
                "VAR _Dates =",
                "    UNION ( _PY, _CY )",
                "VAR _calc =",
                "    CALCULATE ( SELECTEDMEASURE(), KEEPFILTERS ( _PY ) )",
                "RETURN",
                "    _calc"
              ],
              "ordinal": 1
            }
          ],
          "precedence": 1
        },
        "columns": [
          {
            "name": "Calculation group column",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "6e9a494c-4df2-4aab-9cee-370bab278521",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "1d378371-b753-4ce7-89e0-b5dc2957da81",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "isHidden": true,
        "lineageTag": "c5ce8804-304a-48cc-8cee-023515e899c2",
        "partitions": [
          {
            "name": "YTD Tab Calculations",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "HasValidLicense",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Logical"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "HasValidLicense",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "isHidden": true,
            "lineageTag": "893723bd-331d-437b-8950-8736ad762a20",
            "sourceColumn": "HasValidLicense",
            "summarizeBy": "none"
          }
        ],
        "isHidden": true,
        "lineageTag": "b0ec3c6d-d47f-48df-8c0c-a91bff59524c",
        "partitions": [
          {
            "name": "HasValidLicense",
            "mode": "import",
            "queryGroup": "Licensing",
            "source": {
              "expression": [
                "let",
                "    Source = Json.Document(Web.Contents(#\"License Root URL\", [RelativePath=#\"Keys\"[TrialsPath] & \"?select=&email=fts.{{\" & #\"Email Address\" &\"}}\", Headers = [AzureAuth = Keys[AzureAuth] ]])),",
                "    Boolean = try Number.From(Date.From(DateTime.LocalNow()) - Date.From(DateTime.From(Source{0}[created_at]))) <= 31 otherwise false,",
                "    Custom1 = true //if Boolean = true then true else error Error.Record(\"You are not properly licensed for this product\", \"Your trial has expired or you do not have a valid subscription for this product. Visit standupanalytics.com or contact us for more details.\")",
                " //if Boolean = true then true else error Error.Record(\"You are not properly licensed for this product\", \"Your trial has expired or you do not have a valid subscription for this product. Visit standupanalytics.com or contact us for more details.\")",
                "",
                "in",
                "    Custom1"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Post History",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "HTTP Response",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "f6b64192-55a4-4323-814f-42f6df268eec",
            "sourceColumn": "HTTP Response",
            "summarizeBy": "sum"
          }
        ],
        "isHidden": true,
        "lineageTag": "21569c24-4b42-43c8-b87b-852d31616060",
        "partitions": [
          {
            "name": "Post History",
            "mode": "import",
            "queryGroup": "Licensing",
            "source": {
              "expression": [
                "let",
                "    Source = Value.Metadata(Web.Contents(#\"License Root URL\", [RelativePath=#\"Keys\"[RefreshHistoryPath], Headers = [AzureAuth = #\"Keys\"[AzureAuth]], Content = Json.FromValue([email = #\"Email Address\"])])),",
                "    Custom2 = Source[Response.Status],",
                "    Custom3 = {Custom2},",
                "    Custom1 = #table( 1, {Custom3}),",
                "    #\"Renamed Columns\" = Table.Buffer(Table.RenameColumns(Custom1,{{\"Column1\", \"HTTP Response\"}})),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"HTTP Response\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      }
    ]
  }
}